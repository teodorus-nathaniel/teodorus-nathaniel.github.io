{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Button.svelte","../../src/components/InputNumber.svelte","../../src/components/RadioButton.svelte","../../node_modules/svelte-awesome/components/svg/Path.svelte","../../node_modules/svelte-awesome/components/svg/Polygon.svelte","../../node_modules/svelte-awesome/components/svg/Raw.svelte","../../node_modules/svelte-awesome/components/svg/Svg.svelte","../../node_modules/svelte-awesome/components/Icon.svelte","../../node_modules/svelte-awesome/icons/close.js","../../node_modules/svelte-awesome/icons/remove.js","../../node_modules/svelte-awesome/icons/search-plus.js","../../node_modules/svelte-awesome/icons/search-minus.js","../../node_modules/svelte-awesome/icons/plus-circle.js","../../node_modules/svelte-awesome/icons/minus-circle.js","../../node_modules/svelte-awesome/icons/play-circle.js","../../node_modules/svelte-awesome/icons/pause-circle.js","../../src/components/DatasetValues.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/components/CreateDataset.svelte","../../src/components/SomPreview.svelte","../../src/data/data.ts","../../src/components/CustomizeModel.svelte","../../src/components/AnimationController.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte/motion/index.mjs","../../src/actions/pannable.ts","../../src/utils/getCoord.ts","../../src/stores/animationConfig.ts","../../src/components/Cartesian/CartesianPoint.svelte","../../src/components/Cartesian/CartesianLine.svelte","../../src/utils/getDistance.ts","../../src/utils/getNearestElement.ts","../../src/utils/getRainbowColors.ts","../../src/components/Cartesian/CartesianGraph.svelte","../../src/components/ZoomBar.svelte","../../src/core/som-linear.ts","../../src/core/som-2d.ts","../../src/components/SomController.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.28.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n  export let name: string;\n  export let color: string;\n  export let className: string = '';\n  export let handleClick: any;\n\n  let hover = false;\n  const handleHover = () => {\n    hover = !hover;\n  };\n</script>\n\n<button\n  on:mouseover={handleHover}\n  on:mouseout={handleHover}\n  on:click={handleClick}\n  class={`${color} ${className}`}\n  {name}\n>\n  {name}\n</button>\n\n<style type=\"text/scss\">\n  button {\n    cursor: pointer;\n    padding: 0.5em 1.25em;\n    transition: background-color 200ms ease-out, color 200ms ease-in;\n  }\n  .primary {\n    background-color: var(--primary);\n    color: #ffffff;\n    border: 1px solid #ffffff;\n  }\n  .secondary {\n    background-color: #ffffff;\n    color: var(--primary);\n    border: 1px solid var(--primary);\n  }\n  .tertiary {\n    background-color: #233a67;\n    color: white;\n  }\n  button {\n    transition: filter 150ms ease-out;\n  }\n  button:hover {\n    filter: brightness(1.2);\n  }\n</style>\n","<script lang=\"ts\">\n  export let name: string = \"\";\n  export let color: string;\n  export let disabled: boolean = false;\n  export let width = \"10ch\";\n  export let className: string = \"\";\n  export let value: string | number = \"\";\n  export let handleChange: svelte.JSX.EventHandler<Event, HTMLInputElement>;\n</script>\n\n<style type=\"text/scss\">\n  input {\n    padding: 0.5em 1.25em;\n  }\n  .primary {\n    background-color: #ffffff;\n    border: 1px solid var(--primary);\n  }\n  .primary:focus {\n    outline-color: var(--primary);\n  }\n  .secondary {\n    background-color: var(--primary);\n    color: #ffffff;\n    border: 1px solid #ffffff;\n  }\n  .secondary:focus {\n    outline-color: #ffffff;\n  }\n  .disabled {\n    background-color: rgba(100, 100, 100, 0.5);\n  }\n</style>\n\n<input\n  type=\"number\"\n  {name}\n  min={0}\n  class={`${color} ${className} ${disabled ? 'disabled' : ''}`}\n  style={`width: ${width}`}\n  {value}\n  {disabled}\n  on:change={handleChange} />\n","<script lang=\"ts\">\n  export let id: string;\n  export let name: string;\n  export let label: string;\n  export let className: string;\n  export let value: string;\n  export let selected: string;\n  export let handleChange: svelte.JSX.EventHandler<Event, HTMLInputElement>;\n</script>\n\n<style type=\"text/scss\">\n  input[type=\"radio\"]:checked {\n    color: var(--primary);\n  }\n</style>\n\n<div class={`flex-row flex items-center ${className}`}>\n  <input\n    class=\"mr-3\"\n    {id}\n    type=\"radio\"\n    {name}\n    {value}\n    checked={selected === value}\n    on:change={handleChange} />\n  <label for={id}>{label}</label>\n</div>\n","<path key=\"path-{id}\" {...data} />\n\n<script>\n  export let id = '';\n  export let data = {};\n</script>\n","<polygon key=\"polygon-{id}\" {...data} />\n\n<script>\n  export let id = '';\n  export let data = {};\n</script>\n","<g>\n{@html raw}\n</g>\n\n<script>\n  /* eslint-disable no-unused-vars, import/prefer-default-export */\n  let cursor = 0xd4937;\n  function getId() {\n    cursor += 1;\n    return `fa-${cursor.toString(16)}`;\n  }\n\n  let raw;\n\n  export let data;\n\n  function getRaw(data) {\n    if (!data || !data.raw) {\n      return null;\n    }\n    let rawData = data.raw;\n    const ids = {};\n    rawData = rawData.replace(/\\s(?:xml:)?id=[\"']?([^\"')\\s]+)/g, (match, id) => {\n      const uniqueId = getId();\n      ids[id] = uniqueId;\n      return ` id=\"${uniqueId}\"`;\n    });\n\n    rawData = rawData.replace(/#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g, (match, rawId, _, pointerId) => {\n      const id = rawId || pointerId;\n      if (!id || !ids[id]) {\n        return match;\n      }\n      return `#${ids[id]}`;\n    });\n    return rawData;\n  }\n\n  $: raw = getRaw(data);\n</script>\n","<svg version=\"1.1\" class=\"fa-icon {className}\"\n  class:fa-spin={spin} class:fa-pulse={pulse} class:fa-inverse={inverse}\n  class:fa-flip-horizontal=\"{flip === 'horizontal'}\" class:fa-flip-vertical=\"{flip === 'vertical'}\"\n  {x} {y} {width} {height}\n  aria-label={label}\n  role=\"{ label ? 'img' : 'presentation' }\"\n  viewBox={box} style={style}\n  >\n  <slot></slot>\n</svg>\n\n<style>\n.fa-icon {\n  display: inline-block;\n  fill: currentColor;\n}\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n.fa-spin {\n  animation: fa-spin 1s 0s infinite linear;\n}\n.fa-inverse {\n  color: #fff;\n}\n.fa-pulse {\n  animation: fa-spin 1s infinite steps(8);\n}\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n\n<script>\n  let className;\n\n  export { className as class };\n\n  export let width;\n  export let height;\n  export let box;\n\n  export let spin = false;\n  export let inverse = false;\n  export let pulse = false;\n  export let flip = null;\n\n  // optionals\n  export let x = undefined;\n  export let y = undefined;\n  export let style = undefined;\n  export let label = undefined;\n</script>\n","<Svg label={label} width={width} height={height} box={box} style={combinedStyle}\n  spin={spin} flip={flip} inverse={inverse} pulse={pulse} class={className}>\n  <slot>\n    {#if self}\n      {#if self.paths}\n        {#each self.paths as path, i}\n        <Path id=\"{i}\" data=\"{path}\"/>\n        {/each}\n      {/if}\n      {#if self.polygons}\n        {#each self.polygons as polygon, i}\n        <Polygon id=\"{i}\" data=\"{polygon}\"/>\n        {/each}\n      {/if}\n      {#if self.raw}\n        <Raw bind:data={self} />\n      {/if}\n    {/if}\n  </slot>\n</Svg>\n\n<script>\n  /* eslint-disable no-unused-vars */\n  import Path from './svg/Path.svelte';\n  import Polygon from './svg/Polygon.svelte';\n  import Raw from './svg/Raw.svelte';\n  import Svg from './svg/Svg.svelte';\n\n  let className = \"\";\n\n  export let data;\n  export let scale = 1;\n  export let spin = false;\n  export let inverse = false;\n  export let pulse = false;\n  export let flip = null;\n  export let label = null;\n  export let self = null;\n  export let style = null;\n  export { className as class };\n\n  // internal\n  let x = 0;\n  let y = 0;\n  let childrenHeight = 0;\n  let childrenWidth = 0;\n  let outerScale = 1;\n\n  let width;\n  let height;\n  let combinedStyle;\n  let box;\n\n  function init() {\n    if (typeof data === 'undefined') {\n      return;\n    }\n    const normalisedData = normaliseData(data);\n    const [name] = Object.keys(normalisedData);\n    const icon = normalisedData[name];\n    if (!icon.paths) {\n      icon.paths = [];\n    }\n    if (icon.d) {\n      icon.paths.push({\n        d: icon.d,\n      });\n    }\n    if (!icon.polygons) {\n      icon.polygons = [];\n    }\n    if (icon.points) {\n      icon.polygons.push({\n        points: icon.points,\n      });\n    }\n    self = icon;\n  }\n\n  function normaliseData(data) {\n    if ('iconName' in data && 'icon' in data) {\n      let normalisedData = {};\n      let faIcon = data.icon;\n      let name = data.iconName;\n      let width = faIcon[0];\n      let height = faIcon[1];\n      let paths = faIcon[4];\n      let iconData = {\n        width,\n        height,\n        paths: [{\n          d: paths\n        }]\n      }\n      normalisedData[name] = iconData;\n      return normalisedData;\n    }\n    return data;\n  }\n\n  function normalisedScale() {\n    let numScale = 1;\n    if (typeof scale !== 'undefined') {\n      numScale = Number(scale);\n    }\n    if (isNaN(numScale) || numScale <= 0) { // eslint-disable-line no-restricted-globals\n      console.warn('Invalid prop: prop \"scale\" should be a number over 0.'); // eslint-disable-line no-console\n      return outerScale;\n    }\n    return numScale * outerScale;\n  }\n\n  function calculateBox() {\n    if (self) {\n      return `0 0 ${self.width} ${self.height}`;\n    }\n    return `0 0 ${width} ${height}`;\n  }\n\n  function calculateRatio() {\n    if (!self) {\n      return 1;\n    }\n    return Math.max(self.width, self.height) / 16;\n  }\n\n  function calculateWidth() {\n    if (childrenWidth) {\n      return childrenWidth;\n    }\n    if (self) {\n      return (self.width / calculateRatio()) * normalisedScale();\n    }\n    return 0;\n  }\n\n  function calculateHeight() {\n    if (childrenHeight) {\n      return childrenHeight;\n    }\n    if (self) {\n      return (self.height / calculateRatio()) * normalisedScale();\n    }\n    return 0;\n  }\n\n  function calculateStyle() {\n    let combined = \"\";\n    if (style !== null) {\n      combined += style;\n    }\n    let size = normalisedScale();\n    if (size === 1) {\n      return combined;\n    }\n    if (combined !== \"\" && !combined.endsWith(';')) {\n      combined += '; ';\n    }\n    return `${combined}font-size: ${size}em`;\n  }\n\n   $: {\n    data; // this is needed to keep data up-to-date\n    style;\n    scale;\n    init();\n    width = calculateWidth();\n    height = calculateHeight();\n    combinedStyle = calculateStyle();\n    box = calculateBox();\n  }\n</script>\n","export default { close: { width: 1408, height: 1792, paths: [{ d: 'M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z' }] } };\n","export default { remove: { width: 1408, height: 1792, paths: [{ d: 'M1298 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z' }] } };\n","export default { 'search-plus': { width: 1664, height: 1792, paths: [{ d: 'M1024 800v64q0 13-9.5 22.5t-22.5 9.5h-224v224q0 13-9.5 22.5t-22.5 9.5h-64q-13 0-22.5-9.5t-9.5-22.5v-224h-224q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h224v-224q0-13 9.5-22.5t22.5-9.5h64q13 0 22.5 9.5t9.5 22.5v224h224q13 0 22.5 9.5t9.5 22.5zM1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 53-37.5 90.5t-90.5 37.5q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z' }] } };\n","export default { 'search-minus': { width: 1664, height: 1792, paths: [{ d: 'M1024 800v64q0 13-9.5 22.5t-22.5 9.5h-576q-13 0-22.5-9.5t-9.5-22.5v-64q0-13 9.5-22.5t22.5-9.5h576q13 0 22.5 9.5t9.5 22.5zM1152 832q0-185-131.5-316.5t-316.5-131.5-316.5 131.5-131.5 316.5 131.5 316.5 316.5 131.5 316.5-131.5 131.5-316.5zM1664 1664q0 53-37.5 90.5t-90.5 37.5q-54 0-90-38l-343-342q-179 124-399 124-143 0-273.5-55.5t-225-150-150-225-55.5-273.5 55.5-273.5 150-225 225-150 273.5-55.5 273.5 55.5 225 150 150 225 55.5 273.5q0 220-124 399l343 343q37 37 37 90z' }] } };\n","export default { 'plus-circle': { width: 1536, height: 1792, paths: [{ d: 'M1216 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'minus-circle': { width: 1536, height: 1792, paths: [{ d: 'M1216 960v-128q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v128q0 26 19 45t45 19h768q26 0 45-19t19-45zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","export default { 'play-circle': { width: 1536, height: 1792, paths: [{ d: 'M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zM1152 951q32-18 32-55t-32-55l-544-320q-31-19-64-1-32 19-32 56v640q0 37 32 56 16 8 32 8 17 0 32-9z' }] } };\n","export default { 'pause-circle': { width: 1536, height: 1792, paths: [{ d: 'M704 1184v-576q0-14-9-23t-23-9h-256q-14 0-23 9t-9 23v576q0 14 9 23t23 9h256q14 0 23-9t9-23zM1152 1184v-576q0-14-9-23t-23-9h-256q-14 0-23 9t-9 23v576q0 14 9 23t23 9h256q14 0 23-9t9-23zM1536 896q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z' }] } };\n","<script lang=\"ts\">\n  import { createEventDispatcher } from \"svelte\";\n  import Button from \"./Button.svelte\";\n\n  import InputNumber from \"./InputNumber.svelte\";\n\n  export let col: number;\n  export let row: number;\n\n  const dispatch = createEventDispatcher();\n\n  let data: number[][] = [];\n\n  const handleDataChange = (i: number, j: number) => (e) => {\n    data[i][j] = +e.target.value ?? 0;\n    data = data;\n  };\n\n  $: {\n    for (let i = 0; i < row; i++) {\n      for (let j = 0; j < col; j++) {\n        if (!data[i]) {\n          data[i] = [];\n        }\n        data[i][j] = data[i][j] ?? 0;\n      }\n    }\n    data = data;\n  }\n</script>\n\n<style type=\"text/scss\">\n  .column:first-child {\n    padding-left: 0;\n  }\n  .column:last-child {\n    padding-right: 0;\n  }\n</style>\n\n<div class=\"flex max-w-4xl mx-auto header overflow-auto\">\n  {#each Array.from({ length: col }) as _, j (j)}\n    <div class=\"flex flex-col p-3 column\">\n      <p class=\"text-white\">{'Feature ' + (j + 1)}</p>\n      {#each Array.from({ length: row }) as _, i (i)}\n        <InputNumber\n          handleChange={handleDataChange(i, j)}\n          color=\"secondary\"\n          className=\"mt-2 w-20 focus:background-color rounded-lg\"\n          value={data[i][j]} />\n      {/each}\n    </div>\n  {/each}\n</div>\n<div class=\"flex justify-end mt-8 max-w-4xl mx-auto\">\n  <Button\n    name=\"Use Dataset\"\n    className=\"rounded font-bold\"\n    handleClick={() => {\n      dispatch('save', data);\n    }}\n    color=\"tertiary\" />\n</div>\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script lang=\"ts\">\n  import Icon from 'svelte-awesome';\n  import { remove } from 'svelte-awesome/icons';\n  import InputNumber from './InputNumber.svelte';\n  import Button from './Button.svelte';\n  import DatasetValues from './DatasetValues.svelte';\n  import { fly, fade } from 'svelte/transition';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let row: number = 5,\n    col: number = 2;\n\n  let usedCol = col,\n    usedRow = row;\n\n  function handleChange(event) {\n    if (event.target.name === 'row') {\n      row = event.target.value;\n    } else if (event.target.name === 'col') {\n      col = event.target.value;\n    }\n  }\n\n  function handleClick(event) {\n    usedCol = col;\n    usedRow = row;\n  }\n</script>\n\n<div\n  class=\"flex-col p-10 create-dataset z-10\"\n  in:fly={{ x: 300, duration: 150 }}\n  out:fade\n>\n  <div class=\"create-dataset-container\">\n    <div class=\"flex-col relative max-w-4xl mx-auto header\">\n      <p class=\"font-bold text-4xl text-white mb-8\">Create Your Own Dataset!</p>\n      <p class=\"font-bold text-2xl text-white\">Dataset Shape</p>\n      <div class=\"flex items-center py-2\">\n        <div class=\"flex flex-col mt-2 mr-4\">\n          <p class=\"text-white\">Row</p>\n          <InputNumber\n            name=\"row\"\n            color=\"secondary\"\n            className=\"mt-2 w-20 focus:background-color rounded-lg\"\n            value={row}\n            {handleChange}\n          />\n        </div>\n        <div class=\"flex mt-8\"><span class=\"text-white mt-2\">x</span></div>\n        <div class=\"flex-col mt-2 ml-4\">\n          <p class=\"text-white\">Col</p>\n          <InputNumber\n            name=\"col\"\n            disabled\n            color=\"secondary\"\n            className=\"mt-2 w-20 focus:background-color rounded-lg\"\n            value={col}\n          />\n        </div>\n      </div>\n      <div class=\"mt-4 mb-8\">\n        <Button\n          name=\"Update Dataset Shape\"\n          color=\"tertiary\"\n          className=\"font-bold rounded-lg\"\n          {handleClick}\n        />\n      </div>\n      <button class=\"absolute top-0 right-0\" on:click={() => dispatch('close')}>\n        <Icon data={remove} class=\"text-white\" scale=\"2\" />\n      </button>\n    </div>\n    <DatasetValues\n      on:save={(e) => {\n        dispatch('save', e.detail);\n        dispatch('close');\n      }}\n      row={usedRow}\n      col={usedCol}\n    />\n  </div>\n</div>\n\n<style>\n  .create-dataset {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: var(--primary);\n    overflow: auto;\n  }\n  .create-dataset-container {\n    min-height: 100%;\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  export let type = \"linear\";\n  export let neuronCount = 25;\n\n  $: size = Math.floor(Math.sqrt(neuronCount));\n</script>\n\n<style>\n  .neuron {\n    width: 15px;\n    height: 15px;\n    background-color: var(--primary);\n    border-radius: 50%;\n    position: relative;\n    z-index: 1;\n  }\n  .line {\n    position: absolute;\n    width: 100%;\n    height: 1px;\n    background-color: rgba(77, 133, 241, 0.3);\n    top: 50%;\n    z-index: 0;\n    transform: translateY(-50%);\n  }\n  .row:not(:last-child) {\n    margin-bottom: 40px;\n  }\n  .abs-layer {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n  .line-vert {\n    height: 100%;\n    width: 15px;\n    position: relative;\n  }\n  .line-vert::after {\n    content: \"\";\n    background-color: rgba(77, 133, 241, 0.3);\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 1px;\n    height: 100%;\n  }\n</style>\n\n<div class=\"rounded p-8\" style=\"border: 1px solid var(--primary)\">\n  <div class=\"flex flex-col relative\">\n    {#if type === 'linear'}\n      <div class=\"relative flex justify-between\">\n        <div class=\"line\" />\n        {#each Array.from({ length: neuronCount }) as i}\n          <div class=\"neuron\" />\n        {/each}\n      </div>\n    {:else}\n      <div class=\"abs-layer flex justify-between\">\n        {#each Array.from({ length: size }) as _, i (i)}\n          <div class=\"line-vert\" />\n        {/each}\n      </div>\n      {#each Array.from({ length: size }) as _, i (i)}\n        <div class=\"relative flex justify-between row\">\n          <div class=\"line\" />\n          {#each Array.from({ length: size }) as _, j (j)}\n            <div class=\"neuron\" />\n          {/each}\n        </div>\n      {/each}\n    {/if}\n  </div>\n</div>\n","export let getNeurons = () => [\n    [\n        [5, 5],\n        [20, 20]\n    ],\n    [\n        [10, 1],\n        [50, 30]\n    ],\n    [\n        [40, 10],\n        [80, 40]\n    ]\n];\nconst randomPoint = () => {\n    const range = 200;\n    const min = -100;\n    return [\n        Math.floor(Math.random() * range + min),\n        Math.floor(Math.random() * range + min)\n    ];\n};\nexport let getPoints = (size) => Array.from({ length: size }).map(randomPoint);\n","<script lang=\"ts\">\n  import Button from './Button.svelte';\n  import InputNumber from './InputNumber.svelte';\n  import RadioButton from './RadioButton.svelte';\n  import CreateDataset from './CreateDataset.svelte';\n  import SomPreview from './SomPreview.svelte';\n  import { createEventDispatcher } from 'svelte';\n  import { fly, fade } from 'svelte/transition';\n  import { getPoints } from '../data/data';\n\n  const dispatch = createEventDispatcher();\n\n  let selected: string = '1';\n  let model: string = '2d';\n  let neuronCount = 9;\n  let learningRate = 0.5;\n  let epoch = 500;\n  let radius = 2;\n\n  let modelError = false;\n  let openCreateDataset = false;\n  let saveError = '';\n\n  let presetDatasetSize = 20;\n\n  let customDataset: number[][] = [];\n\n  $: {\n    if (\n      model === '2d' &&\n      Math.sqrt(neuronCount) > Math.floor(Math.sqrt(neuronCount))\n    ) {\n      modelError = true;\n    } else {\n      modelError = false;\n    }\n  }\n\n  function handleChange(event: any) {\n    selected = event.currentTarget.value;\n    if (selected === '2') {\n      openCreateDataset = true;\n    }\n  }\n\n  function handleChangeData(e: any) {\n    return Math.floor(e.target.value);\n  }\n\n  function handleChangeNeuronCount(e: any) {\n    neuronCount = handleChangeData(e);\n  }\n  function handleChangeEpoch(e) {\n    epoch = handleChangeData(e);\n  }\n  function handleChangeRadius(e) {\n    radius = handleChangeData(e);\n  }\n  function handleChangeLearningRate(e) {\n    radius = e.target.value;\n  }\n\n  function handleClick(event: any) {\n    model = event.target.name;\n  }\n\n  function handleChangePresetDataset(e) {\n    presetDatasetSize = e.target.value;\n  }\n\n  function handleSave() {\n    if (modelError) return;\n\n    if (neuronCount === 0) {\n      saveError = 'Neuron count must be at least 1!';\n    } else if (selected === '2' && customDataset.length === 0) {\n      saveError = 'Custom Dataset must have at least 1 point!';\n    } else if (learningRate <= 0 || radius <= 0 || epoch <= 0) {\n      saveError = 'Hyperparamters must be more than 0!';\n    }\n\n    const data = {\n      neuronCount,\n      type: model,\n      epoch,\n      radius,\n      learningRate,\n    };\n\n    if (selected === '1') {\n      dispatch('save', {\n        ...data,\n        dataset: getPoints(presetDatasetSize),\n      });\n    } else if (selected === '2') {\n      dispatch('save', {\n        ...data,\n        dataset: customDataset,\n      });\n    }\n  }\n</script>\n\n<div class=\"flex-col max-w-screen-xl mx-auto customize-model px-20 py-16\">\n  <div class=\"flex-col\">\n    <p class=\"font-bold text-4xl\">SOM Visualizer</p>\n    <p class=\"text-2xl\">Self Organizing Map</p>\n  </div>\n  <hr class=\"my-12\" />\n  <div class=\"flex\">\n    <div class=\"w-2/4\">\n      <p class=\"font-bold text-2xl mb-2\">Customize your model</p>\n      <div class=\"flex-col py-3\">\n        <p>Choose your prefered model type(Neighborhood type)</p>\n        <div class=\"flex pt-2\">\n          <Button\n            name=\"2d\"\n            color={`${model === '2d' ? 'primary' : 'secondary'}`}\n            className=\"mr-2 rounded-lg font-bold\"\n            {handleClick}\n          />\n          <Button\n            name=\"linear\"\n            color={`${model === 'linear' ? 'primary' : 'secondary'}`}\n            className=\"rounded font-bold\"\n            {handleClick}\n          />\n        </div>\n      </div>\n      <div class=\"py-3\">\n        <p>Neuron Count</p>\n        <div class=\"flex items-center mt-2\">\n          <InputNumber\n            value={neuronCount}\n            color=\"primary\"\n            className=\"focus:background-color rounded-lg\"\n            handleChange={handleChangeNeuronCount}\n          />\n          {#if modelError}\n            <div\n              class=\"flex flex-col ml-5\"\n              in:fly={{ x: 200, duration: 200 }}\n              out:fade\n            >\n              <p style=\"color: red; font-weight: bold; font-size: 12px\">\n                Invalid Dataset!\n              </p>\n              <p style=\"color: red; font-size: 12px\">2d model must be square</p>\n            </div>\n          {/if}\n        </div>\n      </div>\n    </div>\n    <div class=\"w-2/4\">\n      <SomPreview {neuronCount} type={model} />\n    </div>\n  </div>\n  <hr class=\"my-12\" />\n  <div>\n    <p class=\"font-bold text-2xl mb-2\">Hyperparameters</p>\n    <div class=\"flex mx-auto\">\n      <div class=\"py-3 pr-5\">\n        <p>Learning Rate</p>\n        <div class=\"flex items-center mt-2\">\n          <InputNumber\n            value={learningRate}\n            color=\"primary\"\n            className=\"focus:background-color rounded-lg\"\n            handleChange={handleChangeLearningRate}\n          />\n        </div>\n      </div>\n      <div class=\"py-3 px-5\">\n        <p>Epoch</p>\n        <div class=\"flex items-center mt-2\">\n          <InputNumber\n            value={epoch}\n            color=\"primary\"\n            className=\"focus:background-color rounded-lg\"\n            handleChange={handleChangeEpoch}\n          />\n        </div>\n      </div>\n      <div class=\"py-3 px-5\">\n        <p>Radius</p>\n        <div class=\"flex items-center mt-2\">\n          <InputNumber\n            value={radius}\n            color=\"primary\"\n            className=\"focus:background-color rounded-lg\"\n            handleChange={handleChangeRadius}\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n  <hr class=\"my-12\" />\n  <div class=\"flex-col\">\n    <p class=\"font-bold text-2xl mb-5\">Input Data</p>\n    <div class=\"flex-col my-2\">\n      <RadioButton\n        name=\"dataset\"\n        id=\"preset-dataset\"\n        label=\"Use Preset (Randomized 2D) Dataset\"\n        className=\"py-2\"\n        value=\"1\"\n        {selected}\n        {handleChange}\n      />\n      {#if selected === '1'}\n        <div class=\"mt-1 ml-8 mb-5\">\n          <p class=\"mb-1\">Dataset Size</p>\n          <InputNumber\n            color=\"primary\"\n            value={presetDatasetSize}\n            className=\"focus:background-color rounded-lg\"\n            handleChange={handleChangePresetDataset}\n          />\n        </div>\n      {/if}\n      <RadioButton\n        name=\"dataset\"\n        id=\"custom-dataset\"\n        label={`Use Custom Dataset (Shape: ${customDataset.length}x${customDataset[0] ? customDataset[0].length : 0})`}\n        className=\"py-2\"\n        value=\"2\"\n        {selected}\n        {handleChange}\n      />\n      {#if openCreateDataset}\n        <CreateDataset\n          on:save={(e) => {\n            customDataset = e.detail;\n          }}\n          on:close={() => (openCreateDataset = false)}\n        />\n      {/if}\n    </div>\n  </div>\n  <div class=\"mt-5 flex justify-end\">\n    <Button\n      name=\"Save\"\n      color=\"primary\"\n      className=\"mr-2 rounded-lg font-bold\"\n      handleClick={handleSave}\n    />\n  </div>\n</div>\n\n<style type=\"text/scss\">\n  .customize-model {\n    padding-bottom: 64px;\n  }\n  hr {\n    border: none;\n    height: 1px;\n    background-image: linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0),\n      rgba(0, 0, 0, 0.1),\n      rgba(0, 0, 0, 0)\n    );\n  }\n  .button-upload {\n    border: 1px solid var(--primary);\n    transition: box-shadow 150ms ease-out;\n  }\n  .button-upload:hover {\n    box-shadow: 0 3px 5px rgba(50, 50, 50, 0.1);\n  }\n</style>\n","<script lang=\"ts\">\n  import { createEventDispatcher } from \"svelte\";\n\n  import Icon from \"svelte-awesome\";\n  import {\n    plusCircle,\n    minusCircle,\n    playCircle,\n    pauseCircle\n  } from \"svelte-awesome/icons\";\n\n  const dispatch = createEventDispatcher();\n\n  let autoplay = false;\n  const handleAutoplay = (play: boolean) => {\n    autoplay = play;\n    dispatch(\"autoplay\", play);\n  };\n\n  let speed = 50;\n  $: {\n    dispatch(\"changeSpeed\", speed);\n  }\n</script>\n\n<style>\n  .root {\n    bottom: 0;\n    width: 100%;\n  }\n  .icon {\n    position: relative;\n    top: -1px;\n  }\n  .play-btn {\n    position: absolute;\n    right: 30px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n  .rounded-btn {\n    border-radius: 50%;\n    width: 35px;\n    height: 35px;\n    background: black;\n    color: white;\n  }\n  .skip-btn {\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n  .epoch-label {\n    position: relative;\n  }\n</style>\n\n<div class=\"absolute flex root floating-container\">\n  <div class=\"container relative flex justify-center items-center mx-auto\">\n    <h1 class=\"text-2xl mr-10\">Animation Speed</h1>\n    <div class=\"flex items-center\">\n      <div class=\"mx-2 icon\">\n        <Icon data={minusCircle} />\n      </div>\n      <input type=\"range\" min={0} step=\"10\" max={100} bind:value={speed} />\n      <div class=\"mx-2 icon\">\n        <Icon data={plusCircle} />\n      </div>\n    </div>\n    <div class=\"play-btn flex items-center\">\n      <p class=\"mx-2 epoch-label\">Autoplay</p>\n      <button\n        on:click={() => handleAutoplay(true)}\n        class={`${autoplay ? 'hidden' : ''}`}>\n        <Icon data={playCircle} scale=\"1.5\" />\n      </button>\n      <button\n        on:click={() => handleAutoplay(false)}\n        class={`${autoplay ? '' : 'hidden'}`}>\n        <Icon data={pauseCircle} scale=\"1.5\" />\n      </button>\n    </div>\n    <div class=\"skip-btn flex items-center\">\n      <p class=\"mx-2 epoch-label\">Skip Epoch</p>\n      <button\n        class=\"rounded-btn mx-2\"\n        on:click={() => dispatch('changeSkipEpoch', 10)}>\n        10\n      </button>\n      <button\n        class=\"rounded-btn mx-2\"\n        on:click={() => dispatch('changeSkipEpoch', 50)}>\n        50\n      </button>\n      <button\n        class=\"rounded-btn mx-2\"\n        on:click={() => dispatch('changeSkipEpoch', 100)}>\n        100\n      </button>\n      <button\n        class=\"rounded-btn mx-2\"\n        on:click={() => dispatch('changeSkipEpoch', 500)}>\n        500\n      </button>\n    </div>\n  </div>\n</div>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from '../store';\nimport { now, loop, assign } from '../internal';\nimport { linear } from '../easing';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value)\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled)\n                    task = null;\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","export function pannable(node) {\n    let x;\n    let y;\n    let needRaf = true;\n    function handleMousedown(event) {\n        x = event.clientX;\n        y = event.clientY;\n        node.dispatchEvent(new CustomEvent('panstart', {\n            detail: { x, y }\n        }));\n        window.addEventListener('mousemove', handleMousemove);\n        window.addEventListener('mouseup', handleMouseup);\n        needRaf = true;\n    }\n    const handleMove = (event) => {\n        const dx = event.clientX - x;\n        const dy = event.clientY - y;\n        x = event.clientX;\n        y = event.clientY;\n        node.dispatchEvent(new CustomEvent('panmove', {\n            detail: { x, y, dx, dy }\n        }));\n        needRaf = true;\n    };\n    function handleMousemove(event) {\n        if (needRaf) {\n            needRaf = false;\n            requestAnimationFrame(() => handleMove(event)); // request 60fps animation\n        }\n        ;\n    }\n    function handleMouseup(event) {\n        x = event.clientX;\n        y = event.clientY;\n        node.dispatchEvent(new CustomEvent('panend', {\n            detail: { x, y }\n        }));\n        window.removeEventListener('mousemove', handleMousemove);\n        window.removeEventListener('mouseup', handleMouseup);\n    }\n    node.addEventListener('mousedown', handleMousedown);\n    return {\n        destroy() {\n            node.removeEventListener('mousedown', handleMousedown);\n        }\n    };\n}\n","export default function getCoord(pos, scale, isX) {\n    return (isX ? 1 : -1) * pos * scale;\n}\n","import { writable } from \"svelte/store\";\nimport { cubicOut } from \"svelte/easing\";\nexport const animationConfig = writable({\n    duration: 500,\n    easing: cubicOut\n});\n","<script lang=\"ts\">\n  import { tweened } from \"svelte/motion\";\n  import { cubicOut } from \"svelte/easing\";\n\n  import type { Coord } from \"../../models/Coord\";\n  import getCoord from \"../../utils/getCoord\";\n  import { animationConfig } from \"../../stores/animationConfig\";\n\n  export let point: Coord;\n  export let scale: number;\n  export let color: string = \"#303030\";\n  export let small: boolean = false;\n  export let highlightPoint = false;\n\n  let tooltipWidth = 100,\n    tooltipHeight = 25;\n\n  let posX = tweened(point[0], $animationConfig);\n  let posY = tweened(point[1], $animationConfig);\n\n  let showTooltip = false;\n  let setShowToolTip = (show: boolean) => {\n    showTooltip = show;\n  };\n\n  let pointSize = (small ? 0.5 : 1) * 1 * scale;\n\n  $: {\n    posX.set(point[0]);\n    posY.set(point[1]);\n  }\n\n  let animatingPoint = false;\n  const animationDuration = 300;\n  let animatingPointSize = tweened(pointSize, {\n    duration: animationDuration,\n    easing: cubicOut\n  });\n  let intervalId = null;\n  $: {\n    const animating = () => {\n      animatingPointSize.set(pointSize * 1.5);\n      setTimeout(() => animatingPointSize.set(pointSize), animationDuration);\n    };\n    if (highlightPoint) {\n      animatingPoint = true;\n      animating();\n      intervalId = setInterval(animating, animationDuration * 2);\n    } else {\n      clearInterval(intervalId);\n      animatingPoint = false;\n    }\n  }\n\n  $: x = getCoord(point[0], scale, true);\n  $: y = getCoord(point[1], scale);\n</script>\n\n<style>\n  .text {\n    user-select: none;\n  }\n  .tooltip {\n    opacity: 0;\n    transition: opacity 300ms ease-out;\n  }\n  .tooltip.show {\n    opacity: 1;\n  }\n</style>\n\n<g\n  class={`tooltip ${showTooltip ? 'show' : ''} ${animatingPoint ? 'animating' : ''}`}>\n  <rect\n    x={x - tooltipWidth / 2}\n    y={y - (tooltipHeight + 1.5 * scale)}\n    width={tooltipWidth}\n    height={tooltipHeight}\n    rx=\"5px\"\n    ry=\"5px\"\n    class=\"tooltip-rect\" />\n  <text\n    class=\"text\"\n    text-anchor=\"middle\"\n    {x}\n    y={y - (tooltipHeight / 2 + 1.5 * scale - 4)}\n    fill=\"white\">\n    X:\n    {point[0].toFixed(2)}\n    Y:\n    {point[1].toFixed(2)}\n  </text>\n</g>\n{#if animatingPoint}\n  <circle\n    on:mouseenter={() => setShowToolTip(true)}\n    on:mouseleave={() => setShowToolTip(false)}\n    style={`stroke: ${color}; fill: transparent`}\n    cx={getCoord($posX, scale, true)}\n    cy={getCoord($posY, scale)}\n    r={$animatingPointSize + 5} />\n{/if}\n<circle\n  on:mouseenter={() => setShowToolTip(true)}\n  on:mouseleave={() => setShowToolTip(false)}\n  style={`fill: ${color}`}\n  cx={getCoord($posX, scale, true)}\n  cy={getCoord($posY, scale)}\n  r={animatingPoint ? $animatingPointSize : pointSize} />\n","<script lang=\"ts\">\n  import { tweened } from \"svelte/motion\";\n\n  import type { Coord } from \"../../models/Coord\";\n  import { animationConfig } from \"../../stores/animationConfig\";\n  import getCoord from \"../../utils/getCoord\";\n\n  export let pointA: Coord, pointB: Coord;\n  export let scale: number;\n  export let color: string = \"#c0c0c0\";\n\n  let posAX = tweened(pointA[0], $animationConfig);\n  let posAY = tweened(pointA[1], $animationConfig);\n  let posBX = tweened(pointB[0], $animationConfig);\n  let posBY = tweened(pointB[1], $animationConfig);\n\n  $: {\n    posAX.set(pointA[0]);\n    posAY.set(pointA[1]);\n    posBX.set(pointB[0]);\n    posBY.set(pointB[1]);\n  }\n</script>\n\n<line\n  x1={getCoord($posAX, scale, true)}\n  y1={getCoord($posAY, scale)}\n  x2={getCoord($posBX, scale, true)}\n  y2={getCoord($posBY, scale)}\n  style={`stroke: ${color}; stroke-width: 1`} />\n","export default function getDistance(data1, data2) {\n    let distance = 0;\n    for (let i = 0; i < data1.length; i++) {\n        distance += Math.pow(data1[i] - data2[i], 2);\n    }\n    return Math.sqrt(distance);\n}\n","import getDistance from \"./getDistance\";\nexport default function getNearestElement(weights, sample) {\n    let min = {\n        value: Infinity,\n        index: -1\n    };\n    for (let j = 0; j < weights.length; j++) {\n        let dist = getDistance(weights[j], sample);\n        if (dist < min.value) {\n            min.index = j;\n            min.value = dist;\n        }\n    }\n    return min.index;\n}\n","export default function getRainbowColors(h) {\n    let f = (n, k = (n + h * 12) % 12) => 0.5 - 0.5 * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    let rgb2hex = (r, g, b) => \"#\" +\n        [r, g, b]\n            .map((x) => Math.round(x * 255)\n            .toString(16)\n            .padStart(2, \"0\"))\n            .join(\"\");\n    return rgb2hex(f(0), f(8), f(4));\n}\n","<script lang=\"ts\">\n  import { spring } from 'svelte/motion';\n  import { onMount } from 'svelte';\n  import { pannable } from '../../actions/pannable';\n  import type { Coord } from '../../models/Coord';\n  import CartesianPoint from './CartesianPoint.svelte';\n  import CartesianLine from './CartesianLine.svelte';\n  import getNearestElement from '../../utils/getNearestElement';\n  import getRainbowColors from '../../utils/getRainbowColors';\n\n  export let neurons: Coord[][];\n  export let scale: number;\n  export let dataPoints: Coord[];\n  export let winningNeuron: number[], evaluatedPoint: number;\n\n  let lineSize = 10000;\n\n  let containerSize = { width: 0, height: 0 };\n  let springDefault = {\n    stiffness: 0.15,\n    damping: 0.8,\n    precision: 0.001,\n  };\n  let coords = spring(\n    {\n      x: 0,\n      y: 0,\n    },\n    springDefault\n  );\n\n  const handlePanMove = ((event) => {\n    coords.update((coords) => ({\n      x: coords.x - event.detail.dx,\n      y: coords.y - event.detail.dy,\n    }));\n  }) as any;\n\n  onMount(() => {\n    containerSize = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n    coords.damping = coords.stiffness = 1;\n    coords.set({\n      x: -window.innerWidth / 2,\n      y: -window.innerHeight / 2,\n    });\n\n    coords.damping = springDefault.damping;\n    coords.stiffness = springDefault.stiffness;\n  });\n\n  let colors = [];\n  $: {\n    colors = dataPoints.map((coord) => {\n      const allNeurons = neurons.reduce((acc, el) => [...acc, ...el], []);\n\n      const nearestIndex = getNearestElement(allNeurons, coord);\n      return nearestIndex;\n    });\n  }\n\n  $: length = neurons.length * neurons[0].length;\n</script>\n\n<div>\n  <svg\n    on:panmove={handlePanMove}\n    use:pannable\n    class=\"root\"\n    viewBox={`${$coords.x} ${$coords.y} ${containerSize.width} ${containerSize.height}`}\n    width={containerSize.width}\n    height={containerSize.height}\n  >\n    <line x1={-lineSize} y1={0} x2={lineSize} y2={0} />\n    <line x1={0} y1={-lineSize} x2={0} y2={lineSize} />\n    {#each neurons as row, i (i)}\n      {#each row as neuron, j (j)}\n        {#if neurons[i + 1] && neurons[i + 1][j]}\n          <CartesianLine pointA={neuron} pointB={neurons[i + 1][j]} {scale} />\n        {/if}\n        {#if neurons[i] && neurons[i][j + 1]}\n          <CartesianLine pointA={neuron} pointB={neurons[i][j + 1]} {scale} />\n        {/if}\n      {/each}\n    {/each}\n    {#each neurons as row, i (i)}\n      {#each row as neuron, j (j)}\n        <CartesianPoint\n          highlightPoint={i === winningNeuron[0] && j === winningNeuron[1]}\n          color={getRainbowColors((i * neurons.length + j) / length)}\n          point={neuron}\n          {scale}\n        />\n      {/each}\n    {/each}\n    {#each dataPoints as point, i (i)}\n      <CartesianPoint\n        color={getRainbowColors(colors[i] / length)}\n        {point}\n        {scale}\n        highlightPoint={i === evaluatedPoint}\n        small\n      />\n    {/each}\n  </svg>\n</div>\n\n<style type=\"text/scss\">\n  line {\n    stroke: black;\n    stroke-width: 1px;\n  }\n  svg {\n    cursor: grab;\n    &:active {\n      cursor: grabbing;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n    import { createEventDispatcher } from \"svelte\";\n    import Icon from \"svelte-awesome\";\n    import { searchPlus, searchMinus } from \"svelte-awesome/icons\";\n\n    export let scale: number;\n    const dispatch = createEventDispatcher();\n\n    $: dispatch(\"zoom\", scale);\n</script>\n\n<style type=\"text/scss\">\n    .root {\n        top: 50%;\n        left: 30px;\n        transform: translate(-50%, -50%) rotate(-90deg);\n    }\n\n    .icon {\n        transform: rotate(90deg);\n        margin: 0 10px;\n    }\n</style>\n\n<div class=\"absolute flex root floating-container\">\n    <div class=\"icon\">\n        <Icon data={searchMinus} />\n    </div>\n    <input type=\"range\" min={5} max={20} bind:value={scale} />\n    <div class=\"icon\">\n        <Icon data={searchPlus} />\n    </div>\n</div>\n","import getNearestElement from \"../utils/getNearestElement\";\nfunction update(weights, sample, bmu, LR, radius, currentIteration, maxIteration) {\n    const leftConstraint = Math.max(0, bmu - radius);\n    const rightConstraint = Math.min(bmu + radius, weights.length - 1);\n    for (let i = leftConstraint; i <= rightConstraint; i++) {\n        const weightToUpdate = weights[i];\n        const d = Math.abs(bmu - i);\n        const sigma = radius * Math.exp(-currentIteration / maxIteration);\n        const NS = Math.exp(-Math.pow(d, 2) / (2 * Math.pow(sigma, 2)));\n        for (let j = 0; j < weightToUpdate.length; j++) {\n            weights[i][j] += NS * LR * (sample[j] - weights[i][j]);\n        }\n    }\n    return weights;\n}\nfunction random() {\n    return Math.random() * 15 - 7.5;\n}\nexport default function* trainLinearSOM(data, neuronCount, LR, epochs, radius) {\n    const dataCount = data.length;\n    const pointCount = data[0].length;\n    let weights = Array.from({ length: neuronCount }).map(() => Array.from({ length: pointCount }).map(random));\n    yield { weights: [weights], epoch: 0 };\n    for (let i = 0; i < epochs; i++) {\n        for (let j = 0; j < dataCount; j++) {\n            const sample = data[j];\n            const bmu = getNearestElement(weights, sample);\n            yield { bmu: [0, bmu], dataIndex: [0, j], epoch: i + 1 };\n            weights = update(weights, sample, bmu, LR, radius, i + 1, epochs);\n            yield { epoch: i + 1, weights: [weights] };\n        }\n        yield { weights: [weights], epoch: i + 1 };\n    }\n}\n","import getNearestElement from \"../utils/getNearestElement\";\nfunction update(weights, sample, bmu, LR, radius, currentIteration, maxIteration) {\n    const size = Math.floor(Math.sqrt(weights.length));\n    const currentPosition = [Math.floor(bmu / size), bmu % size];\n    const leftConstraintRow = Math.max(0, currentPosition[0] - radius);\n    const rightConstraintRow = Math.min(currentPosition[0] + radius, weights.length / size - 1);\n    const leftConstraintCol = Math.max(0, currentPosition[1] - radius);\n    const rightConstraintCol = Math.min(currentPosition[1] + radius, weights.length / size - 1);\n    function updateData(position) {\n        const i = position[0] * size + position[1];\n        const weightToUpdate = weights[i];\n        const d = Math.abs(position[0] - currentPosition[0]) +\n            Math.abs(position[1] - currentPosition[1]);\n        const sigma = radius * Math.exp(-currentIteration / maxIteration);\n        const NS = Math.exp(-Math.pow(d, 2) / (2 * Math.pow(sigma, 2)));\n        for (let j = 0; j < weightToUpdate.length; j++) {\n            weights[i][j] += NS * LR * (sample[j] - weights[i][j]);\n        }\n    }\n    for (let i = leftConstraintRow; i <= rightConstraintRow; i++) {\n        const now = [i, currentPosition[1]];\n        updateData(now);\n    }\n    for (let i = leftConstraintCol; i <= rightConstraintCol; i++) {\n        const now = [currentPosition[0], i];\n        updateData(now);\n    }\n    return weights;\n}\nfunction random() {\n    return Math.random() * 15 - 7.5;\n}\nfunction generate2dWeights(weights) {\n    let size = Math.floor(Math.sqrt(weights.length));\n    let data = [];\n    for (let i = 0; i < size; i++) {\n        let row = [];\n        for (let j = 0; j < size; j++) {\n            row.push(weights[i * size + j]);\n        }\n        data.push(row);\n    }\n    return data;\n}\nexport function getPositionFromIndex(index, max) {\n    const size = Math.floor(Math.sqrt(max));\n    return [Math.floor(index / size), index % size];\n}\nexport default function* train2dSOM(data, neuronCount, LR, epochs, radius) {\n    const dataCount = data.length;\n    const pointCount = data[0].length;\n    let weights = Array.from({ length: neuronCount }).map(() => Array.from({ length: pointCount }).map(random));\n    yield { weights: generate2dWeights(weights), epoch: 0 };\n    for (let i = 0; i < epochs; i++) {\n        for (let j = 0; j < dataCount; j++) {\n            const sample = data[j];\n            const bmu = getNearestElement(weights, sample);\n            yield {\n                bmu: getPositionFromIndex(bmu, weights.length),\n                dataIndex: j,\n                epoch: i + 1\n            };\n            weights = update(weights, sample, bmu, LR, radius, i + 1, epochs);\n            yield { epoch: i + 1, weights: generate2dWeights(weights) };\n        }\n        yield { weights: generate2dWeights(weights), epoch: i + 1 };\n    }\n}\n","<script lang=\"ts\">\n  import { createEventDispatcher, onDestroy, onMount } from \"svelte/internal\";\n  import AnimationController from \"./AnimationController.svelte\";\n  import CartesianGraph from \"./Cartesian/CartesianGraph.svelte\";\n  import ZoomBar from \"./ZoomBar.svelte\";\n  import trainLinearSOM from \"../core/som-linear\";\n  import train2dSOM from \"../core/som-2d\";\n  import type { Coord } from \"../models/Coord\";\n  import { close } from \"svelte-awesome/icons\";\n  import { fly, fade } from \"svelte/transition\";\n  import Icon from \"svelte-awesome\";\n\n  export let data: {\n    neuronCount: number;\n    type: string;\n    dataset: number[][];\n    epoch: number;\n    radius: number;\n    learningRate: number;\n  };\n\n  const dispatch = createEventDispatcher();\n\n  let scale = 10;\n\n  let pointsData = data.dataset;\n\n  const handleZoom = (zoom: CustomEvent<number>) => {\n    scale = zoom.detail;\n  };\n\n  const somFunc = data.type === \"linear\" ? trainLinearSOM : train2dSOM;\n  const som = somFunc(\n    data.dataset,\n    data.neuronCount,\n    data.learningRate,\n    data.epoch,\n    data.radius\n  );\n\n  let doneTraining = false;\n\n  let somValue = som.next().value;\n  let neurons: Coord[][] = somValue ? somValue.weights : [];\n\n  let winningNeuron = [-1, -1];\n  let evaluatedPoint = -1;\n  let currentEpoch = 0;\n\n  function onMouseWheel(e) {\n    if (e.deltaY > 0) scale = Math.max(1, scale - 1);\n    else scale = Math.min(20, scale + 1);\n  }\n\n  let showNotification = false;\n  let timeoutId = null;\n\n  function setTimeoutShowNotification() {\n    timeoutId = setTimeout(() => {\n      showNotification = true;\n    }, 3000);\n  }\n\n  onMount(() => {\n    setTimeoutShowNotification();\n  });\n\n  function continueSom() {\n    const iteration = som.next();\n    if (iteration.done || !iteration.value) {\n      doneTraining = true;\n      return;\n    }\n    neurons = iteration.value.weights ?? neurons;\n    winningNeuron = iteration.value.bmu ?? [-1, -1];\n    evaluatedPoint = iteration.value.dataIndex ?? -1;\n    currentEpoch = iteration.value.epoch;\n    showNotification = false;\n  }\n\n  let skipEpoch = 0;\n  let showLoading = false;\n  let iterationLeft = 0;\n  function doSomInBackground() {\n    if (iterationLeft <= 0 || doneTraining) {\n      setTimeoutShowNotification();\n      showLoading = false;\n      skipEpoch = 0;\n      return;\n    }\n    window.requestAnimationFrame(() => {\n      continueSom();\n      doSomInBackground();\n      iterationLeft -= 1;\n    });\n  }\n  $: {\n    if (skipEpoch >= 0 && !doneTraining) {\n      iterationLeft = 2 * skipEpoch * pointsData.length + skipEpoch;\n      showLoading = true;\n      doSomInBackground();\n    }\n  }\n\n  function handleKeyPressed(e) {\n    if (e.keyCode === 10) {\n      dispatch(\"close\");\n    }\n    if (e.key !== \"Enter\") return;\n\n    continueSom();\n\n    clearTimeout(timeoutId);\n    setTimeoutShowNotification();\n  }\n\n  let autoplay = false;\n  let intervalId = null;\n  const DEFAULT_ANIMATION_SPEED = 3000;\n  let animationSpeed = 1500;\n  function handleAutoplay(data: CustomEvent<boolean>) {\n    autoplay = data.detail;\n  }\n  $: {\n    clearInterval(intervalId);\n    if (autoplay) {\n      intervalId = setInterval(continueSom, animationSpeed);\n    }\n  }\n  $: {\n    if (!autoplay) setTimeoutShowNotification();\n    else clearTimeout(timeoutId);\n  }\n\n  function handleSpeedChange(data: CustomEvent<number>) {\n    animationSpeed =\n      ((100 - data.detail) * DEFAULT_ANIMATION_SPEED) / 100 + 200;\n  }\n\n  onMount(() => {\n    window.addEventListener(\"mousewheel\", onMouseWheel);\n    window.addEventListener(\"keypress\", handleKeyPressed);\n  });\n\n  onDestroy(() => {\n    window.removeEventListener(\"mousewheel\", onMouseWheel);\n  });\n</script>\n\n<style>\n  .som-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: white;\n    z-index: 999;\n  }\n  .exit-btn {\n    position: absolute;\n    z-index: 99;\n    top: 30px;\n    right: 50px;\n  }\n  .notification {\n    position: absolute;\n    bottom: 80px;\n    font-size: 24px;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: white;\n    opacity: 0;\n    transition: opacity 300ms ease-out;\n  }\n  .notification.show {\n    animation: fade 2s linear infinite;\n  }\n  .full-screen-loading {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.5);\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 32px;\n    z-index: 999;\n    display: none;\n    font-weight: bold;\n  }\n  .full-screen-loading.show {\n    display: flex;\n  }\n  .data-container {\n    position: absolute;\n    left: 50px;\n    top: 30px;\n  }\n  @keyframes fade {\n    50% {\n      opacity: 1;\n    }\n  }\n</style>\n\n<div class=\"som-container\" in:fly={{ x: -300, duration: 300 }} out:fade>\n  <div class=\"data-container shadow-md px-8 py-5 rounded\">\n    <p class=\"text-lg\">Epoch: {currentEpoch}</p>\n  </div>\n  <button class=\"exit-btn\" on:click={() => dispatch('close')}>\n    <Icon scale=\"2\" data={close} />\n  </button>\n  <div class={`full-screen-loading ${showLoading ? 'show' : ''}`}>\n    Loading...\n  </div>\n  <p class={`notification flex flex-col ${showNotification ? 'show' : ''}`}>\n    {#if doneTraining}\n      <p class=\"text-center\">Training Complete.</p>\n      <p class=\"text-center\">Press CTRL+ENTER to go back to home...</p>\n    {:else}Press ENTER to continue...{/if}\n  </p>\n  <ZoomBar on:zoom={handleZoom} {scale} />\n  <AnimationController\n    on:changeSpeed={handleSpeedChange}\n    on:autoplay={handleAutoplay}\n    on:changeSkipEpoch={(data) => (skipEpoch = data.detail)} />\n  <CartesianGraph\n    {evaluatedPoint}\n    {winningNeuron}\n    {neurons}\n    {scale}\n    dataPoints={pointsData} />\n</div>\n","<script lang=\"ts\">\n  import CustomizeModel from \"./components/CustomizeModel.svelte\";\n\n  import SomController from \"./components/SomController.svelte\";\n  import Tailwind from \"./Tailwind.svelte\";\n\n  let openSomController = false;\n  let somData: {\n    neuronCount: number;\n    type: string;\n    dataset: number[][];\n    epoch: number;\n    radius: number;\n    learningRate: number;\n  } | null = null;\n</script>\n\n<Tailwind />\n<main>\n  <CustomizeModel\n    on:save={(e) => {\n      somData = e.detail;\n      openSomController = true;\n    }} />\n  {#if openSomController && somData}\n    <SomController\n      data={somData}\n      on:close={() => {\n        openSomController = false;\n        somData = null;\n      }} />\n  {/if}\n</main>\n","import App from \"./App.svelte\";\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","null_to_empty","value","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_svg_attributes","attributes","key","to_number","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","abort","started","create_out_transition","group","reset","destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","get_spread_update","levels","updates","to_null_out","accounted_for","create_component","mount_component","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","this","$destroy","index","splice","$$props","obj","$$set","keys","color","className","handleClick","disabled","width","handleChange","id","label","selected","raw","cursor","getRaw","rawData","ids","replace","match","uniqueId","toString","rawId","_","pointerId","height","box","spin","inverse","pulse","flip","y","paths","polygons","combinedStyle","scale","self","normalisedScale","numScale","Number","isNaN","console","warn","calculateRatio","normalisedData","faIcon","icon","iconName","iconData","normaliseData","points","combined","endsWith","calculateStyle","close","remove","search-plus","search-minus","plus-circle","minus-circle","play-circle","pause-circle","_a","col","row","j","cubicOut","fade","linear","getComputedStyle","opacity","fly","target_opacity","transform","od","u","usedCol","usedRow","important","setProperty","neuronCount","floor","sqrt","randomPoint","random","learningRate","handleChangeData","model","epoch","radius","modelError","openCreateDataset","presetDatasetSize","customDataset","currentTarget","dataset","minusCircle","plusCircle","playCircle","pauseCircle","autoplay","handleAutoplay","play","speed","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","is_date","prototype","spring","opts","stiffness","damping","precision","last_time","current_token","last_value","target_value","inv_mass","inv_mass_recovery_rate","cancel_task","token","hard","soft","rate","min","settled","dt","next_value","tick_spring","current_value","delta","velocity","getTime","isArray","fulfil","get_interpolator","arr","bi","interpolators","result","tweened","defaults","previous_task","interpolate","elapsed","pannable","needRaf","handleMousedown","clientX","clientY","CustomEvent","handleMousemove","handleMouseup","dx","dy","handleMove","getCoord","pos","isX","animationConfig","toFixed","tooltipWidth","tooltipHeight","point","small","highlightPoint","posX","$animationConfig","posY","showTooltip","setShowToolTip","show","pointSize","animatingPoint","animatingPointSize","intervalId","animating","setTimeout","setInterval","animationDuration","clearInterval","pointA","pointB","posAX","posAY","posBX","posBY","getDistance","data1","data2","distance","pow","getNearestElement","weights","sample","Infinity","dist","getRainbowColors","h","g","round","padStart","lineSize","action_result","neurons","dataPoints","winningNeuron","evaluatedPoint","containerSize","springDefault","coords","innerWidth","innerHeight","colors","coord","reduce","acc","el","searchMinus","searchPlus","bmu","LR","currentIteration","maxIteration","leftConstraint","rightConstraint","weightToUpdate","sigma","exp","NS","trainLinearSOM","epochs","dataCount","pointCount","dataIndex","currentPosition","leftConstraintRow","rightConstraintRow","leftConstraintCol","rightConstraintCol","updateData","position","generate2dWeights","getPositionFromIndex","train2dSOM","pointsData","som","doneTraining","somValue","currentEpoch","onMouseWheel","deltaY","showNotification","timeoutId","setTimeoutShowNotification","continueSom","_b","_c","iteration","done","skipEpoch","showLoading","iterationLeft","handleKeyPressed","keyCode","clearTimeout","animationSpeed","doSomInBackground","zoom","openSomController","somData","body"],"mappings":"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"}