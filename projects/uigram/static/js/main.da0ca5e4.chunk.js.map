{"version":3,"sources":["assets/images/uigram-transparent.png","assets/images/avatar.png","assets/images/profile-icon.png","assets/images/sharing-undraw.svg","assets/images/ideas-undraw.svg","components/navbar/navbar.component.tsx","components/icons/icon.component.tsx","components/icons/bookmark/bookmark.component.tsx","components/icons/followers/followers.component.tsx","components/icons/following/following.component.tsx","components/icons/icon-image.component.tsx","components/icons/sun/sun.component.tsx","redux/color-mode/color-mode.actions.ts","components/sidenav/sidenav.component.tsx","components/tab-layout/tab-layout.component.tsx","components/icons/comment/comment.component.tsx","components/icons/bookmark-add/bookmark-add.component.tsx","components/icons/like/like.component.tsx","redux/fetch/fetch.actions.ts","components/like-dislike/like-dislike.component.tsx","effects/useAnimation.effect.ts","utils/get-add-to-saved-listener.ts","components/timestamp/timestamp.component.tsx","components/follow-button/follow-button.component.tsx","components/post-preview/post-preview.component.tsx","components/error-message/error-message.component.tsx","components/loading/loading.component.tsx","components/post-preview-container/post-preview-container.component.tsx","pages/feeds-posts/feeds-posts.component.tsx","redux/post/post.actions.ts","pages/explore-posts/explore-posts.component.tsx","effects/usePrevious.effect.ts","pages/home-page/home-page.store.ts","pages/home-page/home-page.component.tsx","components/loading-error/loading-error.component.tsx","components/icons/angle/angle.component.tsx","components/icons/cross/cross.compnent.tsx","components/image-carousel/image-carousel.component.tsx","components/textbox/textbox.component.tsx","components/button/button.component.tsx","components/user-info/user-info.component.tsx","components/icons/reply/reply.component.tsx","components/comment-content/comment-content.component.tsx","components/comment-parent/comment-parent.component.tsx","redux/comments/comments.actions.ts","components/comments-container/comments-container.component.tsx","components/icons/arrow/arrow.component.tsx","components/comment-textarea/comment-textarea.component.tsx","components/post-details/post-details.component.tsx","effects/useFetchCleanup.effect.ts","pages/detail-page/detail-page.component.tsx","pages/saved-page/saved-page.component.tsx","components/icons/error/error.component.tsx","components/center-input/center-input.component.tsx","effects/useForm.effect.ts","utils/validations.ts","components/icons/update/update.component.tsx","components/update-profile-modal/update-profile-modal.component.tsx","redux/user/user.actions.ts","components/user-profile/user-profile.component.tsx","components/user-content/user-posts.component.tsx","components/user-follow/user-follow.component.tsx","redux/global-post-actions/global-post-actions.ts","redux/global-post-actions/global-post-reducer-helper.ts","redux/post/post.reducer.ts","redux/saved-posts/saved-posts.actions.ts","redux/saved-posts/saved-posts.reducer.ts","redux/color-mode/color-mode.reducer.ts","redux/post-detail/post-detail.actions.ts","redux/post-detail/post-detail.reducer.ts","redux/comments/comments.reducer.ts","redux/utils/cookie.ts","redux/user/user.reducer.ts","redux/fetch/fetch.reducer.ts","redux/add-post/add-post.actions.ts","redux/add-post/add-post.reducer.ts","redux/root-reducer.ts","redux/utils/create-fetch-func.ts","redux/fetch/fetch-saga-pattern-creator.ts","redux/utils/get-data-from-res.ts","redux/post/post.sagas.ts","redux/saved-posts/saved-posts.sagas.ts","redux/post-detail/post-detail.sagas.ts","redux/comments/comments.sagas.ts","redux/global-post-actions/global-post-sagas.ts","redux/user/user.sagas.ts","redux/add-post/add-post.sagas.ts","redux/root-saga.ts","redux/store.ts","redux/utils/fetch.ts","effects/useFetch.effect.ts","components/user-content/user-content.component.tsx","components/user-content/user-following.component.tsx","components/user-content/user-followers.component.tsx","effects/useHash.effect.ts","pages/profile-page/profile-page.component.tsx","components/card-form/card-form.component.tsx","components/input-field/input-field.component.tsx","pages/login-page/login-page.component.tsx","pages/register-page/register-page.component.tsx","components/icons/plus/plus.component.tsx","components/upload-images/upload-images.components.tsx","components/post-description/post-description.components.tsx","pages/post-page/post-page.components.tsx","components/post-image/post-image.components.tsx","components/post-description-container/post-description-container.components.tsx","components/images-preview/images-preview.component.tsx","components/slide-bar/slide-bar.components.tsx","pages/add-post-page/post-input/post-input.component.tsx","components/icons/check/check.component.tsx","pages/add-post-page/post-confirmation-modal/post-confirmation-modal.component.tsx","pages/add-post-page/post-description-input/post-description-input.component.tsx","pages/add-post-page/post-link-input/post-link-input.component.tsx","components/icons/check-circle/check-circle.component.tsx","components/icons/cross-circle/cross-circle.component.tsx","pages/add-post-page/post-loading-modal/post-loading-modal.component.tsx","pages/add-post-page/add-post-page.component.tsx","routes/UserOnlyRoute.tsx","routes/GuestOnlyRoute.tsx","routes/main-route/main-route.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","navigations","user","link","text","inverted","noUser","Navbar","connect","self","data","usedNav","className","to","src","Logo","alt","map","key","Icon","defaultColor","colorMode","inDarkMode","viewBox","children","rotate","size","color","noHover","additionalData","dispatch","useState","isHovered","setIsHovered","onMouseEnter","undefined","onMouseLeave","style","width","height","xmlns","aria-hidden","focusable","transform","fontSize","preserveAspectRatio","BookmarkIcon","savedPosts","posts","otherProps","isAnimating","setIsAnimating","useEffect","onAnimationEnd","id","d","fill","FollowersIcon","props","stroke","FollowingIcon","IconImage","SunIcon","ColorModeActionAPI","changeColorMode","action","Sidenav","isScrolled","setIsScrolled","location","useLocation","handleScrolled","window","scrollY","addEventListener","removeEventListener","path","name","icon","pathname","onClick","document","body","classList","toggle","TabLayout","tabs","activeTab","setActiveTab","getSavedState","saveState","Array","from","length","scrollOffset","setScrollOffset","borderRef","useRef","prevState","newState","scrollTo","top","current","gsap","timeline","duration","css","opacity","tab","idx","s","setActiveTabAndSaveOffset","ref","left","CommentIcon","BookmarkAddIcon","LikeIcon","fetchApi","payload","fetchApiFail","fetchApiSuccess","LikeDislike","updateLikesOrDislikes","updateLikesOrDislikesComment","likeCount","dislikeCount","liked","disliked","forComment","like","dislike","useAnimation","entry","property","isIntersecting","target","getAddToSavedListener","post","dispatchAction","saved","Timestamp","timestamp","moment","fromNow","FollowButton","followUser","owner","followed","PostPreview","updateSaved","noFollowButton","useInView","triggerOnce","threshold","handleBookmarkAddClick","history","useHistory","title","images","commentsCount","username","push","ErrorMessage","message","Loading","margin","background","display","shapeRendering","attributeName","type","dur","repeatCount","keyTimes","values","PostPreviewContainer","noDataMessage","isFetching","fetchItem","error","dataLength","next","hasMore","scrollThreshold","loader","FeedsPosts","feeds","fetchController","errors","page","FEEDS","fetchFeedsPosts","loadFeedsPosts","loadExplorePosts","clearFeedsPosts","clearExplorePosts","ExplorePosts","explore","sortBy","sort","EXPLORE","fetchExplorePosts","setSort","prevSort","value","usePrevious","onChange","defaultValue","store","homePageStore","saveTabState","state","getTabState","tabNames","Components","HomePage","Component","LoadingError","isLoading","loadingSize","AngleIcon","CrossIcon","ImageCarousel","setSlideIndex","slideIndex","onDeleteClick","slide","change","image","Textbox","placeholder","Button","full","red","UserInfo","profilePic","ProfilePic","ReplyIcon","CommentContent","comment","replyHandler","animation","content","CommentParent","fetchReplies","parentId","limit","postReply","postId","showReplies","setShowReplies","showReplyInput","setShowReplyInput","replyInput","setReplyInput","hasFetch","repliesCount","replies","AvatarIcon","addComments","clearComments","addReplies","clearReplies","updateComments","addNewComment","addNewReply","CommentsContainer","comments","currentPostId","COMMENTS","fetchComments","commentsRef","fetchNext","useCallback","hash","setTimeout","behavior","getBoundingClientRect","ArrowIcon","CommentTextarea","ADD_NEW_COMMENT","buttonText","setComment","localError","setLocalError","rows","disabled","PostDetails","description","goBack","href","rel","useFetchCleanup","useDispatch","DetailPage","postDetail","POST_DETAIL","fetchPostDetail","match","params","SavedPage","SAVED_POSTS","fetchSavedPosts","ErrorIcon","CenterInput","label","useTextarea","htmlFor","useForm","initialState","successSubmit","setData","submitErrors","setErrors","validate","newLinkData","sameAsAttr","sameAs","isSame","charAt","toUpperCase","substr","validation","e","linkError","preventDefault","Object","entries","reduce","acc","element","validateEmail","email","test","String","toLowerCase","validateUsername","validatePassword","pass","isEmpty","validateUrlOrEmpty","url","validateUrl","UpdateIcon","UpdateProfileModal","UPDATE_USER","updateUser","isOpen","closeModal","haveUpdated","setImage","enableUpdate","setEnableUpdate","fullname","status","obj","file","handleChange","handleSubmit","prev","onSubmit","ProfilePlaceholder","files","includes","tempUrl","URL","createObjectURL","loadUser","loadSelf","login","loadUserPosts","unfollowUser","userChecked","logout","UserProfile","unfollow","follow","isSelf","openModal","setOpenModal","followersCount","followingCount","UserPosts","FETCH_USER_POSTS","fetchUserPosts","useRouteMatch","UserFollow","listUser","changeSaved","changeLikesOrDislikes","changePostLikesOrDislikes","changePostSaved","INITIAL_STATE","loadSavedPosts","loadPostDetail","setCookie","cname","cvalue","exdays","expires","Date","setTime","getTime","toUTCString","cookie","token","ca","decodeURIComponent","split","i","c","substring","indexOf","getCookie","isChecked","clearTempPost","addTempPost","addPost","removePost","changeDesc","changeLink","changeTitle","tempImage","reducers","response","updateExploreAndFeeds","operationCb","newPost","newFeeds","newExplore","item","newSaved","newSavedPosts","filter","el","newPosts","newPostsComments","updatePostDetail","updateCb","newPostDetail","newPostDetailFollow","newPostDetailUnfollow","newComments","commentIdx","findIndex","prevReplies","newComment","splice","updatedComments","found","j","newStateComments","find","newUpdatedComments","parent","attrib","newUser","updateUserAndSelfPosts","cb","newUserPosts","newSelfPosts","modify","newUnfollowSelf","newUnfollowUser","newFollowSelf","newFollowUser","tempFile","newImages","index","appReducer","combineReducers","rootReducer","createFetchFunction","fn","put","createFetchSagaPattern","getDataFromResponse","res","console","Error","watchFetchFeeds","watchFetchExplore","postSagas","getFetchInstance","get","takeLatest","all","call","fetchSavedPostsAsync","watchFetchSavedPosts","savedPostsSagas","fetchPostDetailAsync","watchFetchPostDetail","postDetailSagas","fetchCommentsAsync","fetchRepliesAsync","likeDislikeCommentAsync","addNewCommentAsync","addNewReplyAsync","watchFetchComments","watchFetchReplies","watchLikeDislikeComment","watchAddNewComment","watchAddNewReply","commentsSagas","patch","reply","updateLikesOrDislikesAsync","changeSavedAsync","watchUpdateLikesOrDislikes","watchAddOrRemoveSavedPost","globalPostSagas","modifiedCount","log","loginUserFromResponse","fetchUserAsync","loginAsync","registerAsync","fetchUserPostsAsync","checkUserAsync","followUserAsync","unfollowUserAsync","watchFetchUser","updateUserAsync","watchLogin","watchRegister","watchFetchUserPosts","watchCheckUser","watchFollowUser","watchUnfollowUser","watchLogout","watchUpdateUser","userSagas","getState","bodyFormData","FormData","set","headers","addUrlAsync","postNewPostAsync","watchAddUrl","watchPostNewPost","addPostSagas","imageUrl","getAddPostData","select","bodyData","forEach","append","takeLeading","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","compose","createStore","applyMiddleware","run","process","axios","create","baseURL","Authorization","useFetch","dataName","setIsFetching","setError","getData","components","users","UserContent","setHash","handleHashChange","val","useHash","ProfilePage","USER","fetchUser","displayUser","CardForm","additional","actionButtonText","actionText","main","sub","img","InputField","errorMessage","required","LoginPage","LOGIN","userChecking","CHECK_USER","password","SharingImage","RegisterPage","REGISTER","register","confirmPassword","isPasswordConfirmation","IdeasImage","PlusIcon","UploadImages","setImages","raw","copy","assign","handleDelete","preview","pop","concat","PostDescription","setSlide","activeSlide","setTitle","setDescription","PostPage","setActiveSlide","nav","ImagesPreview","onImageClick","activeImage","SlideBar","slides","PostInput","addUrlPost","CheckIcon","PostConfirmationOverlay","closeOverlay","confirmImage","validateTitle","PostDescriptionInput","desc","titleError","setTitleError","PostLinkInput","postNewPost","submitError","setSubmitError","setLinkError","CheckCircleIcon","CrossCircleIcon","PostLoadingModal","POST_NEW_POST","hasUploaded","AddPostPage","ADD_URL_POST","currentStep","setCurrentStep","inputRef","canMoveToNextStep","handleButtonClick","innerWidth","UserOnlyRoute","component","rest","render","GuestOnlyRoute","routes","guestOnly","userOnly","PostPagePlain","MainRoute","exact","App","checkUser","add","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":";kGAAAA,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,oDCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,w/BCcrCC,EAAc,CAClBC,KAAM,CACJ,CACEC,KAAM,YACNC,KAAM,qBACNC,UAAU,GAEZ,CACEF,KAAM,gBACNC,KAAM,YAGVE,OAAQ,CACN,CACEH,KAAM,YACNC,KAAM,WACNC,UAAU,GAEZ,CACEF,KAAM,SACNC,KAAM,WA0BZ,IAKeG,EADAC,aAJS,SAAC,GAAD,MAAgD,CACtEN,KADsB,EAAGA,KAAQO,KAAQC,QAI5BF,EAzBf,YAAwC,IAChCG,EAD+B,EAAfT,KACCD,EAAYC,KAAOD,EAAYK,OAEtD,OACE,yBAAKM,UAAU,UACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMC,GAAG,KACP,yBAAKC,IAAKC,IAAMC,IAAI,WAGxB,4BACGL,EAAQM,KAAI,gBAAGd,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,SAAf,OACX,wBAAIa,IAAKf,EAAMS,UAAS,UAAKP,EAAW,WAAa,KACnD,kBAAC,IAAD,CAAMQ,GAAIV,GAAOC,Y,gICS7B,IAKee,EADFX,aAJW,SAAC,GAAD,MAAiD,CACvEY,aADsB,EAAGC,UAAaC,WACX,QAAU,WAG1Bd,EA7Cb,YAWW,IAVTe,EAUQ,EAVRA,QACAC,EASQ,EATRA,SASQ,IARRC,cAQQ,MARC,IAQD,MAPRC,YAOQ,MAPD,EAOC,EANRC,EAMQ,EANRA,MAMQ,IALRC,eAKQ,SAJRR,EAIQ,EAJRA,aACAR,EAGQ,EAHRA,UAEGiB,GACK,EAFRC,SAEQ,kBACR,EAAoCC,oBAAS,GAA7C,mBAAQC,EAAR,KAAmBC,EAAnB,KAIA,OACE,uCACEC,aAAcN,OAAUO,EALH,kBAAMF,GAAa,IAMxCG,aAAcR,OAAUO,EALH,kBAAMF,GAAa,IAMxCrB,UAAS,sBAAiBA,GAAa,IACvCyB,MAAO,CACLC,MAAM,GAAD,OAAKZ,EAAL,MACLa,OAAO,GAAD,OAAKb,EAAL,MACNC,MAAOK,EAAY,UAAYL,GAAgBP,IAE7CS,GACJ,yBACEW,MAAM,6BACNC,cAAY,OACZC,UAAU,QACVJ,MAAM,MACNC,OAAO,MACPF,MAAO,CAAEM,UAAU,UAAD,OAAYlB,EAAZ,QAA0BmB,SAAS,GAAD,OAAKlB,EAAL,OACpDmB,oBAAoB,gBACpBtB,QAASA,GACRC,O,4BCdT,IAMesB,EAFMtC,aAJG,SAAC,GAAD,MAAkD,CACxEuC,WADsB,EAAGA,WAAcA,WAChBC,SAGJxC,EAjCrB,YAImB,IAHjBuC,EAGgB,EAHhBA,WAEGE,GACa,EAFhBnB,SAEgB,kBAChB,EAAwCC,oBAAS,GAAjD,mBAAQmB,EAAR,KAAqBC,EAArB,KASA,OAPAC,qBACE,WACED,GAAe,KAEjB,CAAEJ,IAIF,kBAAC,EAAD,eACExB,QAAQ,aACJ0B,EAFN,CAGEI,eAAgB,kBAAMF,GAAe,IACrCvC,UAAWsC,EAAc,UAAY,GACrCI,GAAG,aACH,0BACEC,EAAE,kFACFC,KAAK,qBChCE,SAASC,EAAeC,GACrC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,eAAkBmC,GAC9B,uBACEf,UAAU,2DACVa,KAAK,eACLG,OAAO,QACP,0BACEJ,EAAC,2sCAkBH,0BACEA,EAAC,sPC3BI,SAASK,EAAeF,GACrC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,eAAkBmC,GAC9B,uBACEf,UAAU,2DACVa,KAAK,eACLG,OAAO,QACP,0BACEJ,EAAC,2yCAmBH,0BACEA,EAAC,ujBASH,0BACEA,EAAC,sIAGH,0BACEA,EAAC,qIAGH,0BACEA,EAAC,sIC/CI,SAASM,EAAT,GAQZ,IAPD/C,EAOA,EAPAA,IAOA,IANAE,WAMA,MANM,OAMN,MALAU,YAKA,MALO,EAKP,EACA,OACE,yBAAKd,UAAU,OAAOyB,MAAO,CAAEC,MAAM,GAAD,OAAKZ,EAAL,OAAgBa,OAAO,GAAD,OAAKb,EAAL,SACxD,yBAAKZ,IAAKA,EAAKE,IAAKA,KCVX,SAAS8C,EAASJ,GAC/B,OACE,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC5B,0BACEH,EAAE,8MACFC,KAAK,iBAEP,0BAAMD,EAAE,4BAA4BC,KAAK,iBACzC,0BAAMD,EAAE,8BAA8BC,KAAK,iBAC3C,0BAAMD,EAAE,8BAA8BC,KAAK,iBAC3C,0BAAMD,EAAE,6BAA6BC,KAAK,iBAC1C,0BACED,EAAE,0DACFC,KAAK,iBAEP,0BACED,EAAE,qDACFC,KAAK,iBAEP,0BACED,EAAE,uDACFC,KAAK,iBAEP,0BACED,EAAE,uDACFC,KAAK,kB,qBCnBEO,EAJY,CACzBC,gBAL6BC,YADE,sBCyGjC,IAKeC,EADC1D,YAAQ,MAJG,SAACsB,GAAD,MAAyB,CAClDkC,gBAAiB,kBAAMlC,EAASiC,EAAmBC,uBAGrCxD,EA3FhB,YAAoD,IAA3BwD,EAA0B,EAA1BA,gBACvB,EAAoCjC,oBAAS,GAA7C,mBAAQC,EAAR,KAAmBC,EAAnB,KACA,EAAsCF,oBAAS,GAA/C,mBAAQoC,EAAR,KAAoBC,EAApB,KAEMC,EAAWC,cAKjBlB,qBACE,WACE,SAASmB,IACHC,OAAOC,SAAW,KAAON,EAAYC,GAAc,GAC9CI,OAAOC,QAAU,IAAMN,GAAYC,GAAc,GAG5D,OADAI,OAAOE,iBAAiB,SAAUH,GAC3B,WACLC,OAAOG,oBAAoB,SAAUJ,MAGzC,CAAEJ,IAGJ,IAAMlE,EAAc,CAClB,CACE2E,KAAM,SACNC,KAAM,QACNC,KAAMhC,GAER,CACE8B,KAAM,0BACNC,KAAM,YACNC,KAAMlB,GAER,CACEgB,KAAM,0BACNC,KAAM,YACNC,KAAMrB,IAIV,OACE,2BACEvB,aArCqB,kBAAMD,GAAa,IAsCxCG,aArCqB,kBAAMH,GAAa,IAsCxCrB,UAAU,WACV,4BACE,wBAAIA,UAAS,wBAAmBuD,EAAa,GAAK,SAChD,kBAAC,IAAD,CAAMtD,GAAG,KACP,kBAACgD,EAAD,CAAW/C,IAAKC,IAAMC,IAAI,SAC1B,wCAGHf,EAAYgB,KAAI,gBAASE,EAAT,EAAG2D,KAAYD,EAAf,EAAeA,KAAMD,EAArB,EAAqBA,KAArB,OACf,wBAAI1D,IAAK0D,GACP,kBAAC,IAAD,CAAM/D,GAAI+D,GACR,kBAACzD,EAAD,CACES,SAAO,EACPD,MACEK,EACE,QACEqC,EAASU,WAAaH,EACxB,eAEAzC,IAIN,8BAAO0C,QAIb,wBACEG,QAAS,WACPhB,IACAiB,SAASC,KAAKC,UAAUC,OAAO,UAEjC,6BACE,kBAACtB,EAAD,CAASlC,SAAO,EAACD,MAAOK,EAAY,aAAUG,IAC9C,0BAAMvB,UAAU,UAAhB,qB,+BCtFG,SAASyE,EAAT,GAMJ,IALTC,EAKQ,EALRA,KACAC,EAIQ,EAJRA,UACAC,EAGQ,EAHRA,aACAC,EAEQ,EAFRA,cACAC,EACQ,EADRA,UAEA,EAA0C3D,mBACxC4D,MAAMC,KAAK,CAAEC,OAAQP,EAAKO,SAAU5E,KAAI,kBAAM,MADhD,mBAAQ6E,EAAR,KAAsBC,EAAtB,KAGMC,EAAYC,iBAAuB,MA+EzC,OAnEA7C,qBACE,WACE,GAAIqC,EAAe,CACjB,IAAMS,EAAYT,IAClB,IAAKS,EAAUX,YAAcW,EAAUJ,aAAc,OACrDN,EAAaU,EAAUX,WACvBQ,EAAgBG,EAAUJ,iBAG9B,CAAEL,EAAeD,IAGnBpC,qBACE,WACE,OAAO,WACL,GAAIsC,EAAW,CACb,IAAMS,EAAQ,YAAQL,GACtBK,EAASZ,GAAaf,OAAOC,QAC7BiB,EAAU,CACRH,YACAO,aAAcK,QAKtB,CAAET,EAAWH,EAAWO,IAG1B1C,qBACE,WACEoB,OAAO4B,SAAS,CACdC,IAAKP,EAAaP,OAGtB,CAAEA,EAAWO,IAGf1C,qBACE,WACM4C,EAAUM,SACZC,IACGC,WACA3F,GACCmF,EAAUM,QACV,CACEG,SAAU,GACVC,IAAK,CACHC,QAAS,IAGb,SAED9F,GACCmF,EAAUM,QACV,CACEG,SAAU,GACVC,IAAK,CACHC,QAAS,IAGb,YAIR,CAAEX,EAAWV,EAAMC,IAInB,yBAAK3E,UAAU,cACZ0E,EAAKrE,KAAI,SAAC2F,EAAKC,GAAN,OACR,yBAAKjG,UAAS,aAAQiG,IAAQtB,EAAY,UAAY,IAAMrE,IAAK0F,GAC/D,0BAAM5B,QAAS,kBAjFW,SAAC6B,GACjCd,GAAgB,SAACe,GACf,IAAMX,EAAQ,YAAQW,GAEtB,OADAX,EAASZ,GAAaf,OAAOC,QACtB0B,KAGTX,EAAaqB,GA0EcE,CAA0BF,KAAOD,OAG1D,yBACEI,IAAKhB,EACL3D,MAAO,CACL4E,KAAK,eAAD,OAA+B,EAAd3B,EAAKO,OAAtB,eAAmD,EAAZN,EAAvC,WAEN3E,UAAU,+B,MC7GH,SAASsG,EAAaxD,GACnC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC5B,0BACEH,EAAE,8NACFC,KAAK,kBCLE,SAAS2D,EAAiBzD,GACvC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC5B,0BACEH,EAAE,2FACFC,KAAK,kBCLE,SAAS4D,EAAS1D,GAChC,OACC,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC7B,0BACCH,EAAE,yIACFC,KAAK,kB,UCuEI6D,EAAWpD,YAJC,YAIiBqD,eAC7BC,EAAetD,YAJE,iBAM5BqD,eAEWE,EAAkBvD,YAPE,oBAS/BqD,eCnBF,IASeG,EADKjH,YAAQ,MARD,SAACsB,GAAD,MAAyB,CAClD4F,sBAAuB,SAACJ,GAAD,OACrBxF,EAASuF,EAAS,CAAExC,KAAM,2BAA4BnE,KAAM4G,MAC9DK,6BAA8B,SAC5BL,GAD4B,OAEzBxF,EAASuF,EAAS,CAAExC,KAAM,uBAAwBnE,KAAM4G,SAG3C9G,EAlEpB,YA0BG,IAzBD8C,EAyBA,EAzBAA,GACAsE,EAwBA,EAxBAA,UACAC,EAuBA,EAvBAA,aACAC,EAsBA,EAtBAA,MACAC,EAqBA,EArBAA,SACAnH,EAoBA,EApBAA,UAoBA,IAnBAc,YAmBA,MAnBO,IAmBP,EAlBAsG,EAkBA,EAlBAA,WACAN,EAiBA,EAjBAA,sBACAC,EAgBA,EAhBAA,6BAiBA,OACE,yBAAK/G,UAAS,uBAAkBA,GAAa,KAC3C,yBAAKA,UAAU,sBACb,kBAACwG,EAAD,CACE1F,KAAMA,EACNC,MAAOmG,EAAQ,eAAY3F,EAC3B6C,QAAS,WACP,IAAMsC,EAAU,CAAEW,MAAOH,EAAOxE,GAAIA,GAChC0E,EAAYL,EAA6BL,GACxCI,EAAsBJ,MAG/B,8BAAOM,IAET,yBAAKhH,UAAU,sBACb,kBAACwG,EAAD,CACE3F,OAAQ,IACRC,KAAMA,EACNC,MAAOoG,EAAW,eAAY5F,EAC9B6C,QAAS,WACP,IAAMsC,EAAU,CAAEY,SAAUH,EAAUzE,GAAIA,GACtC0E,GAAYL,EAA6BL,GAC7CI,EAAsBJ,MAG1B,8BAAOO,Q,QC3DA,SAASM,EACvBC,EACAC,GAEE,IADF5B,EACC,uDADkB,EAEnBrD,qBACC,WACKgF,GAASA,EAAME,gBAClB/B,IAAK1F,GAAGuH,EAAMG,OAAQ9B,EAAU,CAC/BC,IAAK2B,MAGR,CAAED,EAAO3B,EAAU4B,ICZN,SAASG,EACtBC,EACAC,GAEA,OAAO,WACLA,EAAe,CAAEC,OAAQF,EAAKE,MAAOF,KAAMA,K,2BCChC,SAASG,EAAT,GAAsD,IAAhCC,EAA+B,EAA/BA,UAAWjI,EAAoB,EAApBA,UAC9C,OACE,0BAAMA,UAAS,oBAAeA,GAAa,KACxCkI,IAAmB,IAAZD,GAAkBE,W,MCmBhC,IAYeC,EAHMxI,aATG,SAAC,GAAD,MAAgD,CACtEN,KADsB,EAAGA,KAAQO,KAAQC,SAIhB,SAACoB,GAAD,MAAyB,CAClDmH,WAAY,SAAC3B,GAAD,OACVxF,EAASuF,EAAS,CAAExC,KAAM,cAAenE,KAAM,CAAE4C,GAAIgE,UAGpC9G,EAzBrB,YAAiE,IAAnC0I,EAAkC,EAAlCA,MAAOhJ,EAA2B,EAA3BA,KAAM+I,EAAqB,EAArBA,WAEzC,OACE,kBAAC,WAAD,KACG/I,IAASgJ,EAAMC,SACd,8BACE,wCACA,0BAAMnE,QANY,kBAAMiE,EAAWC,EAAM5F,KAMP1C,UAAU,iBAA5C,WAIA,SC0EV,IAMewI,EADK5I,YAAQ,MALD,SAACsB,GAAD,MAAyB,CAClDuH,YAAa,SAAC/B,GAAD,OACXxF,EAASuF,EAAS,CAAExC,KAAM,eAAgBnE,KAAM4G,SAGhC9G,EAjFpB,YAA0E,IAA7CiI,EAA4C,EAA5CA,KAAMY,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,eAC9C,EAAyBC,YAAU,CACjCC,aAAa,EACbC,UAAW,KAFb,mBAAQzC,EAAR,KAAeoB,EAAf,KAKMsB,EAAyBlB,EAAsBC,EAAMY,GAErDM,EAAUC,cAEhBzB,EAAaC,EAAQ,CAAEzB,QAAS,GAAK,IAErC,IACErD,EAWEmF,EAXFnF,GACAuG,EAUEpB,EAVFoB,MACAX,EASET,EATFS,MACAY,EAQErB,EARFqB,OACAlC,EAOEa,EAPFb,UACAC,EAMEY,EANFZ,aACAkC,EAKEtB,EALFsB,cACAjC,EAIEW,EAJFX,MACAC,EAGEU,EAHFV,SACAc,EAEEJ,EAFFI,UACAF,EACEF,EADFE,MAGF,OACE,yBAAK/H,UAAU,2BAA2BoG,IAAKA,GAC7C,yBAAKpG,UAAU,mCACb,kBAAC,IAAD,CAAMC,GAAE,uBAAkByC,GAAM1C,UAAU,mBACxC,yBAAKA,UAAU,qBACf,yBAAKE,IAAKgJ,EAAO,GAAI9I,IAAI,UAE3B,yBAAKJ,UAAU,yBACb,yBAAKA,UAAU,sBACb,0BAAMA,UAAU,uBAAuBiJ,GACvC,yBAAKjJ,UAAU,wBACb,yCACA,kBAAC,IAAD,CACEC,GAAE,mBAAcqI,EAAM5F,IACtB1C,UAAU,wBACTsI,EAAMc,UAERV,EAAiB,KAAO,kBAAC,EAAD,CAAcJ,MAAOA,MAGlD,kBAAC,EAAD,CACEtB,UAAWA,EACXC,aAAcA,EACdC,MAAOA,EACPC,SAAUA,EACVzE,GAAIA,MAIV,yBAAK1C,UAAU,4BACb,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,iDACb,kBAACsG,EAAD,CACExF,KAAM,IACNsD,QAAS,kBAAM2E,EAAQM,KAAR,uBAA6B3G,EAA7B,iBAEjB,8BAAOyG,EAAP,cAEF,kBAAC5C,EAAD,CACEnC,QAAS0E,EACThI,KAAM,IACNC,MAAOgH,EAAQ,eAAYxG,KAG/B,kBAACyG,EAAD,CAAWC,UAAWA,S,YC3Ff,SAASqB,EAAT,GAMZ,IALDC,EAKA,EALAA,QACAzI,EAIA,EAJAA,KAKA,OACE,yBAAKd,UAAU,iBACb,0BAAMyB,MAAO,CAAEO,SAAS,GAAD,OAAKlB,GAAQ,EAAb,QAAuByI,I,kBCTrC,SAASC,EAAT,GAAqD,IAAD,IAAhC1I,YAAgC,MAAzB,IAAyB,EACjE,OACE,yBAAKd,UAAU,WACb,yBACE4B,MAAM,6BACNH,MAAO,CACLgI,OAAQ,OACRC,WAAY,OACZC,QAAS,QACTC,eAAgB,OAChBlI,MAAM,GAAD,OAAKZ,EAAL,MACLa,OAAO,GAAD,OAAKb,EAAL,OAERH,QAAQ,cACRsB,oBAAoB,YACpB,0BACEU,EAAE,6CACFC,KAAK,UACLG,OAAO,OACPhB,UAAU,yBACV,sCACE8H,cAAc,YACdC,KAAK,SACLC,IAAI,KACJC,YAAY,aACZC,SAAS,MACTC,OAAO,yBCZJ,SAASC,EAAT,GAOJ,IANT/H,EAMQ,EANRA,MACAgI,EAKQ,EALRA,cACAC,EAIQ,EAJRA,WACAC,EAGQ,EAHRA,UACAC,EAEQ,EAFRA,MACA7B,EACQ,EADRA,eAEA,OACE,yBAAK1I,UAAU,0BACK,IAAjBoC,EAAM6C,SAA+B,IAAfoF,GAAyBE,EAG9C,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEvK,UAAU,kCACVwK,WAAYpI,EAAM6C,OAClBwF,KAAMH,EACNI,SAAS,EACTC,gBAAgB,QAChBC,OAAQ,MACPxI,EAAM/B,KAAI,SAACwH,GAAD,OACT,kBAAC,EAAD,CACEa,eAAgBA,EAChBpI,IAAKuH,EAAKnF,GACVmF,KAAMA,QAIXwC,EACC,kBAACb,EAAD,CAAS1I,KAAM,MACbyJ,EACF,kBAACjB,EAAD,CAAcxI,KAAM,IAAKyI,QAASgB,IAChC,MAtBN,kBAACjB,EAAD,CAAcC,QAASa,EAAetJ,KAAM,K,MCwBpD,IAqBe+J,EAHIjL,aAlBK,SAAC,GAAD,IACdC,EADc,EACtBP,KAAQO,KACAiL,EAFc,EAEtBjD,KAAQiD,MAFc,IAGtBC,gBAAmBV,EAHG,EAGHA,WAAYW,EAHT,EAGSA,OAHT,MAIJ,CAClBnL,KAAMA,EACNiL,MAAOA,EAAM1I,MACb6I,KAAMH,EAAMG,KACZZ,WAAYA,EAAWa,MACvBX,MAAOS,EAAOE,UAGW,SAAChK,GAAD,MAAyB,CAClDiK,gBAAiB,SAACF,GAChB/J,EAASuF,EAAS,CAAExC,KAAM,QAASnE,KAAM,CAAEmL,eAI5BrL,EAnDnB,YAOW,IANTC,EAMQ,EANRA,KACAiL,EAKQ,EALRA,MACAT,EAIQ,EAJRA,WACAY,EAGQ,EAHRA,KACAE,EAEQ,EAFRA,gBACAZ,EACQ,EADRA,MAEA/H,qBACE,WACM6H,GAAcE,GACG,IAAjBO,EAAM7F,QAAyB,IAATgG,GAAYE,EAAgB,KAExD,CAAEA,EAAiBL,EAAOG,EAAMZ,EAAYE,IAG9C,IAAItG,EAAO,OAGX,OAFIpE,EAAKC,OAAMmE,EAAOpE,EAAKC,KAAKsJ,UAG9B,yBAAKpJ,UAAU,eACb,wBAAIA,UAAU,WAAd,YAAkCiE,GAClC,kBAACkG,EAAD,CACE/H,MAAO0I,EACPT,WAAYA,EACZE,MAAOA,EACPD,UAAW,kBAAMa,EAAgBF,EAAO,IACxCb,cAAa,uF,MC3Bd,IAKMgB,EAAiB/H,YALE,mBAO9BqD,eAEW2E,EAAmBhI,YARE,qBAUhCqD,eAEW4E,EAAkBjI,YAVE,qBAWpBkI,EAAoBlI,YAZE,uBCkDnC,IAqBemI,GAHM5L,aAlBG,SAAC,GAAD,IACd6L,EADc,EACtB5D,KAAQ4D,QADc,IAEtBV,gBAAmBV,EAFG,EAEHA,WAAYW,EAFT,EAESA,OAFT,MAGJ,CAClBS,QAASA,EAAQrJ,MACjB6I,KAAMQ,EAAQR,KACdS,OAAQD,EAAQE,KAChBtB,WAAYA,EAAWuB,QACvBrB,MAAOS,EAAOY,YAGW,SAAC1K,GAAD,MAAyB,CAClD2K,kBAAmB,SAACF,EAAcV,GAChC/J,EAASuF,EAAS,CAAExC,KAAM,UAAWnE,KAAM,CAAE6L,OAAMV,YAErDM,kBAAmB,kBAAMrK,EAASqK,SAGf3L,EApErB,YAQW,IAPT6L,EAOQ,EAPRA,QACAC,EAMQ,EANRA,OACAT,EAKQ,EALRA,KACAZ,EAIQ,EAJRA,WACAwB,EAGQ,EAHRA,kBACAN,EAEQ,EAFRA,kBACAhB,EACQ,EADRA,MAEA,EAA0BpJ,mBAASuK,GAAU,aAA7C,mBAAQC,EAAR,KAAcG,EAAd,KACMC,EC7BO,SAAyBC,GACtC,IAAM5F,EAAMf,mBAIZ,OAHA7C,qBAAU,WACR4D,EAAIV,QAAUsG,KAET5F,EAAIV,QDwBMuG,CAAYN,GAe7B,OAbAnJ,qBACE,WACM6H,GAAcE,IAEI,IAAnBkB,EAAQxG,QAAyB,IAATgG,GACxBc,IAAaJ,GAAQI,IAEtBF,EAAkBF,EAAM,KAG5B,CAAEE,EAAmBF,EAAMF,EAASM,EAAUd,EAAMZ,EAAYE,IAIhE,yBAAKvK,UAAU,iBACb,yBAAKA,UAAU,iCACb,2CACA,4BACEkM,SAAU,YAA4B,IAAfF,EAAc,EAAxBrE,OAAUqE,MACrBF,EAAQE,GACRT,KAEFY,aAAcR,GACd,4BAAQK,MAAM,aAAd,QACA,4BAAQA,MAAM,cAAd,gBAGJ,kBAAC7B,EAAD,CACEG,UAAW,kBAAMuB,EAAkBF,EAAMV,EAAO,IAChD7I,MAAOqJ,EACPlB,MAAOA,EACPF,WAAYA,EACZD,cAAa,8BEjEfgC,GAAQ,CACZpG,IAAK,IAYQqG,GATO,CACpBC,aAAc,SAAUC,GACtBH,GAAMpG,IAAMuG,GAEdC,YAAa,WACX,OAAOJ,GAAMpG,MCCXyG,GAAW,CAAE,aAAc,WAC3BC,GAAa,CAAE7B,EAAYW,IA+BjC,IAKemB,GADE/M,aAJO,SAAC,GAAD,MAAgD,CACtEN,KADsB,EAAGA,KAAQO,KAAQC,QAI1BF,EA7BjB,YAA0C,IAAhBN,EAAe,EAAfA,KACxB,EAAoC6B,mBAAS,GAA7C,mBAAQwD,EAAR,KAAmBC,EAAnB,KAEMgI,EAAYF,GAAW/H,GAE7B,OACE,yBAAK3E,UAAU,aACZV,EACC,kBAAC,WAAD,KACE,kBAACmF,EAAD,CACEE,UAAWA,EACXC,aAAcA,EACdF,KAAM+H,GACN3H,UAAWuH,GAAcC,aACzBzH,cAAewH,GAAcG,cAE9B,kBAACI,EAAD,OAGH,kBAAC,GAAD,U,MCzBO,SAASC,GAAT,GAKJ,IAJTjM,EAIQ,EAJRA,SACAkM,EAGQ,EAHRA,UACAvC,EAEQ,EAFRA,MACAwC,EACQ,EADRA,YAEA,OACE,kBAAC,WAAD,KACGD,EACC,kBAACtD,EAAD,CAAS1I,KAAMiM,IACbxC,EACF,kBAACjB,EAAD,CAAcC,QAASgB,IAEvB3J,G,MCpBO,SAASoM,GAAWlK,GACjC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC5B,0BAAMF,KAAK,eAAeD,EAAE,8BCHnB,SAASsK,GAAUnK,GAC9B,OACI,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC1B,0BAAMH,EAAE,4HAA4HC,KAAK,kBCKtI,SAASsK,GAAT,GAKJ,IAJThE,EAIQ,EAJRA,OACAiE,EAGQ,EAHRA,cACAC,EAEQ,EAFRA,WACAC,EACQ,EADRA,cAEMC,EAAQ,SAACC,GAAD,OAAoB,WAEhCJ,EADeC,EAAaG,KAI9B,OACE,yBAAKvN,UAAU,4BACb,yBACEA,UAAU,oBACVoE,QAASkJ,EAAM,GACf7L,MAAO,CAAEsE,QAASqH,GAAclE,EAAOjE,OAAS,EAAI,EAAI,YACxD,kBAAC+H,GAAD,CAAWnM,OAAQ,IAAKE,MAAM,WAEhC,yBACEf,UAAU,mBACVoE,QAASkJ,GAAO,GAChB7L,MAAO,CAAEsE,QAASqH,GAAc,EAAI,EAAI,YACxC,kBAACJ,GAAD,CAAWjM,MAAM,WAElBsM,EACC,yBAAKrN,UAAU,aAAaoE,QAAS,kBAAMiJ,EAAcD,KACvD,kBAACH,GAAD,CAAWlM,MAAM,WAEjB,KACJ,yBACEf,UAAU,sCACVyB,MAAO,CACLC,MAAM,eAAD,OAAiBwH,EAAOjE,OAAxB,KACLlD,UAAU,eAAD,OAAiB,IAAMmH,EAAOjE,OAASmI,EAAvC,QAEVlE,EAAO7I,KAAI,SAACmN,EAAOvH,GAAR,OACV,yBACEjG,UAAU,kCACVyB,MAAO,CAAEC,MAAM,eAAD,OAAiBwH,EAAOjE,OAAxB,MACd3E,IAAK2F,GACL,yBAAK/F,IAAKsN,EAAOpN,IAAI,W,0CCzClB,SAASqN,GAAT,GAOJ,IANTC,EAMQ,EANRA,YAMQ,IALR5D,YAKQ,MALD,OAKC,EAJR9J,EAIQ,EAJRA,UAIQ,IAHR0B,aAGQ,MAHA,OAGA,EAFRwK,EAEQ,EAFRA,SACAF,EACQ,EADRA,MAEA,OACE,2BACElC,KAAMA,EACN4D,YAAaA,EACb1N,UAAS,kBAAaA,GACtByB,MAAO,CAAEC,MAAOA,GAChBwK,SAAUA,EACVF,MAAOA,I,yDCdE,SAAS2B,GAAT,GAOJ,IANTvN,EAMQ,EANRA,IACAQ,EAKQ,EALRA,SACAZ,EAIQ,EAJRA,UACA4N,EAGQ,EAHRA,KACAC,EAEQ,EAFRA,IACGxL,EACK,kBACR,OACE,0CACErC,UAAS,iBAAYI,EAAM,MAAQ,GAA1B,YAAgCyN,EAAM,MAAQ,GAA9C,YAAoDD,EACzD,OACA,GAFK,YAEC5N,GAAa,KACnBqC,GACHzB,G,MCjBQ,SAASkN,GAAT,GAAqC,IAAhBxO,EAAe,EAAfA,KAC5ByJ,EAAUC,cAGhB,OACE,yBAAKhJ,UAAU,aACb,yBAAKE,IAAKZ,EAAKyO,YAAcC,KAAY5N,IAAI,YAC7C,0BAAMgE,QALe,kBAAM2E,EAAQM,KAAR,mBAAyB/J,EAAKoD,OAKvBpD,EAAK8J,W,MCb9B,SAAS6E,GAAWnL,GACjC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,eAAkBmC,GAC9B,0BACEH,EAAC,ulBAKDC,KAAK,kBCCE,SAASsL,GAAT,GAIJ,IAHTC,EAGQ,EAHRA,QACAC,EAEQ,EAFRA,aACAC,EACQ,EADRA,UAGE/F,EAQE6F,EARF7F,MACA5F,EAOEyL,EAPFzL,GACA4L,EAMEH,EANFG,QACApH,EAKEiH,EALFjH,MACAC,EAIEgH,EAJFhH,SACAF,EAGEkH,EAHFlH,aACAD,EAEEmH,EAFFnH,UACAiB,EACEkG,EADFlG,UAGF,OACE,yBAAKjI,UAAS,kBAAaqO,EAAY,UAAY,KACjD,yBAAKrO,UAAU,iBACb,kBAAC8N,GAAD,CAAUxO,KAAMgJ,IAChB,kBAACN,EAAD,CAAWC,UAAWA,EAAWjI,UAAU,8BAE7C,2BAAIsO,GACJ,yBAAKtO,UAAU,mDACb,kBAAC,EAAD,CACEoH,YAAU,EACV1E,GAAIA,EACJwE,MAAOA,EACPC,SAAUA,EACVH,UAAWA,EACXC,aAAcA,IAEfmH,EACC,0BAAMhK,QAASgK,GACb,kBAACH,GAAD,CAAWnN,KAAM,MADnB,UAGE,OCkEZ,IAQeyN,GADO3O,YAAQ,MAPH,SAACsB,GAAD,MAAyB,CAClDsN,aAAc,SAACC,EAAkBxD,GAAnB,IAAiCyD,EAAjC,uDAAyC,EAAzC,OACZxN,EAASuF,EAAS,CAAExC,KAAM,UAAWnE,KAAM,CAAEmL,OAAMyD,QAAOD,gBAC5DE,UAAW,SAACjM,EAAY4L,EAAiBM,GAA9B,OACT1N,EAASuF,EAAS,CAAExC,KAAM,gBAAiBnE,KAAM,CAAE4C,KAAI4L,UAASM,iBAG9ChP,EAvGtB,YAA2E,IAA5CuO,EAA2C,EAA3CA,QAASK,EAAkC,EAAlCA,aAAcG,EAAoB,EAApBA,UACpD,EAAwCxN,oBAAS,GAAjD,mBAAQ0N,EAAR,KAAqBC,EAArB,KACA,EAA8C3N,oBAAS,GAAvD,mBAAQ4N,EAAR,KAAwBC,EAAxB,KACA,EAAsC7N,mBAAS,IAA/C,mBAAQ8N,EAAR,KAAoBC,EAApB,KACMC,EAAW9J,kBAAO,GAExB,EAAyBsD,YAAU,CACjCC,aAAa,EACbC,UAAW,KAFb,mBAAQzC,EAAR,KAKAmB,EALA,KAKqB,CAAExB,QAAS,GAAK,IACrC,IAAQqJ,EAAiBjB,EAAjBiB,aAcR,OAZA5M,qBACE,WACM2L,EAAQkB,QACVF,EAASzJ,SAAU,GACW,IAArByJ,EAASzJ,UAAqC,IAAhBmJ,IACvCL,EAAaL,EAAQzL,GAAI,GACzByM,EAASzJ,SAAU,KAGvB,CAAEmJ,EAAaL,EAAcL,IAI7B,yBAAKnO,UAAU,oBAAoBoG,IAAKA,GACtC,kBAAC8H,GAAD,CACEC,QAASA,EACTC,aAAc,kBAAMY,GAAkB,MAExC,yBACEhP,UAAU,mBACVyB,MAAO,CAAEkI,QAASoF,EAAiB,OAAS,SAC5C,yBAAK/O,UAAU,+BACb,yBAAKE,IAAKoP,KAAYlP,IAAI,KAC1B,kBAACqN,GAAD,CACEC,YAAY,eACZ1B,MAAOiD,EACP/C,SAAU,YAA4B,IAAfF,EAAc,EAAxBrE,OAAUqE,MACrBkD,EAAclD,OAIpB,yBAAKhM,UAAU,6BACb,kBAAC2N,GAAD,CACE3N,UAAU,aACVoE,QAAS,kBAAM4K,GAAkB,KAFnC,UAKA,kBAACrB,GAAD,CACE3N,UAAU,YACVoE,QAAS,WACPuK,EAAUR,EAAQzL,GAAIuM,EAAYd,EAAQS,QAC1CM,EAAc,IACdF,GAAkB,KALtB,WAYJ,0BACEvN,MAAO,CAAEkI,QAA0B,IAAjByF,EAAqB,OAAS,UAChDpP,UAAU,qBACVoE,QAAS,kBAAM0K,GAAgBD,KAC9BA,EAAc,OAAS,OAJ1B,IAImCO,EAJnC,YAOA,yBACEpP,UAAU,UACVyB,MAAO,CAAEkI,QAASkF,EAAc,OAAS,SACxCV,EAAQkB,QACP,kBAAC,WAAD,KACGlB,EAAQkB,QAAQvP,KAAKO,KAAI,SAAC8N,GAAD,OACxB,kBAACD,GAAD,CAAgB5N,IAAK6N,EAAQzL,GAAIyL,QAASA,EAASE,WAAS,OAE7DF,EAAQiB,aAAejB,EAAQkB,QAAQvP,KAAKmF,OAAS,EACpD,0BACEjF,UAAU,qBACVoE,QAAS,kBACPoK,EAAaL,EAAQzL,GAAIyL,EAAQkB,QAASpE,KAAO,KAHrD,QAIQkD,EAAQiB,aAAejB,EAAQkB,QAAQvP,KAAKmF,OAJpD,kBAOE,MAGN,kBAACuE,EAAD,CAAS1I,KAAM,UCtDZyO,I,MAAclM,YARC,eAU1BqD,gBAEW8I,GAAgBnM,YAXC,kBAYjBoM,GAAapM,YAXC,cAazBqD,eAEWgJ,GAAerM,YAdC,gBAcqBqD,eACrCiJ,GAAiBtM,YAdC,kBAgB7BqD,eAEWkJ,GAAgBvM,YAjBE,kBAiBsBqD,eACxCmJ,GAAcxM,YAjBE,gBAiBoBqD,eCqCjD,IAoBeoJ,GAHWlQ,aAjBF,SAAC,GAAD,QACtBmQ,SAAYA,EADU,EACVA,SAAU9E,EADA,EACAA,KAAM2D,EADN,EACMA,OADN,IAEtB7D,gBAAmBV,EAFG,EAEHA,WAAYW,EAFT,EAESA,OAFT,MAGJ,CAClB+E,WACA9E,OACA+E,cAAepB,EACfvE,WAAYA,EAAW4F,SACvB1F,MAAOS,EAAOiF,aAGW,SAAC/O,GAAD,MAAyB,CAClDgP,cAAe,SAACtB,GAAD,IAAiB3D,EAAjB,uDAAgC,EAAGyD,EAAnC,uDAAmD,EAAnD,OACbxN,EAASuF,EAAS,CAAExC,KAAM,WAAYnE,KAAM,CAAE8O,SAAQ3D,OAAMyD,aAC9Dc,cAAe,kBAAMtO,EAASsO,UAGN5P,EAjG1B,YASW,IARTgP,EAQQ,EARRA,OACAmB,EAOQ,EAPRA,SACA1F,EAMQ,EANRA,WACAE,EAKQ,EALRA,MACA2F,EAIQ,EAJRA,cACAF,EAGQ,EAHRA,cACA/E,EAEQ,EAFRA,KACAuE,EACQ,EADRA,cAEMW,EAAc9K,iBAAuB,MACrC5B,EAAWC,cACXyL,EAAW9J,kBAAO,GAExB7C,qBACE,WACMoM,IAAWoB,IACbR,IACAU,EAActB,EAAQ,GACtBO,EAASzJ,SAAU,KAGvB,CAAE8J,EAAeU,EAAetB,EAAQoB,IAG1C,IAAMI,EAAYC,uBAChB,WACEH,EAActB,EAAQ3D,EAAO,KAE/B,CAAE2D,EAAQ3D,EAAMiF,IAuBlB,OApBA1N,qBACE,WAEI2M,EAASzJ,UACR2E,GACiB,cAAlB5G,EAAS6M,MACTH,EAAYzK,SAEZ6K,YAAW,WACLJ,EAAYzK,SACd9B,OAAO4B,SAAS,CACdgL,SAAU,SACV/K,IAAK0K,EAAYzK,QAAQ+K,wBAAwBhL,QAEpD,OAGP,CAAEhC,EAAUsM,EAAU1F,IAItB,yBAAKrK,UAAU,qBAAqBoG,IAAK+J,GAClB,IAApBJ,EAAS9K,SAA+B,IAAfoF,GAAyBE,EAGjD,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEvK,UAAU,8BACVwK,WAAYuF,EAAS9K,OACrBwF,KAAM2F,EACN1F,SAAS,EACTC,gBAAgB,QAChBC,OAAQ,MACPmF,EAAS1P,KAAI,SAAC8N,GAAD,OACZ,kBAAC,GAAD,CAAe7N,IAAK6N,EAAQzL,GAAIyL,QAASA,QAG5C9D,EACC,kBAACb,EAAD,CAAS1I,KAAM,MACbyJ,EACF,kBAACjB,EAAD,CAAcxI,KAAM,IAAKyI,QAASgB,IAChC,MAlBN,kBAACjB,EAAD,CAAcC,QAzDA,2BAyDwBzI,KAAM,QC9ErC,SAAS4P,GAAW5N,GACjC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,eAAkBmC,GAC9B,0BACEH,EAAC,wmBAMDC,KAAK,kB,MCmDb,IAee+N,GAHS/Q,aAZA,SAAC,GAAD,QACtBmL,gBAAmBC,EADG,EACHA,OADG,MAEJ,CAClBX,WAHsB,EACKA,WAEJuG,gBACvBrG,MAAOS,EAAO4F,oBAGW,SAAC1P,GAAD,MAAyB,CAClD0O,cAAe,SAAChB,EAAgBN,GAAjB,OACbpN,EAASuF,EAAS,CAAExC,KAAM,kBAAmBnE,KAAM,CAAE8O,SAAQN,kBAGzC1O,EA5DxB,YAOW,IANT8N,EAMQ,EANRA,YACAmD,EAKQ,EALRA,WACAjC,EAIQ,EAJRA,OACAvE,EAGQ,EAHRA,WACAE,EAEQ,EAFRA,MACAqF,EACQ,EADRA,cAEA,EAAgCzO,mBAAS,IAAzC,mBAAQgN,EAAR,KAAiB2C,EAAjB,KACA,EAAsC3P,mBAAS,IAA/C,mBAAQ4P,EAAR,KAAoBC,EAApB,KAOA,OACE,yBAAKhR,UAAU,oBACb,8BACEgM,MAAOmC,EACPjC,SAVe,SAAC,GAEmB,IAD7BF,EAC4B,EADtCrE,OAAUqE,MAEV8E,EAAW9E,IAQP0B,YAAaA,GAAe,mBAC5BuD,KAAM,IAER,yBAAKjR,UAAU,4BACb,kBAAC2N,GAAD,CACEuD,SAAU7G,EACVjG,QAAS,WACF+J,EAIA9D,IACHuF,EAAchB,EAAQT,GACtB6C,EAAc,IACdF,EAAW,KANXE,EAAc,4BASjBH,GAAc,WAEjB,0BAAM7Q,UAAU,mCACb+Q,GAAcxG,QCiDzB,IAMe4G,GADKvR,YAAQ,MALD,SAACsB,GAAD,MAAyB,CAClDuH,YAAa,SAAC/B,GAAD,OACXxF,EAASuF,EAAS,CAAExC,KAAM,eAAgBnE,KAAM4G,SAGhC9G,EAvFpB,YAA0D,IAA7BiI,EAA4B,EAA5BA,KACrBiB,EAAyBlB,EAAsBC,EADE,EAAtBY,aAE3BM,EAAUC,cAGdC,EAYEpB,EAZFoB,MACA1J,EAWEsI,EAXFtI,KACA4J,EAUEtB,EAVFsB,cACAzG,EASEmF,EATFnF,GACAqF,EAQEF,EARFE,MACAZ,EAOEU,EAPFV,SACAD,EAMEW,EANFX,MACAkK,EAKEvJ,EALFuJ,YACAnK,EAIEY,EAJFZ,aACAD,EAGEa,EAHFb,UACAsB,EAEET,EAFFS,MACAL,EACEJ,EADFI,UAGF,OACE,yBAAKjI,UAAU,WACb,kBAAC0Q,GAAD,CAAW1Q,UAAU,YAAYoE,QAAS,kBAAM2E,EAAQsI,YACxD,yBAAKrR,UAAU,6BACb,yBAAKA,UAAU,eACb,4BAAKiJ,GACL,yBAAKjJ,UAAU,0BACZT,EACC,uBAAG+R,KAAM/R,EAAMgS,IAAI,sBAAsB5J,OAAO,UAAhD,iBAIA,0BAAM3H,UAAU,gBAAhB,qBAEF,kBAACgI,EAAD,CAAWC,UAAWA,EAAWjI,UAAU,yBAG/C,yBAAKA,UAAU,0BACb,kBAAC,EAAD,CACEc,KAAM,IACNkG,UAAWA,EACXC,aAAcA,EACdC,MAAOA,EACPC,SAAUA,EACVzE,GAAIA,IAELqF,EACC,kBAAC,EAAD,CACE3D,QAAS0E,EACT/H,MAAM,UACND,KAAM,MAGR,kBAACyF,EAAD,CAAiBnC,QAAS0E,EAAwBhI,KAAM,QAK9D,yBAAKd,UAAU,eACb,0BAAMA,UAAU,kBAAhB,eACA,uBAAGA,UAAU,wBAAwBoR,IAGvC,yBAAKpR,UAAU,8BACb,0BAAMA,UAAU,kBAAhB,aACA,yBAAKA,UAAU,6BACb,kBAAC8N,GAAD,CAAUxO,KAAMgJ,IAChB,kBAAC,EAAD,CAAcA,MAAOA,MAIzB,yBAAKtI,UAAU,YACb,yBAAKA,UAAU,qCACb,kBAACsG,EAAD,CAAaxF,KAAM,MACnB,8BAAOqI,EAAP,cAEF,kBAAC,GAAD,CAAiByF,OAAQlM,IACzB,kBAAC,GAAD,CAAmBkM,OAAQlM,SC9FpB,SAAS8O,GAAiBlR,GACvC,IAAMY,EAAWuQ,cAEjBjP,qBACE,WACE,OAAO,WACLtB,EAAS0F,EAAgBtG,OAG7B,CAAEA,EAAKY,IC6CX,IAkBewQ,GAJI9R,aAdK,SAAC,GAAD,IACR+R,EADQ,EACtBA,WAAcA,WADQ,IAEtB5G,gBAAmBC,EAFG,EAEHA,OAFG,MAGJ,CAClBnD,KAAM8J,EACNtH,WALsB,EAEKA,WAGJuH,YACvBrH,MAAOS,EAAO4G,gBAGW,SAAC1Q,GAAD,MAAyB,CAClD2Q,gBAAiB,SAACnP,GAAD,OACfxB,EAASuF,EAAS,CAAExC,KAAM,cAAenE,KAAM,CAAE4C,aAGlC9C,EAtDnB,YAMW,IALTiI,EAKQ,EALRA,KACAgK,EAIQ,EAJRA,gBACAC,EAGQ,EAHRA,MACAzH,EAEQ,EAFRA,WACAE,EACQ,EADRA,MAEAiH,GAAgB,eAChB,MAAsCrQ,mBAAS,GAA/C,mBAAQiM,EAAR,KAAoBD,EAApB,KAYA,OAVA3K,qBACE,WACE,IAAQE,EAAOoP,EAAMC,OAAbrP,GACJ2H,GAAcE,GAAU1C,GAAQA,EAAKnF,KAAOA,GAEhDmP,EAAgBnP,KAElB,CAAEmP,EAAiBC,EAAOzH,EAAYE,EAAO1C,IAI7C,yBAAK7H,UAAU,eACb,kBAAC6M,GAAD,CAAcC,UAAWzC,EAAYE,MAAOA,GACzC1C,EACC,yBAAK7H,UAAU,yBACb,yBAAKA,UAAU,8BACb,kBAACkN,GAAD,CACEhE,OAAQrB,EAAKqB,OACbkE,WAAYA,EACZD,cAAeA,KAGnB,kBAAC,GAAD,CAAatF,KAAMA,KAEnB,U,MCRZ,IAeemK,GADGpS,aAdM,SAAC,GAAD,IACRuC,EADQ,EACtBA,WAAcA,WADQ,IAEtB4I,gBAAmBV,EAFG,EAEHA,WAAYW,EAFT,EAESA,OAFT,MAGJ,CAClB7I,WAAYA,EAAWC,MACvB6I,KAAM9I,EAAW8I,KACjBZ,WAAYA,EAAW4H,YACvB1H,MAAOS,EAAOiH,gBAEW,SAAC/Q,GAAD,MAAyB,CAClDgR,gBAAiB,SAACjH,GAAD,OACf/J,EAASuF,EAAS,CAAExC,KAAM,cAAenE,KAAM,CAAEmL,eAGnCrL,EA5ClB,YAMW,IALTuC,EAKQ,EALRA,WACAkI,EAIQ,EAJRA,WACA6H,EAGQ,EAHRA,gBACA3H,EAEQ,EAFRA,MACAU,EACQ,EADRA,KAWA,OATAzI,qBACE,WACM6H,GAAcE,GAClB2H,EAAgB,KAGlB,IAIA,yBAAKlS,UAAU,cACb,wBAAIA,UAAU,WAAd,eACA,kBAACmK,EAAD,CACEE,WAAYA,EACZjI,MAAOD,EACPiI,cAAa,uCACbE,UAAW,kBAAM4H,EAAgBjH,EAAO,IACxCV,MAAOA,Q,gDCrCA,SAAS4H,GAAWrP,GACjC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC5B,0BACEH,EAAE,mKACFC,KAAK,iBAEP,0BAAMD,EAAE,4BAA4BC,KAAK,kBCGhC,SAASwP,GAAT,GAQS,IAPtBnO,EAOqB,EAPrBA,KACA+H,EAMqB,EANrBA,MACAqG,EAKqB,EALrBA,MACArS,EAIqB,EAJrBA,UACAuK,EAGqB,EAHrBA,MACA2B,EAEqB,EAFrBA,SACAoG,EACqB,EADrBA,YAEA,OACE,yBACEtS,UAAS,sBAAiBsS,EAAc,aAAe,GAA9C,aAAqDtS,GAC5D,KACAsS,EAUA,8BACEtS,UAAWgM,EAAQ,SAAW,GAC9BA,MAAOA,EACP/H,KAAMA,EACNvB,GAAIuB,EACJiI,SAAUA,IAdZ,2BACElM,UAAWgM,EAAQ,SAAW,GAC9BlC,KAAK,OACL7F,KAAMA,EACN+H,MAAOA,EACPtJ,GAAIuB,EACJiI,SAAUA,IAWd,2BAAOqG,QAAStO,GAAOoO,GACvB,yBAAKrS,UAAU,sBAAsBqS,GAErC,kBAACF,GAAD,CACEnS,UAAS,gCAA2BuK,EAAQ,GAAK,SAAxC,YAAoD+H,EACzD,WACA,IACJxR,KAAM,MAER,yBAAKd,UAAS,uBAA0BuK,I,aCpD/B,SAASiI,GAWtBC,EACAC,GAQA,MAA0BvR,mBAASsR,GAAnC,mBAAQ3S,EAAR,KAAc6S,EAAd,KACA,EAAoCxR,mBAAmB,IAAvD,mBAAQyR,EAAR,KAAsBC,EAAtB,KAEA,SAASC,EAAU7O,EAAc+H,EAAY+G,GAC3C,IAAIxI,EAAQ,GACNyI,EAAalT,EAAKmE,GAAMgP,OAC9B,GAAID,GACF,GAAIlT,EAAKkT,GAAa,CACpB,IAAIE,EAASpT,EAAKkT,GAAYhH,QAAUA,EACpC+G,IACFG,EAASH,IAAgB/G,GAE3BzB,EAAQ2I,EACJ,GADU,UAEPF,EAAWG,OAAO,GAAGC,cACtBJ,EAAWK,OAAO,GAHV,sCAKX,CACL,IAAMC,EAAaxT,EAAKmE,GAAMqP,WAC9B/I,EAAQ+I,EAAaA,EAAWtH,GAAS,GAG3C,OAAOzB,EAuDT,MAAO,CAAEzK,EApDY,SAACyT,GACpB,IAKwB,EALxB,EAAwBA,EAAE5L,OAAlB1D,EAAR,EAAQA,KAAM+H,EAAd,EAAcA,MACRzB,EAAQuI,EAAS7O,EAAM+H,GAEvBzM,EAAOO,EAAKmE,GAAM1E,KACpBiU,EAAY,GACZjU,GAAQO,EAAKP,IACfiU,EAAYV,EAASvT,EAAMO,EAAKP,GAAMyM,MAAOA,GAE7C2G,EAAQ,6BACH7S,GADE,wBAEJmE,EAFI,aAAC,gBAGDnE,EAAKmE,IAHL,IAIH+H,MAAOA,EACPzB,WALG,eAOJhL,EAPI,aAAC,gBAQDO,EAAKP,IARL,IASHgL,MAAOiJ,KATJ,MAaPb,EAAQ,6BACH7S,GADE,mBAEJmE,EAFI,aAAC,gBAGDnE,EAAKmE,IAHL,IAIH+H,MAAOA,EACPzB,cAMa,SAACgJ,GACpBA,EAAEE,iBAEF,IAAIzI,EAAS0I,OAAOC,QAAQ7T,GAAM8T,QAEhC,SAACC,EAAD,GAA4B,IAAD,mBAAnBvT,EAAmB,KAAdwT,EAAc,KAC3B,IAAKA,EAAQR,WAAY,OAAOO,EAChC,IAAMtJ,EAAQuI,EAASxS,EAAKwT,EAAQ9H,OAEpC,OADIzB,GAAOsJ,EAAIxK,KAAKkB,GACbsJ,IACN,IAEHhB,EAAU7H,GAEY,IAAlBA,EAAO/F,QAEXyN,KAGyCE,EAAa,GAAID,GCnGvD,SAASoB,GAAeC,GAE7B,MADS,wJACCC,KAAKC,OAAOF,GAAOG,eAAiB,GAAK,gBAG9C,SAASC,GAAkBhL,GAChC,OAAOA,EAASnE,QAAU,EAAI,GAAK,gCAG9B,SAASoP,GAAkBC,GAChC,OAAOA,EAAKrP,QAAU,EAAI,0CAA4C,GAGjE,SAASsP,GAAS/U,EAAcwM,GACrC,YAAiBzK,IAAVyK,EACHA,EAAM/G,OAAS,EAAI,GAAnB,UAA2BzF,EAA3B,mBACA,GAGC,SAASgV,GAAoBC,GAClC,MAAY,KAARA,EAAmB,GAChBC,GAAYD,GAGd,SAASC,GAAaD,GAC3B,MAAO,0EAA0ER,KAC/EQ,GAEE,GACA,cCzBS,SAASE,GAAY7R,GAClC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC5B,0BACEH,EAAE,wOACFC,KAAK,kBCwMb,IAeegS,GAHYhV,aAZH,SAAC,GAAD,QACtBmL,gBAAmBV,EADG,EACHA,WAAYW,EADT,EACSA,OADT,MAEJ,CAClBX,WAAYA,EAAWwK,YACvBtK,MAAOS,EAAO6J,gBAGW,SAAC3T,GAAD,MAAyB,CAClD4T,WAAY,SAACxV,GAAD,OACV4B,EAASuF,EAAS,CAAExC,KAAM,cAAenE,KAAMR,SAGxBM,EA7L3B,YAOwB,IANtBN,EAMqB,EANrBA,KACAyV,EAKqB,EALrBA,OACAC,EAIqB,EAJrBA,WACAF,EAGqB,EAHrBA,WACAzK,EAEqB,EAFrBA,WACAE,EACqB,EADrBA,MAEM0K,EAAc5P,kBAAO,GAC3B,EAA4BlE,mBAIzB,CACD6K,MAAO1M,EAAKyO,WACZxD,MAAO,KANT,mBAAQiD,EAAR,KAAe0H,EAAf,KASA1S,qBACE,YACMyS,EAAYvP,SAAY2E,GAAeE,IACzCyK,IACAC,EAAYvP,SAAU,KAG1B,CAAE6E,EAAOF,EAAY2K,IAGvB,MAA0C7T,oBAAS,GAAnD,mBAAQgU,EAAR,KAAsBC,EAAtB,KAEA,EAAoE5C,GAClE,CACEpJ,SAAU,CACR4C,MAAO1M,EAAK8J,SACZmB,MAAO,GACP+I,WAAY,SAACtH,GAAD,OAAmBuI,GAAQ,WAAYvI,KAErDqJ,SAAU,CACRrJ,MAAO1M,EAAK+V,UAEdC,OAAQ,CACNtJ,MAAO1M,EAAKgW,UAGhB,WACE,GAAKH,EAAL,CACA,IAAMI,EAAkC,GACpC/H,EAAMxB,QAAU1M,EAAKyO,aAAYwH,EAAIxH,WAAaP,EAAMgI,MACxD1V,EAAKwV,OAAOtJ,QAAU1M,EAAKgW,SAAQC,EAAID,OAASA,EAAOtJ,OACvDlM,EAAKsJ,SAAS4C,QAAU1M,EAAK8J,WAAUmM,EAAInM,SAAWA,EAAS4C,OAC/DlM,EAAKuV,SAASrJ,QAAU1M,EAAK+V,WAAUE,EAAIF,SAAWA,EAASrJ,OAEnE8I,EAAWS,GACXN,EAAYvP,SAAU,MAvB1B,mBAAQ5F,EAAR,KAAc2V,EAAd,KAA4BC,EAA5B,KAA0C9C,EAA1C,KAAwDD,EAAxD,KA2BAnQ,qBACE,WACE0S,EAAS,CACPlJ,MAAO1M,EAAKyO,WACZxD,MAAO,KAEToI,GAAQ,SAACgD,GAAD,oBAAC,gBACJA,GADG,IAENvM,SAAS,6BACJuM,EAAKvM,UADF,IAEN4C,MAAO1M,EAAK8J,SACZmB,MAAO,KAET8K,SAAS,6BACJM,EAAKN,UADF,IAENrJ,MAAO1M,EAAK+V,WAEdC,OAAO,6BACFK,EAAKL,QADJ,IAEJtJ,MAAO1M,EAAKgW,gBAIlB,CAAEhW,EAAMqT,EAASoC,IAmBnBvS,qBACE,WAEIgL,EAAMxB,QAAU1M,EAAKyO,YACrBjO,EAAKuV,SAASrJ,QAAU1M,EAAK+V,UAC7BvV,EAAKsJ,SAAS4C,QAAU1M,EAAK8J,UAC7BtJ,EAAKwV,OAAOtJ,QAAU1M,EAAKgW,OAE3BF,GAAgB,GAEhBA,GAAgB,KAGpB,CAAEtV,EAAM0N,EAAOlO,IAGjB,IAAQ8J,EAA+BtJ,EAA/BsJ,SAAUiM,EAAqBvV,EAArBuV,SAAUC,EAAWxV,EAAXwV,OAE5B,OACE,yBAAKtV,UAAS,sCAAkC+U,EAAoB,GAAX,WACvD,0BAAM/U,UAAU,uBAAuB4V,SAAUF,GAC/C,yBACE1V,UAAS,uCAAkCqK,EACvC,GACA,WACJ,kBAACb,EAAD,OAEF,kBAACyD,GAAD,CACEjN,UAAU,8BACVc,KAAM,EACNsD,QAAS4Q,IAEX,yBAAKhV,UAAU,+BACb,yBAAKE,IAAKsN,EAAMxB,OAAS6J,KAAoBzV,IAAI,gBACjD,2BACEsC,GAAG,mBACHoH,KAAK,OACL7F,KAAK,aACLiI,SAtDe,SAACqH,GACxB,IAAMiC,EAAOjC,EAAE5L,OAAOmO,MAAO,GAE7B,GAAKN,EAAK1L,KAAKiM,SAAS,SAAxB,CAIA,IAAMC,EAAUC,IAAIC,gBAAgBV,GAEpCN,EAAS,CACPlJ,MAAOgK,EACPzL,MAAO,GACPiL,cARAN,GAAS,SAACS,GAAD,oBAAC,gBAAeA,GAAhB,IAAsBpL,MAAO,6BAoDlC,2BAAOgI,QAAQ,oBACb,kBAACoC,GAAD,CAAY7T,KAAM,QAItB,yBAAKd,UAAU,iCACb,kBAACoS,GAAD,CACEpG,MAAO5C,EAAS4C,MAChBzB,MAAOnB,EAASmB,MAChB2B,SAAUuJ,EACVpD,MAAM,WACNpO,KAAK,aAEP,kBAACmO,GAAD,CACEpG,MAAOqJ,EAASrJ,MAChBE,SAAUuJ,EACVpD,MAAM,WACNpO,KAAK,aAEP,kBAACmO,GAAD,CACEpG,MAAOsJ,EAAOtJ,MACdE,SAAUuJ,EACVpD,MAAM,SACNpO,KAAK,SACLqO,aAAW,IAEb,0BAAMtS,UAAU,wCACbuK,GAASqI,GAEZ,kBAACjF,GAAD,CAAQ7D,KAAK,SAASoH,UAAWiE,GAAjC,wBCzHGgB,GAAW9S,YAVC,YAUiBqD,eAC7B0P,GAAW/S,YAVC,YAUiBqD,eAC7B2P,GAAQhT,YAVA,QAUcqD,eACtB4P,GAAgBjT,YATE,kBAW7BqD,eAEW2B,GAAahF,YAZC,cAYmBqD,eACjC6P,GAAelT,YAZC,gBAYqBqD,eACrC8P,GAAcnT,YAZC,gBAafoT,GAASpT,YAZA,UCEtB,IASeqT,GADK9W,YAAQ,MARD,SAACsB,GAAD,MAAyB,CAClDyV,SAAU,SAACjU,GAAD,OACRxB,EAASuF,EAAS,CAAExC,KAAM,gBAAiBnE,KAAM,CAAE4C,UACrDkU,OAAQ,SAAClU,GAAD,OACNxB,EAASuF,EAAS,CAAExC,KAAM,cAAenE,KAAM,CAAE4C,UACnD+T,OAAQ,kBAAMvV,EAASuV,UAGL7W,EAnEpB,YAA+E,IAAlDN,EAAiD,EAAjDA,KAAMqX,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,OAAQJ,EAAiB,EAAjBA,OAC3D,EAAoCtV,oBAAS,GAA7C,mBAAQ2V,EAAR,KAAmBC,EAAnB,KAEErU,EAQEpD,EARFoD,GACAsU,EAOE1X,EAPF0X,eACAC,EAME3X,EANF2X,eACA5B,EAKE/V,EALF+V,SACAjM,EAIE9J,EAJF8J,SACA2E,EAGEzO,EAHFyO,WACAuH,EAEEhW,EAFFgW,OACA/M,EACEjJ,EADFiJ,SAMF,OACE,yBAAKvI,UAAU,gBACb,kBAAC,GAAD,CACEV,KAAMA,EACNyV,OAAQ+B,EACR9B,WAAY,kBAAM+B,GAAa,MAEjC,yBAAK7W,IAAK6N,GAAc8H,KAAoBzV,IAAI,gBAChD,6BACE,0BAAMJ,UAAU,0BAA0BoJ,GAC1C,0BAAMpJ,UAAU,0BAA0BqV,GAC1C,uBAAGrV,UAAU,wBAAwBsV,GACrC,yBAAKtV,UAAU,wBACb,0BAAMA,UAAU,iCAAhB,UAAoDiX,EAApD,eACA,sCACA,0BAAMjX,UAAU,iCAAhB,UAAoDgX,EAApD,gBAEDH,EACC,kBAAC,WAAD,KACE,kBAAClJ,GAAD,CAAQvJ,QAAS,kBAAM2S,GAAa,KAApC,kBAEA,yBAAK/W,UAAU,6BACZsV,EAAS,KAAO,6DAChBD,EAAW,KAAO,2DAIvB,kBAAC1H,GAAD,CACEvN,IAAKmI,EACLnE,QAASmE,EAhCS,kBAAMoO,EAASjU,IACjB,kBAAMkU,EAAOlU,KAgC5B6F,EAAW,WAAa,UAG5BsO,EACC,kBAAClJ,GAAD,CAAQ3N,UAAU,uBAAuB6N,KAAG,EAACzJ,QAASqS,GAAtD,UAGE,U,YCpCZ,IAaeS,GADGtX,aAZM,SAAC,GAAD,QACtBmL,gBAAmBV,EADG,EACHA,WADG,EACSW,OADT,MAEJ,CAClBX,WAAYA,EAAW8M,iBACvBnM,OAAQX,EAAW8M,qBAGM,SAACjW,GAAD,MAAyB,CAClDkW,eAAgB,SAAC1U,EAAYuI,EAAcpL,GAA3B,OACdqB,EAASuF,EAAS,CAAExC,KAAM,mBAAoBnE,KAAM,CAAE4C,KAAIuI,OAAMpL,eAGlDD,EAhClB,YAA8E,IAAnDN,EAAkD,EAAlDA,KAAM+K,EAA4C,EAA5CA,WAAYE,EAAgC,EAAhCA,MAAO6M,EAAyB,EAAzBA,eAC5CtF,EAAQuF,cAEd,OACE,kBAAClN,EAAD,CACE/H,MAAO9C,EAAK8C,MAAMtC,KAClBsK,cAAc,yBACdE,UAAW,kBACT8M,EACE9X,EAAKQ,KAAM4C,GACXpD,EAAK8C,MAAM6I,KAAO,EACE,SAApB6G,EAAMC,OAAOrP,KAEjB2H,WAAYA,EACZE,MAAOA,EACP7B,gBAAc,O,MCqBpB,IAKe4O,GADI1X,aAJK,SAAC,GAAD,MAAgD,CACtEC,KADsB,EAAGP,KAAQO,KAAQC,QAIxBF,EAvCnB,YAMW,IALT2X,EAKQ,EALRA,SACAlN,EAIQ,EAJRA,WACAE,EAGQ,EAHRA,MACA1K,EAEQ,EAFRA,KACAuK,EACQ,EADRA,cAEA,OACE,yBAAKpK,UAAU,eAEX,kBAAC6M,GAAD,CACEtC,MAAOA,EAAQA,EAAMhB,aAAUhI,EAC/BuL,UAAWzC,GACVkN,EAA+B,IAApBA,EAAStS,OACnB,kBAACqE,EAAD,CAAcC,QAASa,EAAetJ,KAAM,IAE5C,4BACGyW,EAASlX,KAAI,SAACf,GAAD,OACZ,wBAAIgB,IAAKhB,EAAKoD,IACZ,kBAACoL,GAAD,CAAUxO,KAAMA,IACfA,EAAKiJ,WACL1I,GACAA,GAAQA,EAAK6C,KAAOpD,EAAKoD,GAAM,KAC9B,kBAACiL,GAAD,yBAKN,U,sCCtBD6J,GAAcnU,YAHC,eAK1BqD,eAEW+Q,GAAwBpU,YANG,2BAQtCqD,eCxBK,SAASgR,GACd7P,EACAnB,GAEA,IAAQhE,EAAsBgE,EAAtBhE,GAAI2E,EAAkBX,EAAlBW,KAAMC,EAAYZ,EAAZY,QAClB,OAAIO,EAAKnF,KAAOA,IAEhBmF,EAAKb,cAAgBa,EAAKX,MAC1BW,EAAKZ,iBAAmBY,EAAKV,SAC7BU,EAAKX,WAAQ3F,EACbsG,EAAKV,cAAW5F,EAEhBsG,EAAKX,QAAUG,EACfQ,EAAKV,WAAaG,EAElBO,EAAKb,cAAgBK,EACrBQ,EAAKZ,iBAAmBK,GAXG,gBAAKO,GAgB3B,SAAS8P,GACd9P,EACAnB,GAKA,OAHImB,EAAKnF,KAAOgE,EAAQmB,KAAKnF,KAC3BmF,EAAKE,MAAQrB,EAAQqB,OAEhB,gBAAKF,GCVd,IAAM+P,GAAwB,CAC5BnM,QAAS,CAAErJ,MAAO,GAAI6I,KAAM,GAC5BH,MAAO,CAAE1I,MAAO,GAAI6I,KAAM,IChBrB,IAEM4M,GAAiBxU,YAFE,mBAI9BqD,eCGIkR,GAAwB,CAC5BzV,WAAY,CAAEC,MAAO,GAAI6I,KAAM,ICZjC,IAAM2M,GAAwB,CAC5BlX,YAAY,GCGP,IAGMoX,GAAiBzU,YAHE,mBAGuBqD,eCEjDkR,GAAwB,CAC5BjG,WAAY,MCAd,IAAMiG,GAAwB,CAC5B7H,SAAU,GACV9E,KAAM,EACN2D,OAAQ,ICnBH,SAASmJ,GAAWC,EAAeC,EAAgBC,GACxD,IACIC,EADAxV,EAAI,IAAIyV,KAERF,IACFvV,EAAE0V,QAAQ1V,EAAE2V,UAAqB,GAATJ,EAAc,GAAK,GAAK,KAChDC,EAAU,WAAaxV,EAAE4V,eAE3BlU,SAASmU,OAASR,EAAQ,IAAMC,EAAS,IAAME,EAAU,UC6B3D,IAAMP,GAAwB,CAC5B/X,KAAM,CAAEC,KAAM,KAAMsC,MAAO,CAAEtC,KAAM,GAAImL,KAAM,IAC7C3L,KAAM,CAAEQ,KAAM,KAAMsC,MAAO,CAAEtC,KAAM,GAAImL,KAAM,IAC7CwN,MD7BK,SAAoBT,GAIzB,IAHA,IAAI/T,EAAO+T,EAAQ,IAEfU,EADgBC,mBAAmBtU,SAASmU,QACzBI,MAAM,KACpBC,EAAI,EAAGA,EAAIH,EAAGzT,OAAQ4T,IAAK,CAElC,IADA,IAAIC,EAAIJ,EAAGG,GACY,MAAhBC,EAAE3F,OAAO,IACd2F,EAAIA,EAAEC,UAAU,GAElB,GAAwB,IAApBD,EAAEE,QAAQ/U,GACZ,OAAO6U,EAAEC,UAAU9U,EAAKgB,OAAQ6T,EAAE7T,QAGtC,MAAO,GCgBAgU,CAAU,SACjBC,WAAW,GC3Bb,IAAMtB,GAAwB,CAC5BvN,WAAY,GACZW,OAAQ,ICFH,IASMmO,GAAgB9V,YATE,mBAUlB+V,GAAc/V,YATE,gBAW3BqD,eAEW2S,GAAUhW,YAZC,WActBqD,eAGW4S,IADgBjW,YAfE,mBAgBLA,YAfC,cAemBqD,gBACjC6S,GAAalW,YAfC,cAemBqD,eACjC8S,GAAanW,YAfC,cAemBqD,eACjC+S,GAAcpW,YAfC,eAeoBqD,eCf1CkR,GAAwB,CAC5B1O,OAAQ,GACRD,MAAO,GACPyQ,UAAW,GACXtI,YAAa,GACb7R,KAAM,ICdR,IAAMoa,GAAW,CACf5O,gBHMa,WAGL,IAFRwB,EAEO,uDAFSqL,GAChBvU,EACO,uCACP,OAAQA,EAAOyG,MACb,IvDqDqB,YuDpDnB,OAAO,6BACFyC,GADL,IAEElC,WAAW,6BACNkC,EAAMlC,YADD,mBAEPhH,EAAOqD,QAAQzC,MAAO,IAEzB+G,OAAO,6BACFuB,EAAMvB,QADL,mBAEH3H,EAAOqD,QAAQzC,KAAO,SAG7B,IvD0C0B,iBuDzCxB,IAAIsG,EAAQ,oCACZ,IACE,IAAMhB,EAAUlG,EAAOqD,QAAQ6D,MAAMqP,SAAS9Z,KAAKyJ,QAC/CA,IAASgB,EAAQhB,GACrB,MAAOgK,GACP,IAAMhK,EAAUlG,EAAOqD,QAAQ6D,MAAMhB,QACjCA,IAASgB,EAAQhB,GAEvB,OAAO,6BACFgD,GADL,IAEElC,WAAW,6BACNkC,EAAMlC,YADD,mBAEPhH,EAAOqD,QAAQzC,MAAO,IAEzB+G,OAAO,6BACFuB,EAAMvB,QADL,mBAEH3H,EAAOqD,QAAQzC,KAAOsG,MAG7B,IvDuB6B,oBuDtB3B,OAAO,6BACFgC,GADL,IAEElC,WAAW,6BACNkC,EAAMlC,YADD,mBAEPhH,EAAOqD,SAAU,IAEpBsE,OAAO,6BACFuB,EAAMvB,QADL,mBAEH3H,EAAOqD,QAAU,SAGxB,QACE,OAAO6F,IGvDX1E,KZgBa,WAGL,IAFR0E,EAEO,uDAFSqL,GAChBvU,EACO,uCACP,SAASwW,EAAuBC,GAC9B,OAAO,6BACFvN,GADL,IAEEd,QAAQ,6BACHc,EAAMd,SADJ,IAELrJ,MAAOmK,EAAMd,QAAQrJ,MAAM/B,KAAI,SAACwH,GAC9B,IAAIkS,EAAO,gBAAQlS,GACnB,OAAOiS,EAAYC,QAGvBjP,MAAM,6BACDyB,EAAMzB,OADN,IAEH1I,MAAOmK,EAAMzB,MAAM1I,MAAM/B,KAAI,SAACwH,GAC5B,IAAIkS,EAAO,gBAAQlS,GACnB,OAAOiS,EAAYC,UAM3B,OAAQ1W,EAAOyG,MACb,InCnC4B,mBmCoC1B,IAAMkQ,EAAW3W,EAAOqD,QAIxB,OAHIrD,EAAOqD,QAAQuE,KAAO,IACxB+O,EAAS5X,MAAT,sBAAsBmK,EAAMzB,MAAM1I,OAAlC,YAA4C4X,EAAS5X,SAEhD,6BACFmK,GADL,IAEEzB,MAAOkP,IAEX,InC3C8B,qBmC4C5B,IAAMC,EAAa5W,EAAOqD,QAI1B,OAHIrD,EAAOqD,QAAQuE,KAAO,IACxBgP,EAAW7X,MAAX,sBAAwBmK,EAAMd,QAAQrJ,OAAtC,YAAgD6X,EAAW7X,SAEtD,6BACFmK,GADL,IAEEd,QAASwO,IAEb,IFnDwB,eEoDtB,OAAOJ,GAAsB,SAACK,GAAD,OAC3BvC,GAAgBuC,EAAM7W,EAAOqD,YAEjC,IFtDoC,2BEuDlC,OAAOmT,GAAsB,SAACK,GAC5B,MAA0B7W,EAAOqD,QACjC,OAAOgR,GAA0BwC,EAAM,CACrC7S,KAFF,EAAQA,KAGNC,QAHF,EAAcA,QAIZ5E,GAAIW,EAAOqD,QAAQhE,QAGzB,INXuB,cMYrB,OAAOmX,GAAsB,SAACK,GAI5B,OAHIA,EAAK5R,MAAM5F,KAAOW,EAAOqD,UAC3BwT,EAAK5R,MAAMC,UAAW,GAEjB2R,KAEX,INjByB,gBMkBvB,OAAOL,GAAsB,SAACK,GAI5B,OAHIA,EAAK5R,MAAM5F,KAAOW,EAAOqD,UAC3BwT,EAAK5R,MAAMC,UAAW,GAEjB2R,KAEX,InC9E+B,sBmC+E7B,OAAO,6BACF3N,GADL,IAEEd,QAAS,CACPrJ,MAAO,GACP6I,KAAM,KAIZ,IpBvDyB,gBoBwDzB,IpBzD2B,kBoB0DzB,OAAO4O,GAAsB,SAACK,GAE5B,OADIA,EAAKxX,KAAOW,EAAOqD,QAAQhE,KAAIwX,EAAK/Q,eAAiB,GAClD+Q,KAGX,QACE,OAAO3N,IYtGXpK,WVOa,WAGL,IAFRoK,EAEO,uDAFSqL,GAChBvU,EACO,uCACP,OAAQA,EAAOyG,MACb,IDhB4B,mBCiB1B,IAAIqQ,EAAW9W,EAAOqD,QAItB,OAHIrD,EAAOqD,QAAQuE,KAAO,IACxBkP,EAAS/X,MAAT,sBAAsBmK,EAAMpK,WAAWC,OAAvC,YAAiD+X,EAAS/X,SAErD,6BACFmK,GADL,IAEEpK,WAAYgY,IAEhB,IJdwB,eIetB,MAAwB9W,EAAOqD,QAAvBqB,EAAR,EAAQA,MAAOF,EAAf,EAAeA,KACXuS,EAAa,YAAQ7N,EAAMpK,WAAWC,OAM1C,OALI2F,EACFqS,EAAc/Q,KAAKxB,GAEnBuS,EAAgBA,EAAcC,QAAO,SAACC,GAAD,OAAQA,EAAG5X,KAAOmF,EAAKnF,MAEvD,6BACF6J,GADL,IAEEpK,WAAW,6BAAMoK,EAAMpK,YAAb,IAAyBC,MAAOgY,MAE9C,IJzBoC,2BI0BlC,IAAMG,EAAWhO,EAAMpK,WAAWC,MAAM/B,KAAI,SAACwH,GAC3C,OAAO6P,GAA0B7P,EAAMxE,EAAOqD,YAEhD,OAAO,6BACF6F,GADL,IAEEpK,WAAW,6BAAMoK,EAAMpK,YAAb,IAAyBC,MAAOmY,MAE9C,ItBFyB,gBsBGzB,ItBJ2B,kBsBKzB,IAAMC,EAAmBjO,EAAMpK,WAAWC,MAAM/B,KAAI,SAACwH,GACnD,OAAIA,EAAKnF,KAAOW,EAAOqD,QAAQkI,OACtB,6BAAK/G,GAAZ,IAAkBsB,cAAetB,EAAKsB,cAAgB,IACjDtB,KAGT,OAAO,6BACF0E,GADL,IAEEpK,WAAW,6BAAMoK,EAAMpK,YAAb,IAAyBC,MAAOoY,MAE9C,QACE,OAAOjO,IUrDX9L,UTLa,WAGb,IAFA8L,EAED,uDAFiBqL,GAChBvU,EACD,uCACC,OAAQA,EAAOyG,MACb,IvDd6B,oBuDe3B,OAAO,6BACFyC,GADL,IAEE7L,YAAa6L,EAAM7L,aAEvB,QACE,OAAO6L,ISLXoF,WPGa,WAGL,IAFRpF,EAEO,uDAFSqL,GAChBvU,EACO,uCACDoX,EAAmB,SACvBC,EACAhY,GAEA,OAAK6J,EAAMoF,YAAcjP,IAAO6J,EAAMoF,WAAWrJ,MAAM5F,GAEhDgY,EAAS,gBAAKnO,EAAMoF,aADlBpF,EAAMoF,YAIjB,OAAQtO,EAAOyG,MACb,IDvB4B,mBCwB1B,OAAO,6BACFyC,GADL,IAEEoF,WAAYtO,EAAOqD,UAEvB,IPjBwB,eOkBtB,IAAK6F,EAAMoF,WAAY,OAAOpF,EAC9B,GAAIA,EAAMoF,WAAWjP,KAAOW,EAAOqD,QAAQmB,KAAKnF,GAAI,OAAO6J,EAE3D,IAAMoO,EAAa,gBAAQpO,EAAMoF,YAGjC,OAFAgJ,EAAc5S,MAAQ1E,EAAOqD,QAAQqB,MAE9B,6BACFwE,GADL,IAEEoF,WAAYgJ,IAEhB,IP3BoC,2BO4BlC,OAAKpO,EAAMoF,WACPpF,EAAMoF,WAAWjP,KAAOW,EAAOqD,QAAQhE,GAAW6J,EAE/C,6BACFA,GADL,IAEEoF,WAAW,gBACN+F,GAA0BnL,EAAMoF,WAAYtO,EAAOqD,YAN5B6F,EAUhC,IXcuB,cWbrB,IAAMqO,EAAsBH,GAAiB,SAAC5S,GAE5C,OADAA,EAAKS,MAAMC,UAAW,EACfV,IACNxE,EAAOqD,SACV,OAAO,6BACF6F,GADL,IAEEoF,WAAYiJ,IAGhB,IXKyB,gBWJvB,IAAMC,EAAwBJ,GAAiB,SAAC5S,GAE9C,OADAA,EAAKS,MAAMC,UAAW,EACfV,IACNxE,EAAOqD,SACV,OAAO,6BACF6F,GADL,IAEEoF,WAAYkJ,IAGhB,IzB3ByB,gByB4BzB,IzB7B2B,kByB8BzB,OAAKtO,EAAMoF,YAActO,EAAOqD,QAAQkI,SAAWrC,EAAMoF,WAAWjP,GAE7D,6BACF6J,GADL,IAEEoF,WAAW,6BACNpF,EAAMoF,YADD,IAERxI,cAAeoD,EAAMoF,WAAWxI,cAAgB,MAL3CoD,EASX,QACE,OAAOA,IO5EXwD,SNKa,WAGL,IAFRxD,EAEO,uDAFSqL,GAChBvU,EACO,uCACP,OAAQA,EAAOyG,MACb,I1BoBwB,e0BnBtB,OAAO,6BACFyC,GADL,IAEEwD,SAAS,GAAD,mBAAOxD,EAAMwD,UAAb,YAA0B1M,EAAOqD,QAAQqJ,WACjD9E,KAAM5H,EAAOqD,QAAQuE,KACrB2D,OAAQvL,EAAOqD,QAAQkI,SAG3B,I1BcuB,c0BbrB,IAAMkM,EAAW,YAAQvO,EAAMwD,UACzBgL,EAAaD,EAAYE,WAC7B,SAACV,GAAD,OAAQA,EAAG5X,KAAOW,EAAOqD,QAAQ+H,YAGnC,IAAoB,IAAhBsM,EAAmB,CACrB,IAAME,EAAc1O,EAAMwD,SAASgL,GAAY1L,QACzC6L,EAAU,6BACX3O,EAAMwD,SAASgL,IADJ,IAEd1L,QAAS,CACPvP,KAAK,GAAD,mBACEmb,EAAcA,EAAYnb,KAAO,IADnC,YAECuD,EAAOqD,QAAQ2I,UAEpBpE,KAAM5H,EAAOqD,QAAQuE,QAIzB6P,EAAYK,OAAOJ,EAAY,EAAGG,GAGpC,OAAO,6BACF3O,GADL,IAEEwD,SAAU+K,IAGd,I1BX2B,kB0BazB,IADA,IAAMM,EAAe,YAAQ7O,EAAMwD,UAC1B8I,EAAI,EAAGA,EAAIuC,EAAgBnW,OAAQ4T,IAAK,CAC/C,IAAIwC,GAAQ,EACZ,GAAID,EAAgBvC,GAAGnW,KAAOW,EAAOqD,QAAQyH,QAAQzL,GAAI,CACvD0Y,EAAgBD,OAAOtC,EAAG,EAA1B,6BACKxV,EAAOqD,QAAQyH,SADpB,IAEEkB,QAAS+L,EAAgBvC,GAAGxJ,WAE9B,MAGF,IAAMA,EAAU+L,EAAgBvC,GAAGxJ,QAEnC,GAAIA,EACF,IAAK,IAAIiM,EAAI,EAAGA,EAAIjM,EAAQvP,KAAKmF,OAAQqW,IACvC,GAAIjM,EAAQvP,KAAKwb,GAAG5Y,KAAOW,EAAOqD,QAAQyH,QAAQzL,GAAI,CACpD2Y,GAAQ,EACRhM,EAAQvP,KAAKqb,OAAOG,EAAG,EAAGjY,EAAOqD,QAAQyH,SACzC,MAKN,GAAIkN,EAAO,MAGb,OAAO,6BACF9O,GADL,IAEEwD,SAAUqL,IAGd,I1B9C0B,iB0B+CxB,OAAO,6BACF7O,GADL,IAEEwD,SAAU,GACV9E,KAAM,IAGV,I1BnDyB,gB0BoDvB,IAAMsQ,EAAgB,YAAQhP,EAAMwD,UAC9B5B,EAAUoN,EAAiBC,MAC/B,SAAClB,GAAD,OAAQA,EAAG5X,KAAOW,EAAOqD,QAAQhE,MAKnC,OAHIyL,IACFA,EAAQkB,aAAU9N,GAEb,6BACFgL,GADL,IAEEwD,SAAUwL,IAGd,I1B7DyB,gB0B8DvB,IAAIE,EAAkB,YAAQlP,EAAMwD,UAChCmL,EAAaO,EAAmBD,MAClC,SAAClB,GAAD,OAAQA,EAAG5X,KAAOW,EAAOqD,QAAQgV,UAInC,OAFIR,IAAYA,EAAW9L,cAAgB,GAEpC,6BACF7C,GADL,IAEEwD,SAAU0L,IAGd,QACE,OAAOlP,IM7GXjN,KJyBa,WAGL,IAFRiN,EAEO,uDAFSqL,GAChBvU,EACO,uCACP,SAASyR,EAAY4F,EAAgCiB,GACnD,IAAIhU,EAA0B,OAG9B,GAFe,SAAXgU,IAAmBhU,EAAS,QAGlB,SAAXA,IAAsB4E,EAAM1M,KAAKC,MACtB,SAAX6H,KAAuB4E,EAAMjN,KAAKQ,MAAQ6b,IAAWpP,EAAMjN,KAAKQ,KAAK4C,IAEtE,OAAO6J,EAAM5E,GAGf,IAAIiU,EAAuB,KAC3B,GAAIrP,EAAM5E,IAAW4E,EAAM5E,GAAQ7H,KAAM,CACvC,IAAMR,EAAOiN,EAAM5E,GAAQ7H,KACvBR,GAEFob,EADAkB,EAAO,gBAAQtc,IAKnB,OAAO,6BACFiN,EAAM5E,IADX,IAEE7H,KAAM8b,IAIV,SAASC,EAAwBC,GAC/B,IAAMC,EAAexP,EAAMjN,KAAK8C,MAAMtC,KAAKO,IAAIyb,GACzCE,EAAezP,EAAM1M,KAAKuC,MAAMtC,KAAKO,IAAIyb,GAE/C,OAAO,6BACFvP,GADL,IAEE1M,KAAK,6BACA0M,EAAM1M,MADP,IAEFuC,MAAM,6BACDmK,EAAM1M,KAAKuC,OADX,IAEHtC,KAAMkc,MAGV1c,KAAK,6BACAiN,EAAMjN,MADP,IAEF8C,MAAM,6BACDmK,EAAMjN,KAAK8C,OADX,IAEHtC,KAAMic,QAMd,OAAQ1Y,EAAOyG,MACb,IdxB2B,kBcyBzB,IAAMmS,EAAS5Y,EAAOqD,QAAQ7G,KAAO,OAAS,OACxC0a,EACoB,IAAxBlX,EAAOqD,QAAQuE,KACX5H,EAAOqD,QAAQtE,MADnB,sBAESmK,EAAM0P,GAAQ7Z,MAAMtC,MAF7B,YAEsCuD,EAAOqD,QAAQtE,QAEvD,OAAO,6BACFmK,GADL,mBAEG0P,EAFH,6BAGO1P,EAAM0P,IAHb,IAII7Z,MAAM,6BACDmK,EAAM0P,GAAQ7Z,OADd,IAEHtC,KAAMya,EACNtP,KAAM5H,EAAOqD,QAAQuE,WAK7B,IdxCwB,ecyCtB,OAAO,6BACFsB,GADL,IAEE2M,WAAW,IAGf,IdrDqB,YcsDnB,OAAO,6BACF3M,GADL,IAEEjN,KAAK,6BACAiN,EAAMjN,MADP,IAEFQ,KAAMuD,EAAOqD,YAInB,Id7DqB,Yc8DnB,OAAO,6BACF6F,GADL,IAEE1M,KAAK,6BACA0M,EAAMjN,MADP,IAEFQ,KAAMuD,EAAOqD,YAInB,IVtHoC,2BUuHlC,OAAOmV,GAAuB,SAACvB,GAAD,OAC5B5C,GAA0B4C,EAAIjX,EAAOqD,YAGzC,IV5HwB,eU6HtB,OAAOmV,GAAuB,SAACvB,GAAD,OAC5B3C,GAAgB2C,EAAIjX,EAAOqD,YAG/B,Id/EiB,QcgFf,OAAO,6BACF6F,GADL,IAEEkM,MAAOpV,EAAOqD,QAAQ+R,MACtB5Y,KAAK,6BACA0M,EAAM1M,MADP,IAEFC,KAAMuD,EAAOqD,QAAQpH,SAI3B,IdnFkB,ScoFhB,OAAO,6BACFiN,GADL,IAEEkM,MAAO,GACP5Y,KAAM,CACJC,KAAM,KACNsC,MAAO,CAAEtC,KAAM,GAAImL,KAAM,MAI/B,Id/FyB,gBcgGvB,IAAMiR,EAAkBpH,GAAW,SAACxV,GAClCA,EAAK2X,gBAAkB,IACtB,QAEGkF,EAAkBrH,GAAW,SAACxV,GAClCA,EAAK0X,gBAAkB,EACvB1X,EAAKiJ,UAAW,IACflF,EAAOqD,SAEV,OAAO,6BACF6F,GADL,IAEEjN,KAAM6c,EACNtc,KAAMqc,IAGV,IdhHuB,cciHrB,IAAME,EAAgBtH,GAAW,SAACxV,GAChCA,EAAK2X,gBAAkB,IACtB,QAEGoF,EAAgBvH,GAAW,SAACxV,GAChCA,EAAK0X,gBAAkB,EACvB1X,EAAKiJ,UAAW,IACflF,EAAOqD,SAEV,OAAO,6BACF6F,GADL,IAEEjN,KAAM+c,EACNxc,KAAMuc,IAGV,QACE,OAAO7P,IIxLX8M,QDSa,WAGL,IAFR9M,EAEO,uDAFSqL,GAChBvU,EACO,uCACP,OAAQA,EAAOyG,MACb,IDlBoB,WCmBlB,OAAO,6BACFyC,GADL,IAEErD,OAAO,GAAD,mBACDqD,EAAMrD,QADL,CAEJ,CAAE3J,KAAM8D,EAAOqD,QAAQ8G,MAAOgI,KAAMnS,EAAOqD,QAAQ8O,UAGzD,ID3ByB,gBC4BvB,OAAO,6BACFjJ,GADL,IAEEmN,UAAWrW,EAAOqD,QAAQ8G,MAC1B8O,SAAUjZ,EAAOqD,QAAQ8O,OAE7B,IDlC2B,kBCmCzB,OAAO,6BACFjJ,GADL,IAEEmN,UAAW,KAEf,IDpC2B,kBCqCzB,OAAO,6BACFnN,GADL,IAEE6E,YAAa,GACb7R,KAAM,GACNma,UAAW,GACXxQ,OAAQ,KAEZ,ID3CuB,cC4CrB,IAAMqT,EAAS,YAAQhQ,EAAMrD,QAE7B,OADAqT,EAAUpB,OAAO9X,EAAOqD,QAAQ8V,MAAO,GAChC,6BACFjQ,GADL,IAEErD,OAAQqT,IAEZ,IDhDuB,cCiDrB,OAAO,6BACFhQ,GADL,IAEEhN,KAAM8D,EAAOqD,UAEjB,IDtDuB,cCuDrB,OAAO,6BACF6F,GADL,IAEE6E,YAAa/N,EAAOqD,UAExB,IDzDwB,eC0DtB,OAAO,6BACF6F,GADL,IAEEtD,MAAO5F,EAAOqD,UAElB,QACE,OAAO6F,KC7DPkQ,GAAaC,aAAgB/C,IAWpBgD,GATK,SAACpQ,EAAYlJ,GAK/B,MlBgDoB,WkBpDhBA,EAAOyG,OACTyC,EAAQ,CAAEjN,KAAMiN,EAAMjN,OAGjBmd,GAAWlQ,EAAOlJ,I,q0MCtBZ,SAASuZ,GAAqB3Y,EAAsB4Y,GACjE,kBAAO,+FAEH,OAFG,kBAEGA,EAAE,WAAF,KAFH,OAGH,OAHG,SAGGC,aAAIlW,EAAgB3C,IAHvB,8BAKH,OALG,mCAKG6Y,aAAInW,EAAa,CAAE1C,OAAMsG,MAAK,QALjC,wDCNM,SAASwS,GAAwB9Y,GAC9C,OAAO,SAACZ,GAAD,MACW,cAAhBA,EAAOyG,MAAwBzG,EAAOqD,QAAQzC,OAASA,GCJ5C,SAAS+Y,GAAqBC,GAC3C,IACE,OAAOA,EAAInd,KAAKA,KAChB,MAAOyT,GAEP,MADA2J,QAAQ3S,MAAM,4BACR,IAAI4S,MAAM,K,4zMCOVtR,I,aAiBAV,I,aAgBAiS,I,aAOAC,I,aAOOC,IA/CjB,SAAUzR,GAAV,qFAKc,OALd,IACEnF,QAAW5G,KAAQ6L,EADrB,EACqBA,KAAMV,EAD3B,EAC2BA,KAD3B,SAKoBsS,KAAmBC,IAAnB,sBAAsC7R,EAAtC,iBAAmDV,IALvE,OAQE,OAHMgS,EALR,SAMoBD,GAAoBC,GAA9B7a,EANV,EAMUA,MANV,SAQQ0a,aACJzR,EAAiB,CACfM,OACAvJ,MAAOA,EACP6I,UAZN,wCAiBA,SAAUE,GAAV,iFAKc,OAJOF,EADrB,EACEvE,QAAW5G,KAAQmL,KADrB,SAKoBsS,KAAmBC,IAAnB,iCAAiDvS,IALrE,OAQE,OAHMgS,EALR,SAMoBD,GAAoBC,GAA9B7a,EANV,EAMUA,MANV,SAQQ0a,aACJ1R,EAAe,CACbhJ,MAAOA,EACP6I,UAXN,wCAgBA,SAAUmS,KAAV,kEACE,OADF,SACQK,aACJV,GAAuB,SACvBH,GAAoB,QAASzR,KAHjC,wCAOA,SAAUkS,KAAV,kEACE,OADF,SACQI,aACJV,GAAuB,WACvBH,GAAoB,UAAW/Q,KAHnC,wCAOO,SAAUyR,KAAV,kEACL,OADK,SACCI,aAAI,CAAEC,aAAKP,IAAkBO,aAAKN,MADnC,wC,4zMCpDGO,I,aAeAC,I,aAOeC,IAtBzB,SAAUF,GAAV,iFAKc,OAJO3S,EADrB,EACEvE,QAAW5G,KAAQmL,KADrB,SAKoBsS,KAAmBC,IAAnB,iCAAiDvS,IALrE,OAOE,OAFMgS,EALR,SAMoBD,GAAoBC,GAA9B7a,EANV,EAMUA,MANV,SAOQ0a,aACJjF,GAAe,CACbzV,QACA6I,UAVN,wCAeA,SAAU4S,KAAV,kEACE,OADF,SACQJ,aACJV,GAAuB,eACvBH,GAAoB,cAAegB,KAHvC,wCAOe,SAAUE,KAAV,kEACb,OADa,SACPJ,aAAI,CAAEC,aAAKE,MADJ,wC,4zMCtBLE,I,aAYAC,I,aAOeC,IAnBzB,SAAUF,GAAV,iFAKc,OAJOrb,EADrB,EACEgE,QAAW5G,KAAQ4C,GADrB,SAKoB6a,KAAmBC,IAAnB,iBAAiC9a,IALrD,UAKQua,EALR,SAMmBD,GAAoBC,GAA7BpV,EANV,EAMUA,KANV,sBAOmB,IAAIsV,MAAM,uBAP7B,OASE,OATF,SASQL,aAAIhF,GAAejQ,IAT3B,wCAYA,SAAUmW,KAAV,kEACE,OADF,SACQP,aACJV,GAAuB,eACvBH,GAAoB,cAAemB,KAHvC,wCAOe,SAAUE,KAAV,kEACb,OADa,SACPP,aAAI,CAAEC,aAAKK,MADJ,wC,4zMCFLE,I,aAYAC,I,aAaAC,I,aAcAC,I,aAmBAC,I,aAmBAC,I,aAOAC,I,aAOAC,I,aAOAC,I,aAOAC,I,aAOOC,IAhHjB,SAAUV,GAAV,uFAKc,OALd,IACExX,QAAW5G,KAAQmL,EADrB,EACqBA,KAAMyD,EAD3B,EAC2BA,MAAOE,EADlC,EACkCA,OADlC,SAKoB2O,KAAmBC,IAAnB,iBACN5O,EADM,0BACkB3D,EADlB,kBACgCyD,IANpD,OASE,OAJMuO,EALR,SAQuBD,GAAoBC,GAAjClN,EARV,EAQUA,SARV,SASQ+M,aAAIvN,GAAY,CAAEQ,WAAU9E,OAAM2D,YAT1C,wCAYA,SAAUuP,GAAV,uFAKc,OALd,IACEzX,QAAW5G,KAAQ4O,EADrB,EACqBA,MAAOzD,EAD5B,EAC4BA,KAAMwD,EADlC,EACkCA,SADlC,SAKoB8O,KAAmBC,IAAnB,6BACM/O,EADN,yBAC+BxD,EAD/B,kBAC6CyD,IANjE,OAUE,OALMuO,EALR,SASsBD,GAAoBC,GAAhC5N,EATV,EASUA,QATV,SAUQyN,aAAIrN,GAAW,CAAEJ,UAASpE,OAAMwD,cAVxC,wCAaA,SAAU2P,GAAV,uFAKc,OALd,IACE1X,QAAW5G,KAAQ4C,EADrB,EACqBA,GAAI4E,EADzB,EACyBA,QAASD,EADlC,EACkCA,KADlC,SAKoBkW,KAAmBsB,MAAnB,6BAA+Cnc,EAA/C,UAA2D,CAC3E2E,OACAC,YAPJ,OAWE,OANM2V,EALR,SAUsBD,GAAoBC,GAAhC9O,EAVV,EAUUA,QAVV,SAWQ2O,aAAInN,GAAe,CAAExB,aAX7B,wCAcA,SAAUkQ,GAAV,iFAKc,OAJDve,EADb,EACE4G,QAAW5G,KADb,SAKoByd,KAAmB1V,KAAK,YAAa/H,GALzD,OAOsB,OAFdmd,EALR,gBAO4BD,GAAoBC,GAPhD,OASE,OATF,SAOU9O,EAPV,EAOUA,QAPV,UASQ2O,aAAItN,MATZ,QAUE,OAVF,UAUQsN,aACJrW,EAAS,CACPxC,KAAM,WACNnE,KAAM,CAAE4O,MAAO,EAAGzD,KAAM,EAAG2D,OAAQ9O,EAAK8O,WAb9C,QAgBE,OAhBF,UAgBQkO,aAAIlN,GAAczB,IAhB1B,yCAmBA,SAAUmQ,GAAV,uFAKc,OALd,IACE5X,QAAW5G,KAAQwO,EADrB,EACqBA,QAAS5L,EAD9B,EAC8BA,GAAIkM,EADlC,EACkCA,OADlC,SAKoB2O,KAAmB1V,KAAnB,oBAAqCnF,EAArC,YAAmD,CACnE4L,UACAM,WAPJ,OAUoB,OALZqO,EALR,gBAU0BD,GAAoBC,GAV9C,OAYE,OAZF,SAUU6B,EAVV,EAUUA,MAVV,UAYQhC,aAAIpN,GAAa,CAAEhN,QAZ3B,QAaE,OAbF,UAaQoa,aACJrW,EAAS,CAAExC,KAAM,UAAWnE,KAAM,CAAE2O,SAAU/L,EAAIgM,MAAO,EAAGzD,KAAM,MAdtE,QAgBE,OAhBF,UAgBQ6R,aAAIjN,GAAYiP,IAhBxB,yCAmBA,SAAUP,KAAV,kEACE,OADF,SACQd,aACJV,GAAuB,YACvBH,GAAoB,WAAYsB,KAHpC,wCAOA,SAAUM,KAAV,kEACE,OADF,SACQf,aACJV,GAAuB,WACvBH,GAAoB,UAAWuB,KAHnC,wCAOA,SAAUM,KAAV,kEACE,OADF,SACQhB,aACJV,GAAuB,wBACvBH,GAAoB,uBAAwBwB,KAHhD,wCAOA,SAAUM,KAAV,kEACE,OADF,SACQjB,aACJV,GAAuB,mBACvBH,GAAoB,kBAAmByB,KAH3C,wCAOA,SAAUM,KAAV,kEACE,OADF,SACQlB,aACJV,GAAuB,iBACvBH,GAAoB,gBAAiB0B,KAHzC,wCAOO,SAAUM,KAAV,kEACL,OADK,SACClB,aAAI,CACRC,aAAKY,IACLZ,aAAKa,IACLb,aAAKc,IACLd,aAAKe,IACLf,aAAKgB,MANF,wC,4zMC5HGI,I,aAaAC,I,aA2BAC,I,aAOAC,I,aAOeC,IAtDzB,SAAUJ,GAAV,iFAKE,OALF,IACErY,QAAW5G,KAAQuH,EADrB,EACqBA,KAAMC,EAD3B,EAC2BA,QAAS5E,EADpC,EACoCA,GADpC,SAKQ6a,KAAmBsB,MAAnB,iBAAmCnc,EAAnC,UAA+C,CACnD2E,OACAC,YAPJ,OAUE,OAVF,SAUQwV,aAAIrF,GAAsB,CAAEpQ,OAAMC,UAAS5E,QAVnD,wCAaA,SAAUsc,GAAV,oFACalf,EADb,EACE4G,QAAW5G,KAIH+H,EAAgB/H,EAAhB+H,MAAgB/H,EAAViI,MALhB,gBASU,OATV,SASgBwV,KAAmBsB,MAAM,wBAAyB,CAC5Dnc,GAAImF,EAAKnF,KAVf,OASIua,EATJ,8BAaU,OAbV,UAagBM,KAAmBsB,MAAM,2BAA4B,CAC/Dnc,GAAImF,EAAKnF,KAdf,QAaIua,EAbJ,oBAkB4BD,GAAoBC,KAlBhD,EAkBUmC,eACa,GAnBvB,wBAoBIlC,QAAQmC,IAAI,0BApBhB,2BAwBE,OAxBF,UAwBQvC,aAAItF,GAAY1X,IAxBxB,yCA2BA,SAAUmf,KAAV,kEACE,OADF,SACQxB,aACJV,GAAuB,4BACvBH,GAAoB,2BAA4BmC,KAHpD,wCAOA,SAAUG,KAAV,kEACE,OADF,SACQzB,aACJV,GAAuB,gBACvBH,GAAoB,eAAgBoC,KAHxC,wCAOe,SAAUG,KAAV,kEACb,OADa,SACPzB,aAAI,CACRC,aAAKsB,IACLtB,aAAKuB,MAHM,wC,4zMCvCLI,I,aAWAC,I,aAUAC,I,aAKAC,I,aAKAC,I,aAyBAC,I,aAgBAC,I,aAYAC,I,aAYAC,I,aAOArJ,I,aAIAsJ,I,aAoBAC,I,aAOAC,I,aAOAC,I,aAOAC,I,aAOAC,I,aAMAC,I,aAOAC,I,aAIAC,I,aAOeC,IAnLzB,SAAUlB,GAAuBrC,GAAjC,4EAGE,OAHF,EAC0BD,GAAoBC,GAApC3d,EADV,EACUA,KACRyY,GAAU,QADIU,EADhB,EACgBA,MACY,GAF5B,SAGQqE,aACJzG,GAAM,CACJ/W,OACAmZ,WANN,wCAWA,SAAU8G,GAAV,iFAKc,OAJO7c,EADrB,EACEgE,QAAW5G,KAAQ4C,GADrB,SAKoB6a,KAAmBC,IAAnB,iBAAiC9a,IALrD,OAOE,OAFMua,EALR,SAMmBD,GAAoBC,GAA7B3d,EANV,EAMUA,KANV,SAOQwd,aAAI3G,GAAS7W,IAPrB,wCAUA,SAAUkgB,GAAV,6EACc,OADqB1f,EAAnC,EAAwB4G,QAAW5G,KAAnC,SACoByd,KAAmB1V,KAAK,SAAU/H,GADtD,OAEE,OADMmd,EADR,gBAEQqC,GAAsBrC,GAF9B,wCAKA,SAAUwC,GAAV,6EACc,OADwB3f,EAAtC,EAA2B4G,QAAW5G,KAAtC,SACoByd,KAAmB1V,KAAK,YAAa/H,GADzD,OAEE,OADMmd,EADR,gBAEQqC,GAAsBrC,GAF9B,wCAKA,SAAUyC,GAAV,gGACEhZ,QAAW5G,KAAQ4C,EADrB,EACqBA,GAAIuI,EADzB,EACyBA,OAAMpL,EAD/B,EAC+BA,MAD/B,qBAMYC,EAASsM,GAAMqU,WAAWnhB,KAAKO,KAA/BC,MANZ,gBAOc4C,EAAK5C,EAAK4C,GAPxB,4BASY,IAAIya,MAAM,4BATtB,OAac,OAbd,UAaoBI,KAAmBC,IAAnB,iBAAiC9a,EAAjC,uBAAkDuI,IAbtE,QAgBE,OAHMgS,EAbR,SAcoBD,GAAoBC,GAA9B7a,EAdV,EAcUA,MAdV,UAgBQ0a,aACJxG,GAAc,CACZrL,OACA7I,QACAvC,UApBN,yCAyBA,SAAU8f,KAAV,4EAEsB,OAFtB,kBAE4BvT,GAAMqU,WAAWnhB,KAF7C,mBAGkB,MADNmZ,EAFZ,EAEYA,OAFZ,iDAIgB,OAJhB,SAIsB8E,KAAmB1V,KAAK,cAAe,CACvD4Q,UALN,OAQI,OAJMwE,EAJV,iBAQUqC,GAAsBrC,GARhC,gCAUI,OAVJ,oCAUUlF,GAAU,QAAS,IAAK,OAVlC,QAYI,OAZJ,oBAYU+E,aAAItG,MAZd,yFAgBA,SAAUoJ,GAAV,2EAKE,OAJmBld,EADrB,EACEgE,QAAW5G,KAAQ4C,GADrB,SAKQ6a,KAAmBsB,MAAnB,iBAAmCnc,EAAnC,YALR,OAME,OANF,SAMQoa,aAAIzU,GAAW3F,IANvB,OAQE,OARF,SAQQoa,aAAIxR,KARZ,OASE,OATF,SASQwR,aAAIrW,EAAS,CAAExC,KAAM,QAASnE,KAAM,CAAEmL,KAAM,MATpD,wCAYA,SAAU4U,GAAV,2EAKE,OAJmBnd,EADrB,EACEgE,QAAW5G,KAAQ4C,GADrB,SAKQ6a,KAAmBsB,MAAnB,iBAAmCnc,EAAnC,cALR,OAME,OANF,SAMQoa,aAAIvG,GAAa7T,IANzB,OAQE,OARF,SAQQoa,aAAIxR,KARZ,OASE,OATF,SASQwR,aAAIrW,EAAS,CAAExC,KAAM,QAASnE,KAAM,CAAEmL,KAAM,MATpD,wCAYA,SAAU6U,KAAV,kEACE,OADF,SACQrC,aACJV,GAAuB,QACvBH,GAAoB,OAAQ2C,KAHhC,wCAOA,SAAU9I,KAAV,kEACE,OADF,SACQsB,GAAU,QAAS,IAAK,OADhC,wCAIA,SAAUgI,GAAV,mFAUc,OATDjgB,EADb,EACE4G,QAAW5G,KAIL4gB,EAAe,IAAIC,SACrB7gB,EAAKuV,UAAUqL,EAAaE,IAAI,WAAY9gB,EAAKuV,UACjDvV,EAAKsJ,UAAUsX,EAAaE,IAAI,WAAY9gB,EAAKsJ,UACjDtJ,EAAKwV,QAAQoL,EAAaE,IAAI,SAAU9gB,EAAKwV,QAC7CxV,EAAKiO,YAAY2S,EAAaE,IAAI,aAAc9gB,EAAKiO,YAT3D,SAUoBwP,KAAmBsB,MAAM,cAAe6B,EAAc,CACtEG,QAAS,CACP,eAAgB,yBAZtB,OAiBE,OAPM5D,EAVR,SAgBmBD,GAAoBC,GAA7B3d,EAhBV,EAgBUA,KAhBV,UAiBQwd,aAAI1G,GAAS9W,IAjBrB,yCAoBA,SAAU0gB,KAAV,kEACE,OADF,SACQvC,aACJV,GAAuB,SACvBH,GAAoB,QAAS4C,KAHjC,wCAOA,SAAUS,KAAV,kEACE,OADF,SACQxC,aACJV,GAAuB,YACvBH,GAAoB,WAAY6C,KAHpC,wCAOA,SAAUS,KAAV,kEACE,OADF,SACQzC,aACJV,GAAuB,oBACvBH,GAAoB,mBAAoB8C,KAH5C,wCAOA,SAAUS,KAAV,kEACE,OADF,SACQ1C,aACJV,GAAuB,cACvBH,GAAoB,aAAc+C,KAHtC,wCAOA,SAAUS,KAAV,kEACE,OADF,SACQ3C,aACJV,GAAuB,eACvBH,GAAoB,cAAegD,KAHvC,wCAMA,SAAUS,KAAV,kEACE,OADF,SACQ5C,aACJV,GAAuB,iBACvBH,GAAoB,gBAAiBiD,KAHzC,wCAOA,SAAUS,KAAV,kEACE,OADF,SACQ7C,a3BvHc,S2BuHKhH,IAD3B,wCAIA,SAAU8J,KAAV,kEACE,OADF,SACQ9C,aACJV,GAAuB,eACvBH,GAAoB,cAAemD,KAHvC,wCAOe,SAAUS,KAAV,kEACb,OADa,SACP9C,aAAI,CACRC,aAAKmC,IACLnC,aAAKqC,IACLrC,aAAKsC,IACLtC,aAAKuC,IACLvC,aAAKwC,IACLxC,aAAKyC,IACLzC,aAAK0C,IACL1C,aAAK2C,IACL3C,aAAK4C,MAVM,wC,4zMC/LLO,I,aAaAC,I,aAyBAC,I,aAOAC,I,aAOeC,IApDzB,SAAUJ,GAAV,iFAKc,OAJOrM,EADrB,EACE/N,QAAW5G,KAAQ2U,IADrB,SAKoB8I,KAAmB1V,KAAK,cAAe,CACvD4M,QANJ,OAUE,OALMwI,EALR,SAS4BD,GAAoBC,GAAjCkE,EATf,EASU1M,IATV,SAUQqI,aAAI1D,GAAY,CAAE5L,MAAO2T,KAVjC,wCAaA,SAAUJ,KAAV,4EAEmD,OAD3CK,EAAiB,SAAC,GAAD,SAAG/H,SAD5B,SAEyDgI,aAAOD,GAFhE,UAI8B,KAFtB7U,EAFR,QAIYrD,OAAOjE,OAJnB,iDAkBE,OAZMqc,EAAW,IAAIX,SACrBpU,EAAMrD,OAAOqY,SAAQ,WAAiBtb,GAAS,IAAvB1G,EAAsB,EAAtBA,KAAMiW,EAAgB,EAAhBA,KACxBA,GACF8L,EAASE,OAAO,QAAShM,GACzB8L,EAASE,OAAO,SAAhB,iBAAoCvb,KAEpCqb,EAASE,OAAO,SAAUjiB,MAG9B+hB,EAASV,IAAI,QAASrU,EAAMtD,OAC5BqY,EAASV,IAAI,cAAerU,EAAM6E,aAClCkQ,EAASV,IAAI,OAAQrU,EAAMhN,MAjB7B,UAkBQge,KAAmB1V,KAAK,SAAUyZ,EAAU,CAChDT,QAAS,CACP,eAAgB,yBApBtB,yCAyBA,SAAUG,KAAV,kEACE,OADF,SACQS,aACJ1E,GAAuB,gBACvBH,GAAoB,eAAgBkE,KAHxC,wCAOA,SAAUG,KAAV,kEACE,OADF,SACQxD,aACJV,GAAuB,iBACvBH,GAAoB,gBAAiBmE,KAHzC,wCAOe,SAAUG,KAAV,kEACb,OADa,SACPxD,aAAI,CAAEC,aAAKqD,IAAcrD,aAAKsD,MADvB,wC,4zMC1DUS,IAAV,SAAUA,KAAV,kEACb,OADa,SACPhE,aAAI,CACRC,aAAKwB,IACLxB,aAAKL,IACLK,aAAKG,IACLH,aAAKM,IACLN,aAAKiB,IACLjB,aAAK6C,IACL7C,aAAKuD,MARM,wCCHf,IAAMS,GAAiBC,eACjBC,GAAqB,CAACF,IAK5B,IAAMG,GAGAC,KAEA3V,GAAQ4V,aACZrF,GACAmF,GAAiBG,KAAe,WAAf,EAAmBJ,MAGtCF,GAAeO,IAAIR,IAEJtV,UCrBf8Q,QAAQmC,IAAI8C,cAEZ,IAWe5E,GANU,kBACvB6E,KAAMC,OAAO,CACXC,QALE,0CAMFzB,QAAS,CAAE0B,cAAc,UAAD,OAAYnW,GAAMqU,WAAWnhB,KAAKmZ,W,2yMCT/C,SAAS+J,GACtBxe,EACAye,GAEA,MAA0BthB,mBAAS,MAAnC,mBAAQrB,EAAR,KAAc6S,EAAd,KACA,EAAsCxR,oBAAS,GAA/C,mBAAQkJ,EAAR,KAAoBqY,EAApB,KACA,EAA4BvhB,mBAAuB,MAAnD,mBAAQoJ,EAAR,KAAeoY,EAAf,KAsBA,OApBAngB,qBACE,WAAM,8CACJ,mGAESwB,EAFT,sBAEqB,IAAImZ,MAAM,oBAF/B,cAGIwF,EAAS,MACTD,GAAc,GAJlB,SAKsBnF,KAAmBC,IAAIxZ,GAL7C,OAKUiZ,EALV,OAMUnd,EAAOkd,GAAoBC,GACjCtK,EAAQ7S,EAAK2iB,IACbC,GAAc,GARlB,kDAUIC,EAAS,EAAD,IAVZ,2DADI,uBAAC,WAAD,wBAcJC,KAEF,CAAEH,EAAUze,IAGP,CAAElE,EAAMuK,EAAYE,GCjB7B,IAAM7F,GAAO,CAAE,QAAS,YAAa,aAC/Bme,GAAa,CAAE3L,GCNN,YAA0C,IAAhB5X,EAAe,EAAfA,KACvC,EAAqCkjB,GACnCljB,EAAKQ,KAAL,iBAAsBR,EAAKQ,KAAK4C,GAAhC,mBAAiDnB,EACjD,SAFF,mBAAQuhB,EAAR,KAAezY,EAAf,KAA2BE,EAA3B,KAKA,OACE,kBAAC,GAAD,CACEH,cAAc,mCACdmN,SAAUuL,EACVzY,WAAYA,EACZE,MAAOA,QAAShJ,KCXP,YAA0C,IAAhBjC,EAAe,EAAfA,KACvC,EAAqCkjB,GACnCljB,EAAKQ,KAAL,iBAAsBR,EAAKQ,KAAK4C,GAAhC,mBAAiDnB,EACjD,SAFF,mBAAQuhB,EAAR,KAAezY,EAAf,KAA2BE,EAA3B,KAKA,OACE,kBAAC,GAAD,CACEH,cAAc,mCACdmN,SAAUuL,EACVzY,WAAYA,EACZE,MAAOA,QAAShJ,MFHP,SAASwhB,GAAT,GAAmD,IAA3BzjB,EAA0B,EAA1BA,KAAMU,EAAoB,EAApBA,UAC3C,EGhBa,WACb,MAA0BmB,mBAASyC,OAAOH,SAAS6M,KAAK+C,OAAO,IAA/D,mBAAQ/C,EAAR,KAAc0S,EAAd,KACMvf,EAAWC,cAEXuf,EAAmB5S,uBACvB,WACE2S,EAAQpf,OAAOH,SAAS6M,KAAK+C,OAAO,MAEtC,CAAE2P,IAyBJ,OAlBAxgB,qBACE,WAGE,OAFAoB,OAAOE,iBAAiB,aAAcmf,GAE/B,WACLrf,OAAOG,oBAAoB,aAAckf,MAG7C,CAAEA,IAGJzgB,qBACE,WACEwgB,EAAQvf,EAAS6M,KAAK+C,OAAO,MAE/B,CAAE5P,IAGG,CAAE6M,EAtBY,SAAC4S,GACpBtf,OAAOH,SAAS6M,KAAO4S,IHICC,GAA1B,mBAAQ7S,EAAR,KAAc0S,EAAd,KACA,EAAoC7hB,mBAAS,GAA7C,mBAAQwD,EAAR,KAAmBC,EAAnB,KACMgI,EAAYiW,GAAWle,GAE7BnC,qBACE,WACE,IAAIwD,EAAMtB,GAAKsW,WAAU,SAACkI,GAAD,OAASA,EAAI/O,gBAAkB7D,MAC3C,IAATtK,IAAYA,EAAM,GACtBpB,EAAaoB,KAEf,CAAEsK,IAQJ,OACE,yBAAKtQ,UAAS,uBAAkBA,GAAa,KAC3C,kBAACyE,EAAD,CACEC,KAAMA,GACNC,UAAWA,EACXC,aAVkB,SAACoB,GACvBgd,EAAQte,GAAKsB,GAAKmO,eAClBvP,EAAaoB,MAUX,kBAAC4G,EAAD,CAAWtN,KAAMA,KI8CvB,IAmBe8jB,GAHKxjB,aAhBI,SAAC,GAAD,QACtBN,KAAQA,EADc,EACdA,KAAMO,EADQ,EACRA,KADQ,IAEtBkL,gBAAmBV,EAFG,EAEHA,WAAYW,EAFT,EAESA,OAFT,MAGJ,CAClB1L,KAAMA,EACNO,KAAMA,EACNwK,WAAYA,EAAWgZ,KACvB9Y,MAAOS,EAAOqY,SAGW,SAACniB,GAAD,MAAyB,CAClDoiB,UAAW,SAAC5gB,GAAD,OAAgBxB,EAASuF,EAAS,CAAExC,KAAM,OAAQnE,KAAM,CAAE4C,UACrE0U,eAAgB,SAAC1U,EAAYuI,EAAcpL,GAA3B,OACdqB,EAASuF,EAAS,CAAExC,KAAM,mBAAoBnE,KAAM,CAAE4C,KAAIuI,OAAMpL,eAGhDD,EAlFpB,YAOW,IANTN,EAMQ,EANRA,KACAO,EAKQ,EALRA,KACAwK,EAIQ,EAJRA,WACAE,EAGQ,EAHRA,MACA+Y,EAEQ,EAFRA,UACAlM,EACQ,EADRA,eAEA5F,GAAgB,QAEhB,IAAMM,EAAQuF,cACRtO,EAAUC,cACRtG,EAAOoP,EAAMC,OAAbrP,GAERF,qBACE,WACM6H,GAAcE,IACP,SAAP7H,GAAkB7C,EAAKC,KAET,SAAP4C,EACJpD,EAAKQ,MAAQR,EAAKQ,KAAK4C,KAAOA,IACjC4gB,EAAU5gB,GACV0U,EAAe1U,EAAI,IAEe,IAA3B7C,EAAKuC,MAAMtC,KAAKmF,QAAoC,IAApBpF,EAAKuC,MAAM6I,MACpDmM,EAAe1U,EAAI,GAAG,GAPtBqG,EAAQM,KAAK,aAUjB,CAAE3G,EAAI4gB,EAAWhkB,EAAM8X,EAAgBvX,EAAMkJ,EAASsB,EAAYE,IAGpE,IAAIgZ,EAAcjkB,EAYlB,OAVsB,SAApBwS,EAAMC,OAAOrP,IACZ7C,EAAKC,MAAQD,EAAKC,KAAK4C,KAAOoP,EAAMC,OAAOrP,KAIxB,QAFpB6gB,EAAc1jB,IAGZkJ,EAAQM,KAAK,UAKf,yBAAKrJ,UAAU,gBACb,kBAAC6M,GAAD,CAAcC,UAAWzC,EAAYE,MAAOA,GACzCgZ,EAAYzjB,KACX,yBAAKE,UAAU,qBACb,kBAAC,GAAD,CACE6W,OACsB,SAApB/E,EAAMC,OAAOrP,OACV7C,EAAKC,MAAQD,EAAKC,KAAK4C,KAAOoP,EAAMC,OAAOrP,IAEhDpD,KAAMikB,EAAYzjB,KAClBmL,KAAMsY,EAAYnhB,MAAM6I,OAE1B,kBAAC8X,GAAD,CAAazjB,KAAMikB,EAAavjB,UAAU,eAG5C,kBAACsJ,EAAD,CAAcC,QAAQ,wB,OC3DjB,SAASia,GAAT,GAQJ,IAPTva,EAOQ,EAPRA,MACArI,EAMQ,EANRA,SACA6iB,EAKQ,EALRA,WACAC,EAIQ,EAJRA,iBACAnZ,EAGQ,EAHRA,MACAF,EAEQ,EAFRA,WACAuL,EACQ,EADRA,SAEA,OACE,yBAAK5V,UAAU,qBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,kBAAkB4V,SAAUA,GAC1C,4BAAK3M,GACL,yBAAKjJ,UAAU,2BAA2BY,GAC1C,0BAAMZ,UAAU,SAASuK,GACzB,yBAAKvK,UAAU,2BACb,kBAAC2N,GAAD,CAAQ7D,KAAK,SAASoH,WAAU7G,GAC7BqZ,GAEH,0BAAM1jB,UAAU,cACbyjB,EAAWE,WAAY,IACxB,uBACE3jB,UAAU,2BACVsR,KAAMmS,EAAWlkB,KAAKyE,MACrByf,EAAWlkB,KAAKC,UAM3B,yBAAKQ,UAAU,cACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,0BAA0ByjB,EAAWG,MAClD,uBAAG5jB,UAAU,yBAAyByjB,EAAWI,MAEnD,yBAAK3jB,IAAKujB,EAAWK,IAAK1jB,IAAI,YAC9B,0BAAMJ,UAAU,sBACbyjB,EAAWE,WAAY,IACxB,kBAAC,IAAD,CACE3jB,UAAU,2BACVC,GAAIwjB,EAAWlkB,KAAKyE,MACnByf,EAAWlkB,KAAKC,U,kEC1DhB,SAASukB,GAAT,GAOJ,IANT9f,EAMQ,EANRA,KACAoO,EAKQ,EALRA,MACArS,EAIQ,EAJRA,UACAgkB,EAGQ,EAHRA,aACAhY,EAEQ,EAFRA,MACG3J,EACK,kBACR,OACE,yBACErC,UAAS,sBAAiBA,GAAa,GAA9B,YAAoCgkB,GAAgBhY,EACzD,YACA,KACJ,yCACEhM,UAAWgM,EAAQ,SAAW,IAC1B3J,EAFN,CAGEK,GAAIuB,EACJA,KAAMA,EACN+H,MAAOA,EACPiY,UAAQ,KAEV,2BAAO1R,QAAStO,GAAOoO,GACtB2R,GAAgBhY,EACf,0BAAMhM,UAAU,iBAAiBgkB,GAC/B,KACJ,yBAAKhkB,UAAU,mB,wBCyCrB,IAiBekkB,GADGtkB,aAhBM,SAAC,GAAD,QACtBmL,gBADsB,IAEpBV,WAAqBA,EAFD,EAEN8Z,MAA+BC,EAFzB,EAEaC,WAFb,MAKJ,CAClBha,aACAE,MAPsB,EAGpBS,OAAUmZ,MAKZC,mBAGyB,SAACljB,GAAD,MAAyB,CAClDmV,MAAO,SAACvW,GAAD,OACLoB,EAASuF,EAAS,CAAExC,KAAM,QAASnE,cAGrBF,EAzElB,YAA6E,IAAlDyW,EAAiD,EAAjDA,MAAOhM,EAA0C,EAA1CA,WAAYE,EAA8B,EAA9BA,MAAO6Z,EAAuB,EAAvBA,aACnD,EAA2D5R,GACzD,CACEwB,MAAO,CACLhI,MAAO,GACPsH,WAAYS,GACZxJ,MAAO,IAET+Z,SAAU,CACRtY,MAAO,GACPsH,WAAYe,GACZ9J,MAAO,MAGX,WACE8L,EAAM,CAAErC,MAAOlU,EAAKkU,MAAMhI,MAAOsY,SAAUxkB,EAAKwkB,SAAStY,WAd7D,mBAAQlM,EAAR,KAAc2V,EAAd,KAA4BC,EAA5B,KAA0C9C,EAA1C,KAkBQoB,EAAoBlU,EAApBkU,MAAOsQ,EAAaxkB,EAAbwkB,SAEf,OAAIF,EAAqB,KAGvB,kBAACZ,GAAD,CACEva,MAAM,gBACNya,iBAAiB,QACjBD,WAAY,CACVE,WAAY,6BACZG,IAAKS,KACLX,KAAM,oBACNC,IAAK,qCACLtkB,KAAM,CAAEC,KAAM,WAAYwE,KAAM,cAElCqG,WAAYA,EACZE,MAAOqI,IAA8BrI,GAAgB,IACrDqL,SAAUF,GACV,kBAACqO,GAAD,CACEja,KAAK,OACL7F,KAAK,QACLoO,MAAM,QACNnG,SAAUuJ,EACVzJ,MAAOgI,EAAMhI,MACbgY,aAAchQ,EAAMzJ,QAEtB,kBAACwZ,GAAD,CACEja,KAAK,WACL7F,KAAK,WACLoO,MAAM,WACNnG,SAAUuJ,EACVzJ,MAAOsY,EAAStY,MAChBgY,aAAcM,EAAS/Z,Y,oBCmD/B,IAoBeia,GAHM5kB,aAjBG,SAAC,GAAD,QACtBmL,gBADsB,MAMJ,CAClBV,WAPsB,EAEpBA,WAAcoa,SAMhBla,MARsB,EAGpBS,OAAUyZ,SAMZnlB,KATsB,EAKtBA,KAAQO,KAAQC,SAOS,SAACoB,GAAD,MAAyB,CAClDwjB,SAAU,SAAC5kB,GAAD,OACRoB,EAASuF,EAAS,CAAExC,KAAM,WAAYnE,cAGrBF,EAjHrB,YAA0E,EAA5CN,KAA6C,IAAvC+K,EAAsC,EAAtCA,WAAYE,EAA0B,EAA1BA,MAAOma,EAAmB,EAAnBA,SACrD,EAA2DlS,GACzD,CACEwB,MAAO,CACLhI,MAAO,GACPsH,WAAYS,GACZxJ,MAAO,IAETnB,SAAU,CACR4C,MAAO,GACPsH,WAAYc,GACZ7J,MAAO,IAET8K,SAAU,CACRrJ,MAAO,IAETsY,SAAU,CACRtY,MAAO,GACPsH,WAAYe,GACZ9J,MAAO,IAEToa,gBAAiB,CACf3Y,MAAO,GACP4Y,wBAAwB,EACxBra,MAAO,MAGX,WACEma,EAAS,CACP1Q,MAAOlU,EAAKkU,MAAMhI,MAClBqJ,SAAUvV,EAAKkU,MAAMhI,MACrB5C,SAAUtJ,EAAKsJ,SAAS4C,MACxBsY,SAAUxkB,EAAKwkB,SAAStY,WA/B9B,mBAAQlM,EAAR,KAAc2V,EAAd,KAA4BC,EAA5B,KAA0C9C,EAA1C,KAoCQoB,EAAyDlU,EAAzDkU,MAAOqB,EAAkDvV,EAAlDuV,SAAUiP,EAAwCxkB,EAAxCwkB,SAAUlb,EAA8BtJ,EAA9BsJ,SAAUub,EAAoB7kB,EAApB6kB,gBAE7C,OACE,kBAACnB,GAAD,CACEva,MAAM,sBACNya,iBAAiB,WACjBD,WAAY,CACVK,IAAKe,KACLjB,KAAM,oBACND,WAAY,0BACZE,IAAK,WACLtkB,KAAM,CAAEC,KAAM,QAASwE,KAAM,WAE/BqG,WAAYA,EACZE,MAAOqI,IAA8BrI,GAAgB,IACrDqL,SAAUF,GACV,kBAACqO,GAAD,CACEC,aAAchQ,EAAMzJ,MACpBT,KAAK,OACL7F,KAAK,QACLoO,MAAM,QACNrG,MAAOgI,EAAMhI,MACbE,SAAUuJ,IAEZ,kBAACsO,GAAD,CACEC,aAAc5a,EAASmB,MACvBT,KAAK,OACL7F,KAAK,WACLoO,MAAM,WACNrG,MAAO5C,EAAS4C,MAChBE,SAAUuJ,IAEZ,kBAACsO,GAAD,CACEja,KAAK,OACL7F,KAAK,WACLoO,MAAM,YACNrG,MAAOqJ,EAASrJ,MAChBE,SAAUuJ,IAEZ,kBAACsO,GAAD,CACEja,KAAK,WACL7F,KAAK,WACLoO,MAAM,WACNrG,MAAOsY,EAAStY,MAChBE,SAAUuJ,EACVuO,aAAcM,EAAS/Z,QAEzB,kBAACwZ,GAAD,CACEC,aAAcW,EAAgBpa,MAC9BT,KAAK,WACL7F,KAAK,kBACLoO,MAAM,mBACNrG,MAAO2Y,EAAgB3Y,MACvBE,SAAUuJ,Q,cC9GH,SAASqP,GAAShiB,GAC7B,OACI,kBAAC,EAAD,eAAMnC,QAAQ,iBAAoBmC,GAC9B,0BAAMH,EAAE,4LAA4LC,KAAK,iBACzM,0BAAMD,EAAE,iLAAiLC,KAAK,kBCG3L,SAASmiB,GAAT,GAAsD,IAA7B7b,EAA4B,EAA5BA,OAAQ8b,EAAoB,EAApBA,UAmB9C,OACE,yBAAKhlB,UAAU,iBACb,yBAAKA,UAAU,4BACZkJ,EAAOjE,OAAS,GAAuB,SAAlBiE,EAAO,GAAG+b,IAC9B/b,EAAO7I,KAAI,SAACmN,EAAOgP,GAAR,OACT,yBAAKxc,UAAU,mCAAmCM,IAAKkc,GACrD,kBAACvP,GAAD,CACElM,MAAM,QACND,KAAM,EACNsD,QAAS,kBAjBF,SAACoY,GACpB,GAAItT,EAAOjE,OAAS,EAAG,CACrB,IAAMigB,EAAOxR,OAAOyR,OAAO,GAAIjc,GAC/Bgc,EAAK/J,OAAOqB,EAAO,GACnBwI,EAAUE,IAaeE,CAAa5I,IAC5Bxc,UAAU,eAEZ,yBACEA,UAAU,SACVE,IAAKsN,EAAM6X,QACXjlB,IAAI,SACJqB,MAAO,CACLE,OAAQ,QACRD,MAAO,cAMf,GAEF,yBAAK1B,UAAU,mCACb,2BACEuS,QAAQ,cACRvS,UAAU,0CACV,kBAAC8kB,GAAD,CAAU/jB,MAAM,QAAQD,KAAM,MAEhC,2BAAO4B,GAAG,cAAcoH,KAAK,OAAOoC,SAlDvB,SAACqH,GAChBrK,EAAOjE,QAA8B,SAAlBiE,EAAO,GAAG+b,KAAgB/b,EAAOoc,MACxDN,EACE9b,EAAOqc,OAAO,CACZF,QAASpP,IAAIC,gBAAgB3C,EAAE5L,OAAOmO,MAAM,IAC5CmP,IAAK1R,EAAE5L,OAAOmO,MAAM,Y,cCDb,SAAS0P,GAAT,GAAwE,IAA7Cvc,EAA4C,EAA5CA,MAAOmI,EAAqC,EAArCA,YAAaqE,EAAwB,EAAxBA,aAC1D,OACI,yBAAKzV,UAAU,oBACX,kBAAC+jB,GAAD,CACIja,KAAK,OACL7F,KAAK,QACLoO,MAAM,QACNnG,SAAU,SAACqH,GAAD,OAAOkC,EAAalC,EAAG,UACjCvH,MAAO/C,EAAM+C,MACbgY,aAAc/a,EAAMsB,QAExB,kBAACwZ,GAAD,CACIja,KAAK,OACL7F,KAAK,cACLoO,MAAM,cACNnG,SAAU,SAACqH,GAAD,OAAOkC,EAAalC,EAAG,gBACjCvH,MAAOoF,EAAYpF,MACnBgY,aAAc5S,EAAY7G,S,slZCpB1C,IAAMmC,GAAa,CCCJ,YAMJ,IALT+Y,EAKQ,EALRA,SAEAvc,GAGQ,EAJRwc,YAIQ,EAHRxc,QACA8b,EAEQ,EAFRA,UACAza,EACQ,EADRA,MAEA,OACE,yBAAKvK,UAAU,cACb,wBAAIA,UAAU,WAAd,cACA,kBAAC+kB,GAAD,CAAc7b,OAAQA,EAAQ8b,UAAWA,IACzC,yBAAKhlB,UAAU,mBACb,0BAAMA,UAAU,0BAA0BuK,GAC1C,kBAACoD,GAAD,CACE3N,UAAU,0BACVoE,QAAS,kBAAMqhB,EAAS,UAF1B,WCbO,YAKL,EAJRvc,OAIQ,EAHRwc,YAGS,IAFTD,EAEQ,EAFRA,SACAlb,EACQ,EADRA,MAEA,EAA4BpJ,mBAAS,CACnC6K,MAAO,GACPzB,MAAO,KAFT,mBAAQtB,EAAR,KAAe0c,EAAf,KAIA,EAAwCxkB,mBAAS,CAC/C6K,MAAO,GACPzB,MAAO,KAFT,mBAAQ6G,EAAR,KAAqBwU,EAArB,KAMMlQ,EAAY,yCAAG,WAAOnC,GAAP,qEACnBA,EAAEE,iBAEY,MADdlJ,EAAQgK,GAAQ,QAAStL,EAAM+C,QAFZ,uBAIjB2Z,GAAS,SAAChQ,GAAD,MAAW,CAClB3J,MAAO,GACPzB,MAAOA,MANQ,6BAWL,MADdA,EAAQgK,GAAQ,cAAenD,EAAYpF,QAVxB,uBAYjB4Z,GAAe,SAACjQ,GAAD,MAAW,CACxB3J,MAAO,GACPzB,MAAOA,MAdQ,0BAkBnBob,GAAS,SAAChQ,GAAD,oBAAC,gBACLA,GADI,IAEPpL,MAAO,QAETob,GAAS,SAAChQ,GAAD,oBAAC,gBACLA,GADI,IAEPpL,MAAO,QAxBU,4CAAH,sDA4BZkL,EAAY,yCAAG,WAAOlC,EAAQtP,GAAf,kEACN,UAATA,EAAkB0hB,EAASpS,EAAE5L,OAAOqE,OACtB,gBAAT/H,GAAwB2hB,EAAerS,EAAE5L,OAAOqE,OAFtC,2CAAH,wDAKlB,OACE,yBAAKhM,UAAU,8BACb,wBAAIA,UAAU,WAAd,oBACA,kBAACwlB,GAAD,CACEvc,MAAOA,EACPmI,YAAaA,EACbqE,aAAcA,IAEhB,yBAAKzV,UAAU,mCACb,kBAAC2N,GAAD,CACE3N,UAAU,0CACVoE,QAAS,kBAAMqhB,EAAS,UAF1B,QAKA,8BAAOlb,GACP,kBAACoD,GAAD,CACE3N,UAAU,0CACVoE,QAASsR,GAFX,YFRR,IAWemQ,GAFEjmB,aATO,SAAC,GAAD,IACdC,EADc,EACtBP,KAAQO,KADc,IAEtBkL,gBAFsB,EAEHV,WAFG,EAESW,OAFT,MAGJ,CAClBnL,KAAMA,MAGmB,SAACqB,GAAD,MAAyB,KAEnCtB,EAhEjB,YAA0C,IAAhBC,EAAe,EAAfA,KAClBkJ,EAAUC,cAChB,EAAwC7H,mBAAS,GAAjD,mBAAQukB,EAAR,KAAqBI,EAArB,KACA,EAA8B3kB,mBAAS,CACrC,CACEkkB,QAAS,GACTJ,IAAK,UAHT,mBAAQ/b,EAAR,KAAgB8b,EAAhB,KAOAxiB,qBACE,WACO3C,EAAKC,MAAMiJ,EAAQM,KAAK,YAE/B,CAAExJ,EAAKC,KAAMiJ,IAGf,MAA4B5H,mBAAS,IAArC,mBAAQoJ,EAAR,KAAeoY,EAAf,KAEM8C,EAAQ,yCAAG,WAAOM,GAAP,kEACfpD,EAAS,IACG,SAARoD,EACE7c,EAAOjE,OAAS,GAAuB,SAAlBiE,EAAO,GAAG+b,KACjCa,EAAeJ,EAAc,GAC7B/C,EAAS,KACJA,EAAS,2CACC,SAARoD,GAAgBD,EAAeJ,EAAc,GAPzC,2CAAH,sDAUR9Y,EAAYF,GAAWgZ,GAE7B,OACE,6BACE,kBAAC,WAAD,KASI,kBAAC9Y,EAAD,CACE8Y,YAAaA,EACbD,SAAUA,EACVvc,OAAQA,EACR8b,UAAWA,EACXza,MAAOA,S,OGrDJ,SAASyb,GAAT,GAIL,IAHR9c,EAGO,EAHPA,OACA+c,EAEO,EAFPA,aACAC,EACO,EADPA,YAEA,OACE,yBAAKlmB,UAAU,kBACZkJ,EAAO7I,KAAI,SAACmN,EAAOvH,GAAR,OACV,yBACEjG,UAAS,+BAA0BkmB,IAAgBjgB,EAC/C,WACA,IACJ3F,IAAKkN,EACLpJ,QAAS,kBAAM6hB,EAAahgB,KAC5B,yBAAK/F,IAAKsN,EAAOpN,IAAI,c,cCdhB,SAAS+lB,GAAT,GAIJ,IAHTC,EAGQ,EAHRA,OACAV,EAEQ,EAFRA,YACAI,EACQ,EADRA,eAEA,OACE,yBAAK9lB,UAAU,aACZomB,EAAO/lB,KAAI,SAACiN,EAAOrH,GAAR,OACV,yBACEjG,UAAS,eAAUiG,EAAMyf,EACrB,WACAzf,IAAQyf,EAAc,gBAAkB,IAC5CplB,IAAKgN,GACL,yBAAKlJ,QAAS,kBAAM0hB,EAAe7f,KAAOA,EAAM,GAChD,8BAAOqH,OAGX,yBACEtN,UAAS,kBACTyB,MAAO,CACLC,MAAM,0BAAD,OAA4B0kB,EAAOnhB,OAAnC,gBAAiDmhB,EAAOnhB,OAC3D,EADG,sBACYygB,EADZ,qBACoCA,EAAc,GAAK,EACxDA,EAAc,EACd,EAHC,S,OCkEf,IAQeW,GADGzmB,YAAQ,MAPC,SAACsB,GAAD,MAAyB,CAClDolB,WAAY,SAAC7R,GAAD,OACVvT,EAASuF,EAAS,CAAExC,KAAM,eAAgBnE,KAAM,CAAE2U,WACpD2E,YAAa,SAAC3E,EAAae,GAAd,OACXtU,EAASkY,GAAY,CAAE5L,MAAOiH,EAAKe,cAGrB5V,EApFlB,YAA4E,IAAjDwC,EAAgD,EAAhDA,MAAOkkB,EAAyC,EAAzCA,WAAYlN,EAA6B,EAA7BA,YAAa7O,EAAgB,EAAhBA,MACzD,EAA2DiI,GACzD,CACEiC,IAAK,CACHzI,MAAO,GACPzB,MAAO,GACP+I,WAAYoB,MAGhB,WACE4R,EAAWxmB,EAAK2U,IAAIzI,OACpBlM,EAAK2U,IAAIzI,MAAQ,MAVrB,mBAAQlM,EAAR,KAAc2V,EAAd,KAA4BC,EAA5B,KAA0C9C,EAA1C,KAuBQ6B,EAAQ3U,EAAR2U,IAER,OACE,yBAAKzU,UAAU,cACb,yBAAKA,UAAU,oBACb,4BACoB,IAAjBoC,EAAM6C,OACL,gCADD,yBAGmB7C,EAAM6C,OAHzB,iBAGwC7C,EAAM6C,OAAS,EAAI,IAAM,KAGpE,0BAAMjF,UAAU,sCAAhB,8CAGA,6CAAmB,GAAKoC,EAAM6C,OAA9B,mBAEF,yBAAKjF,UAAU,yBACb,kBAACoS,GAAD,CACEC,MAAM,cACNpO,KAAK,MACL+H,MAAOyI,EAAIzI,MACXzB,MAAOkK,EAAIlK,MACX2B,SAAUuJ,IAEZ,0BAAMzV,UAAU,+BAAhB,0EAGE,sFAEF,0BAAMA,UAAU,gCACb4S,GAAgBrI,GAEnB,kBAACoD,GAAD,CAAQvJ,QAASsR,GAAjB,oBAEF,yBAAK1V,UAAU,yBACb,qCAEF,yBAAKA,UAAU,0BACb,2BACE8J,KAAK,OACL7F,KAAK,QACLvB,GAAG,aACHwJ,SApDiB,SAACqH,GACxB,GAAKA,EAAE5L,OAAOmO,MAAd,CACA,IAAMN,EAAOjC,EAAE5L,OAAOmO,MAAM,GAC5B,GAAKN,EAAL,CAEA,IAAMQ,EAAUC,IAAIC,gBAAgBV,GACpC4D,EAAYpD,EAASR,QAgDjB,kBAAC7H,GAAD,CAAQC,MAAI,GACV,2BAAO2E,QAAQ,cAAf,qBCpFK,SAASgU,GAAWzjB,GACjC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC5B,0BACEH,EAAE,yFACFC,KAAK,kB,OCGE,SAAS4jB,GAAT,GAKJ,IAJThZ,EAIQ,EAJRA,MACAgI,EAGQ,EAHRA,KACAiR,EAEQ,EAFRA,aACAC,EACQ,EADRA,aAEA,OACE,yBAAK1mB,UAAS,mCAAwC,KAAVwN,EAAe,SAAW,KACpE,yBAAKxN,UAAU,8CACb,yBAAKE,IAAKsN,EAAOpN,IAAI,UAEvB,yBACEJ,UAAU,qCACVoE,QAASqiB,GACT,yBAAKzmB,UAAU,+CACb,8DACA,yBAAKA,UAAU,wDACb,yBAAKA,UAAU,4DACb,kBAACiN,GAAD,CAAWlM,MAAM,QAAQD,KAAM,IAC/B,4BAAQsD,QAASqiB,KAEnB,yBAAKzmB,UAAU,6DACb,kBAACumB,GAAD,CAAWxlB,MAAM,UAAUD,KAAM,IACjC,4BAAQsD,QAAS,kBAAMsiB,EAAalZ,EAAOgI,W,OCjBzD,SAASmR,GAAe1d,GACtB,OAAIA,EAAMhE,QAAU,GAAW,wCACxB,GAiDT,IAYe2hB,GAHchnB,aATL,SAAC,GAAD,QAAGyZ,QAAH,MAAuD,CAC7EjI,YADsB,EAAcA,YAEpCnI,MAFsB,EAA2BA,UAIxB,SAAC/H,GAAD,MAAyB,CAClDqY,WAAY,SAACsN,GAAD,OAAkB3lB,EAASqY,GAAWsN,KAClDpN,YAAa,SAACxQ,GAAD,OAAmB/H,EAASuY,GAAYxQ,QAG1BrJ,EAvD7B,YAKW,IAJTwR,EAIQ,EAJRA,YACAnI,EAGQ,EAHRA,MACAsQ,EAEQ,EAFRA,WACAE,EACQ,EADRA,YAEA,EAAsCtY,mBAASwlB,GAAc1d,IAA7D,mBAAQ6d,EAAR,KAAoBC,EAApB,KAWA,OACE,yBAAK/mB,UAAU,0BACb,qDACA,0BAAMA,UAAU,gCAAhB,gDAGA,kBAACoS,GAAD,CACEnO,KAAK,QACL+H,MAAO/C,EACPiD,SAfoB,SAACqH,GACzB,IAAMhJ,EAAQoc,GAAcpT,EAAE5L,OAAOqE,OACrC+a,EAAcxc,GACdkP,EAAYlG,EAAE5L,OAAOqE,QAajBqG,MAAM,QACN9H,MAAOuc,EACP9mB,UAAU,kCAEZ,0BAAMA,UAAU,sCAAhB,gCAC+B,4DAE/B,kBAACoS,GAAD,CACEnO,KAAK,cACL+H,MAAOoF,EACPlF,SA7BmB,SAACqH,GACxBgG,EAAWhG,EAAE5L,OAAOqE,QA6BhBqG,MAAM,cACNC,aAAW,EACXtS,UAAU,qC,OCRlB,IAYegnB,GAHOpnB,aATE,SAAC,GAAD,MAAyC,CAC/DL,KADsB,EAAG8Z,QAAW9Z,SAIX,SAAC2B,GAAD,MAAyB,CAClDsY,WAAY,SAACja,GAAD,OAAkB2B,EAASsY,GAAWja,KAClD0nB,YAAa,kBAAM/lB,EAASuF,EAAS,CAAExC,KAAM,uBAGzBrE,EA7CtB,YAAwE,IAAzCL,EAAwC,EAAxCA,KAAMia,EAAkC,EAAlCA,WAAYyN,EAAsB,EAAtBA,YAC/C,EAAwC9lB,mBAAS,IAAjD,mBAAQ+lB,EAAR,KAAqBC,EAArB,KACA,EAAoChmB,mBAASqT,GAAmBjV,IAAhE,mBAAQiU,EAAR,KAAmB4T,EAAnB,KAeA,OACE,yBAAKpnB,UAAU,mBACb,wDACA,0BAAMA,UAAU,yBAAhB,0CACyC,6CAEzC,kBAACoS,GAAD,CACEC,MAAM,OACNpO,KAAK,OACL+H,MAAOzM,EACPgL,MAAOiJ,EACPtH,SAxBe,SAACqH,GACpB6T,EAAa5S,GAAmBjB,EAAE5L,OAAOqE,QACzCwN,EAAWjG,EAAE5L,OAAOqE,UAwBlB,0BAAMhM,UAAU,0BAA0BknB,GAC1C,kBAACvZ,GAAD,CAAQvJ,QAtBS,WACnB,IAAMmG,EAAQiK,GAAmBjV,GACjC4nB,EAAe5c,GAEXA,GACJ0c,MAiBE,oB,OC9CS,SAASI,GAAiBvkB,GACvC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC5B,0BACEH,EAAE,kKACFC,KAAK,kBCLE,SAAS0kB,GAAiBxkB,GACvC,OACE,kBAAC,EAAD,eAAMnC,QAAQ,aAAgBmC,GAC5B,0BACEH,EAAE,gMACFC,KAAK,kBCqDb,IAWe2kB,GADU3nB,aAVD,SAAC,GAAD,QACtBmL,gBAC2BR,EAFL,EAEpBS,OAAUwc,cAFU,MAKJ,CAClBnd,WANsB,EAGpBA,WAAcmd,cAIhBjd,WAGuB3K,EA1DzB,YAA4E,IAA1CyK,EAAyC,EAAzCA,WAAYE,EAA6B,EAA7BA,MACtCkd,EAAcpiB,kBAAO,GACrB0D,EAAUC,cAmBhB,OAlBAxG,qBACE,WACM6H,IAAeod,EAAY/hB,UAAS+hB,EAAY/hB,SAAU,KAEhE,CAAE2E,IAGJ7H,qBACE,YACMilB,EAAY/hB,SAAY2E,GAAeE,GACzCgG,YAAW,WACTxH,EAAQM,KAAK,OACZ,OAGP,CAAEgB,EAAYE,EAAOxB,IAIrB,yBACE/I,UAAS,4BAAuBqK,GAAcod,EAAY/hB,QACtD,GACA,WACJ,6BACG2E,EACC,kBAAC,WAAD,KACE,kBAACb,EAAD,MACA,0EAEAe,EACF,kBAAC,WAAD,KACE,kBAAC+c,GAAD,CAAiBtnB,UAAU,sBAAsBc,KAAM,KACvD,4BAAKyJ,IAGP,kBAAC,WAAD,KACE,kBAAC8c,GAAD,CAAiBrnB,UAAU,wBAAwBc,KAAM,KACzD,0EClBNslB,GAAS,CAAE,SAAU,UAAW,SA6ItC,IAyBesB,GAHK9nB,aAtBI,SAAC,GAAD,QACtByZ,QAAWnQ,EADW,EACXA,OAAQwQ,EADG,EACHA,UAAW4C,EADR,EACQA,SAAUrT,EADlB,EACkBA,MAAOmI,EADzB,EACyBA,YADzB,IAEtBrG,gBAFsB,MAMJ,CAClB3I,MAAO8G,EACPwQ,YACA4C,WACA/R,MAVsB,EAGpBS,OAAU2c,aAQZtd,WAXsB,EAIpBA,WAAcsd,aAQhB1e,QACAmI,kBAGyB,SAAClQ,GAAD,MAAyB,CAClDiY,cAAe,kBAAMjY,EAASiY,OAC9BE,QAAS,SAAC7L,EAAegI,GAAhB,OAAgCtU,EAASmY,GAAQ,CAAE7L,QAAOgI,WACnE8D,WAAY,SAACkD,GAAD,OAAmBtb,EAASoY,GAAW,CAAEkD,eAGnC5c,EAjKpB,YAWW,IAVTwC,EAUQ,EAVRA,MACAsX,EASQ,EATRA,UACArP,EAQQ,EARRA,WACAE,EAOQ,EAPRA,MACA6G,EAMQ,EANRA,YACAnI,EAKQ,EALRA,MACAqT,EAIQ,EAJRA,SACAnD,EAGQ,EAHRA,cACAE,EAEQ,EAFRA,QACAC,EACQ,EADRA,WAEA,EAAwCnY,mBAAS,GAAjD,mBAAQymB,EAAR,KAAqBC,EAArB,KACA,EAAsC1mB,mBAAS,GAA/C,mBAAQiM,EAAR,KAAoBD,EAApB,KACM2a,EAAWziB,iBAAuB,MAElC0iB,EAAoB1X,uBACxB,WACE,OAAoB,IAAhBuX,GAAsC,IAAjBxlB,EAAM6C,YACX,IAAhB2iB,GAAuB3e,GAAUmI,KAIvC,CAAEwW,EAAaxlB,EAAO6G,EAAOmI,IAG/B5O,qBACE,WACE2K,EAAc/K,EAAM6C,OAAS,KAE/B,CAAE7C,IAGJ,IAAM4lB,EAAoB,SAACrgB,GAAD,OAAoB,WACxCA,IAAWigB,IACXjgB,EAASigB,IAAgBG,KAC7BF,EAAelgB,MAYXuB,EAAS9G,EAAM/B,KAAI,qBAAGd,QAE5B,OACE,yBAAKS,UAAU,iBACb,kBAACwmB,GAAD,CACEC,aAActN,EACd3L,MAAOkM,EACPlE,KAAM8G,EACNoK,aAAcrN,IAEhB,kBAAC,GAAD,MACA,yBAAKrZ,UAAU,4BACb,yBAAKA,UAAU,8CACK,IAAjBoC,EAAM6C,OACL,yBAAKjF,UAAU,0CACb,kBAAC8kB,GAAD,CAAU/jB,MAAM,QAAQD,KAAM,EAAGsD,QAxBvB,WAChBR,OAAOqkB,WAAa,KACpBH,EAASpiB,SACX9B,OAAO4B,SAAS,CACdC,IAAKqiB,EAASpiB,QAAQ+K,wBAAwBhL,IAC9C+K,SAAU,cAoBJ,mEAGF,kBAACtD,GAAD,CACEhE,OAAQA,EACRkE,WAAYA,EACZD,cAAeA,EACfE,cAAeiM,KAIrB,yBAAKtZ,UAAU,2CACb,kBAACgmB,GAAD,CACE9c,OAAQA,EACR+c,aAAc9Y,EACd+Y,YAAa9Y,KAGjB,yBAAKpN,UAAU,oCAAoCoG,IAAK0hB,GACtD,yBACE9nB,UAAS,oDAAgDqK,EAErD,GADA,WAEJ,6BACE,kBAACb,EAAD,MACA,uFAGJ,yBAAKxJ,UAAU,8CACb,kBAACmmB,GAAD,CACET,YAAakC,EACb9B,eAAgB,SAAC7f,IACV8hB,KAAuB9hB,EAAM2hB,GAClCC,EAAe5hB,IAEjBmgB,OAAQA,KAGO,IAAhBwB,EACC,kBAAC,GAAD,CAAWxlB,MAAO8G,EAAQqB,MAAOA,IACf,IAAhBqd,EACF,kBAAC,GAAD,MAEA,kBAAC,GAAD,MAGF,yBAAK5nB,UAAU,uDACb,yBACEA,UAAS,qBAAgB4nB,EAAc,EAAI,EACvC,SACA,GAFK,+DAGT,4BAAQxjB,QAAS4jB,EAAkBJ,EAAc,IAC/C,kBAAC5a,GAAD,CAAWjM,MAAM,WAEnB,uCAEF,yBACEf,UAAS,qBAAgB4nB,EAAc,GAAKxB,GAAOnhB,OAC/C,SACA,GAFK,+DAGT,4BACEiM,UAAW6W,IACX3jB,QAAS4jB,EAAkBJ,EAAc,IACzC,kBAAC5a,GAAD,CAAWnM,OAAQ,IAAKE,MAAM,WAEhC,+C,wBC9IhB,IAKemnB,GADOtoB,aAJE,SAAC,GAAD,MAAgD,CACtEN,KADsB,EAAGA,KAAQO,KAAQC,QAIrBF,EAlBtB,YAIwB,IAHtBN,EAGqB,EAHrBA,KACWsN,EAEU,EAFrBub,UACGC,EACkB,kBACrB,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACvlB,GAAD,OACNxD,EAAO,kBAACsN,EAAc9J,GAAY,kBAAC,IAAD,CAAU7C,GAAG,kB,wBCKvD,IAKeqoB,GADQ1oB,aAJC,SAAC,GAAD,MAAgD,CACtEN,KADsB,EAAGA,KAAQO,KAAQC,QAIpBF,EAlBvB,YAIwB,IAHtBN,EAGqB,EAHrBA,KACWsN,EAEU,EAFrBub,UACGC,EACkB,kBACrB,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACvlB,GAAD,OACLxD,EAAkC,kBAAC,IAAD,CAAUW,GAAG,MAAxC,kBAAC2M,EAAc9J,UCCzBylB,GAAS,CACb,CACEvkB,KAAM,IACNmkB,UAAWxb,IAEb,CACE3I,KAAM,SACNmkB,UAAWjE,GACXsE,WAAW,GAEb,CACExkB,KAAM,YACNmkB,UAAW3D,GACXgE,WAAW,GAEb,CACExkB,KAAM,SACNmkB,UAAWnW,GACXyW,UAAU,GAEZ,CACEzkB,KAAM,mBACNmkB,UAAWzW,IAEb,CACE1N,KAAM,eACNmkB,UAAW/E,IAEb,CACEpf,KAAM,QACNmkB,UAAWO,GACXD,UAAU,GAEZ,CACEzkB,KAAM,YACNmkB,UAAWT,GACXe,UAAU,IA2Cd,IAKeE,GADG/oB,aAJM,SAAC,GAAD,MAAgD,CACtEN,KADsB,EAAGA,KAAQO,KAAQC,QAIzBF,EA3ClB,YACE,OADwC,EAAfN,KAEvB,yBAAKU,UAAU,cACb,kBAAC,IAAD,KACGuoB,GAAOloB,KACN,gBAAG8nB,EAAH,EAAGA,UAAWnkB,EAAd,EAAcA,KAAMykB,EAApB,EAAoBA,SAAUD,EAA9B,EAA8BA,UAA9B,OACEC,EACE,kBAAC,GAAD,CACEzkB,KAAMA,EACN4kB,OAAK,EACLtoB,IAAK0D,EACLmkB,UAAWA,IAEXK,EACF,kBAAC,GAAD,CACExkB,KAAMA,EACN4kB,OAAK,EACLtoB,IAAK0D,EACLmkB,UAAWA,IAGb,kBAAC,IAAD,CAAOnkB,KAAMA,EAAM4kB,OAAK,EAACtoB,IAAK0D,EAAMmkB,UAAWA,OAIrD,kBAAC,IAAD,CACEnkB,KAAK,IACLqkB,OAAQ,kBACN,kBAAC/e,EAAD,CACEC,QAAQ,oCACRzI,KAAM,YClDpB,IAee+nB,GAFHjpB,aAbY,SAAC,GAAD,QACtBN,KAAgBQ,EADM,EACdD,KAAQC,KAAQoZ,EADF,EACEA,UADF,MAGJ,CAClBxY,WAJsB,EAEtBD,UAAaC,WAGbpB,KAAMQ,EACNoZ,gBAGyB,SAAChY,GAAD,MAAyB,CAClD4nB,UAAW,kBAAM5nB,EAASuF,EAAS,CAAExC,KAAM,oBAGjCrE,EApCZ,YAAuE,IAAlDN,EAAiD,EAAjDA,KAAMoB,EAA2C,EAA3CA,WAAYooB,EAA+B,EAA/BA,UAAW5P,EAAoB,EAApBA,UAYhD,OAXA1W,qBACE,WACEsmB,MAEF,CAAEA,IAGApoB,GACF2D,SAASC,KAAKC,UAAUwkB,IAAI,QAI5B,yBAAK/oB,UAAU,OACZV,EAAO,kBAAC,EAAD,MAAc,KACtB,kBAAC,EAAD,MACA,0BAAMU,UAAYV,EAAmB,GAAZ,WACtB4Z,EAAY,kBAAC,GAAD,MAAgB,UCvBjB8P,QACW,cAA7BplB,OAAOH,SAASwlB,UAEe,UAA7BrlB,OAAOH,SAASwlB,UAEhBrlB,OAAOH,SAASwlB,SAASnX,MACvB,2DCTNoX,IAASb,OACP,kBAAC,IAAD,CAAUjc,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJ/H,SAAS8kB,eAAe,SD4HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnf,GACL2S,QAAQ3S,MAAMA,EAAMhB,e","file":"static/js/main.da0ca5e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uigram-transparent.b2d32a76.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.b94168fe.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-icon.85f63035.png\";","module.exports = __webpack_public_path__ + \"static/media/sharing-undraw.6861b601.svg\";","module.exports = __webpack_public_path__ + \"static/media/ideas-undraw.13acbf43.svg\";","import './navbar.styles.scss';\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Logo from './../../assets/images/uigram-transparent.png';\nimport { User } from '../../@types/user.interfaces';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\n\ninterface IProps {\n  user: User | null;\n}\n\nconst navigations = {\n  user: [\n    {\n      link: '/add-post',\n      text: 'Share your Design!',\n      inverted: true\n    },\n    {\n      link: '/profile/self',\n      text: 'Profile'\n    }\n  ],\n  noUser: [\n    {\n      link: '/register',\n      text: 'Join us!',\n      inverted: true\n    },\n    {\n      link: '/login',\n      text: 'Login'\n    }\n  ]\n};\n\nfunction NavbarPlain ({ user }: IProps){\n  const usedNav = user ? navigations.user : navigations.noUser;\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar__logo\">\n        <Link to=\"/\">\n          <img src={Logo} alt=\"Logo\" />\n        </Link>\n      </div>\n      <ul>\n        {usedNav.map(({ link, text, inverted }) => (\n          <li key={link} className={`${inverted ? 'inverted' : ''}`}>\n            <Link to={link}>{text}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ user: { self: { data } } }: GlobalState) => ({\n  user: data\n});\n\nconst Navbar = connect(mapStateToProps)(NavbarPlain);\nexport default Navbar;\n","import React from 'react';\nimport './icon.styles.scss';\nimport { useState } from 'react';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\ninterface IProps {\n  viewBox: string;\n  children: any;\n  className?: string;\n  rotate?: number;\n  size?: number;\n  color?: string;\n  defaultColor: string;\n  noHover?: boolean;\n  dispatch: Dispatch;\n  [key: string]: any;\n}\n\nfunction IconPlain ({\n  viewBox,\n  children,\n  rotate = 360,\n  size = 2,\n  color,\n  noHover = false,\n  defaultColor,\n  className,\n  dispatch,\n  ...additionalData\n}: IProps){\n  const [ isHovered, setIsHovered ] = useState(false);\n  const handleMouseEnter = () => setIsHovered(true);\n  const handleMouseLeave = () => setIsHovered(false);\n\n  return (\n    <div\n      onMouseEnter={noHover ? undefined : handleMouseEnter}\n      onMouseLeave={noHover ? undefined : handleMouseLeave}\n      className={`icon cursor ${className || ''}`}\n      style={{\n        width: `${size}em`,\n        height: `${size}em`,\n        color: isHovered ? '#007fc9' : color ? color : defaultColor\n      }}\n      {...additionalData}>\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        aria-hidden='true'\n        focusable='false'\n        width='1em'\n        height='1em'\n        style={{ transform: `rotate(${rotate}deg)`, fontSize: `${size}em` }}\n        preserveAspectRatio='xMidYMid meet'\n        viewBox={viewBox}>\n        {children}\n      </svg>\n    </div>\n  );\n}\nconst mapStateToProps = ({ colorMode: { inDarkMode } }: GlobalState) => ({\n  defaultColor: inDarkMode ? 'white' : 'black'\n});\n\nconst Icon = connect(mapStateToProps)(IconPlain);\nexport default Icon;\n","import React, { useState, useEffect } from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\nimport { connect } from 'react-redux';\nimport { GlobalState } from '../../../redux/root-reducer';\nimport { Post } from '../../../@types/post.interfaces';\nimport { Dispatch } from 'redux';\n\ninterface IBookmarkProps extends IProps {\n  savedPosts: Post[];\n  dispatch: Dispatch;\n}\n\nfunction BookmarkIconPlain ({\n  savedPosts,\n  dispatch,\n  ...otherProps\n}: IBookmarkProps){\n  const [ isAnimating, setIsAnimating ] = useState(false);\n\n  useEffect(\n    () => {\n      setIsAnimating(true);\n    },\n    [ savedPosts ]\n  );\n\n  return (\n    <Icon\n      viewBox='0 0 24 24'\n      {...otherProps}\n      onAnimationEnd={() => setIsAnimating(false)}\n      className={isAnimating ? 'animate' : ''}\n      id='bookmark'>\n      <path\n        d='M19 10.132v-6c0-1.103-.897-2-2-2H7c-1.103 0-2 .897-2 2V22l7-4.666L19 22V10.132z'\n        fill='currentColor'\n      />\n    </Icon>\n  );\n}\n\nconst mapStateToProps = ({ savedPosts: { savedPosts } }: GlobalState) => ({\n  savedPosts: savedPosts.posts\n});\n\nconst BookmarkIcon = connect(mapStateToProps)(BookmarkIconPlain);\n\nexport default BookmarkIcon;\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function FollowersIcon (props: IProps){\n  return (\n    <Icon viewBox='0 0 512 512' {...props}>\n      <g\n        transform='translate(0.000000,512.000000) scale(0.100000,-0.100000)'\n        fill='currentColor'\n        stroke='none'>\n        <path\n          d={`M2980 5101 c-463 -103 -804 -455 -885 -915 -17 -103 -20 -277 -4\n-360 6 -32 9 -59 7 -61 -2 -1 -43 2 -93 8 -183 19 -401 -21 -582 -108 -121\n-57 -199 -111 -295 -203 -179 -171 -289 -377 -333 -625 -23 -127 -16 -344 13\n-457 58 -218 140 -366 291 -522 41 -43 73 -80 70 -82 -2 -2 -34 -17 -71 -34\n-94 -43 -238 -129 -335 -201 -447 -334 -737 -871 -760 -1409 l-6 -132 207 0\n206 0 0 69 c0 155 44 351 116 521 137 324 387 593 697 752 209 108 388 154\n652 168 190 9 287 25 401 64 389 132 679 471 749 874 16 91 19 286 5 367 -4\n28 -7 51 -6 52 1 2 83 -2 182 -7 218 -11 324 -29 475 -80 242 -80 404 -183\n601 -381 l137 -138 136 151 c74 83 135 153 135 157 0 4 -38 48 -85 98 -151\n162 -344 304 -550 405 l-110 54 67 67 c134 134 244 325 295 514 25 90 27 113\n27 288 0 210 -10 263 -77 430 -127 316 -420 574 -752 661 -137 37 -395 44\n-525 15z m448 -421 c241 -79 421 -272 484 -522 17 -69 20 -102 15 -198 -9\n-195 -73 -338 -211 -475 -95 -93 -163 -136 -279 -176 -207 -71 -438 -40 -625\n85 -378 251 -431 786 -110 1107 187 187 478 259 726 179z m-1343 -1335 c84\n-21 209 -85 280 -142 353 -286 353 -830 0 -1116 -290 -234 -695 -214 -960 48\n-83 82 -142 177 -182 290 -25 73 -27 93 -27 220 0 127 2 147 27 220 109 313\n402 517 717 500 47 -3 112 -11 145 -20z`}\n        />\n        <path\n          d={`M4131 1361 c-381 -424 -696 -771 -699 -771 -4 0 -180 165 -391 366\n-211 201 -389 364 -395 362 -13 -4 -276 -277 -276 -287 0 -14 1071 -1026 1085\n-1026 17 0 1667 1835 1663 1851 -2 6 -52 55 -113 109 -60 54 -126 114 -146\n132 l-36 34 -692 -770z`}\n        />\n      </g>\n    </Icon>\n  );\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function FollowingIcon (props: IProps){\n  return (\n    <Icon viewBox='0 0 512 512' {...props}>\n      <g\n        transform='translate(0.000000,512.000000) scale(0.100000,-0.100000)'\n        fill='currentColor'\n        stroke='none'>\n        <path\n          d={`M2980 5101 c-463 -103 -804 -455 -885 -915 -17 -103 -20 -277 -4\n      -360 6 -32 9 -59 7 -61 -2 -1 -43 2 -93 8 -183 19 -401 -21 -582 -108 -121\n      -57 -199 -111 -295 -203 -179 -171 -289 -377 -333 -625 -23 -127 -16 -344 13\n      -457 58 -218 140 -366 291 -522 41 -43 73 -80 70 -82 -2 -2 -34 -17 -71 -34\n      -94 -43 -238 -129 -335 -201 -447 -334 -737 -871 -760 -1409 l-6 -132 207 0\n      206 0 0 69 c0 155 44 351 116 521 137 324 387 593 697 752 209 108 388 154\n      652 168 190 9 287 25 401 64 389 132 679 471 749 874 16 91 19 286 5 367 -4\n      28 -7 51 -6 52 1 2 83 -2 182 -7 218 -11 324 -29 475 -80 242 -80 404 -183\n      601 -381 l137 -138 136 151 c74 83 135 153 135 157 0 4 -38 48 -85 98 -151\n      162 -344 304 -550 405 l-110 54 67 67 c134 134 244 325 295 514 25 90 27 113\n      27 288 0 210 -10 263 -77 430 -127 316 -420 574 -752 661 -137 37 -395 44\n      -525 15z m448 -421 c241 -79 421 -272 484 -522 17 -69 20 -102 15 -198 -9\n      -195 -73 -338 -211 -475 -95 -93 -163 -136 -279 -176 -207 -71 -438 -40 -625\n      85 -378 251 -431 786 -110 1107 187 187 478 259 726 179z m-1343 -1335 c84\n      -21 209 -85 280 -142 353 -286 353 -830 0 -1116 -290 -234 -695 -214 -960 48\n      -83 82 -142 177 -182 290 -25 73 -27 93 -27 220 0 127 2 147 27 220 109 313\n      402 517 717 500 47 -3 112 -11 145 -20z`}\n        />\n\n        <path\n          d={`M3655 2263 c-397 -63 -730 -324 -875 -687 -63 -157 -75 -223 -74\n-421 0 -163 3 -189 27 -277 87 -318 290 -565 582 -709 69 -34 162 -70 220 -86\n90 -24 117 -27 280 -27 155 0 192 3 262 21 422 113 713 404 826 826 18 70 21\n107 21 262 0 163 -3 189 -27 277 -87 318 -290 565 -582 709 -172 85 -278 110\n-475 114 -85 2 -168 1 -185 -2z m293 -108 c97 -9 224 -50 336 -107 413 -213\n625 -692 507 -1148 -59 -224 -208 -434 -408 -571 -70 -48 -223 -117 -309 -139\n-247 -64 -499 -35 -728 82 -359 185 -572 575 -535 980 20 210 93 388 227 548\n170 205 415 333 684 359 81 8 98 8 226 -4z`}\n        />\n        <path\n          d={`M3130 1259 c-32 -13 -78 -57 -96 -91 -18 -35 -18 -121 0 -157 51 -98\n172 -129 266 -67 100 66 99 227 -2 294 -44 28 -126 39 -168 21z`}\n        />\n        <path\n          d={`M3745 1253 c-44 -23 -65 -44 -86 -85 -45 -87 -8 -193 83 -239 115\n-59 258 30 258 161 0 44 -26 105 -56 131 -56 49 -141 63 -199 32z`}\n        />\n        <path\n          d={`M4382 1249 c-49 -24 -75 -57 -92 -116 -24 -78 17 -165 93 -202 73\n-35 145 -25 200 27 42 39 57 75 57 132 0 137 -134 220 -258 159z`}\n        />\n      </g>\n    </Icon>\n  );\n}\n","import React from 'react';\nimport './icon.styles.scss';\n\nexport default function IconImage ({\n  src,\n  alt = 'icon',\n  size = 2\n}: {\n  src: string;\n  alt?: string;\n  size?: number;\n}){\n  return (\n    <div className='icon' style={{ width: `${size}rem`, height: `${size}rem` }}>\n      <img src={src} alt={alt} />\n    </div>\n  );\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function SunIcon (props: IProps){\n  return (\n    <Icon viewBox='0 0 24 24' {...props}>\n      <path\n        d='M12 4.875c-3.929 0-7.125 3.196-7.125 7.125S8.071 19.125 12 19.125s7.125-3.196 7.125-7.125S15.929 4.875 12 4.875zm0 12.75a5.624 5.624 0 1 1 0-11.25A5.624 5.624 0 0 1 17.625 12A5.632 5.632 0 0 1 12 17.625z'\n        fill='currentColor'\n      />\n      <path d='M11.25.75h1.5V3h-1.5V.75z' fill='currentColor' />\n      <path d='M11.25 21h1.5v2.25h-1.5V21z' fill='currentColor' />\n      <path d='M21 11.25h2.25v1.5H21v-1.5z' fill='currentColor' />\n      <path d='M.75 11.25H3v1.5H.75v-1.5z' fill='currentColor' />\n      <path\n        d='M18.22 19.28l1.061-1.061l1.5 1.5l-1.061 1.061l-1.5-1.5z'\n        fill='currentColor'\n      />\n      <path\n        d='M3.22 4.28l1.061-1.061l1.5 1.5L4.72 5.78l-1.5-1.5z'\n        fill='currentColor'\n      />\n      <path\n        d='M3.22 19.72l1.5-1.5l1.061 1.061l-1.5 1.5L3.22 19.72z'\n        fill='currentColor'\n      />\n      <path\n        d='M18.22 4.72l1.5-1.5l1.061 1.061l-1.5 1.5L18.22 4.72z'\n        fill='currentColor'\n      />\n    </Icon>\n  );\n}\n","import { action } from 'ts-action';\nexport const CHANGE_COLOR_MODE = 'CHANGE_COLOR_MODE';\nexport const changeColorMode = action(CHANGE_COLOR_MODE);\n\nexport type ColorModeActionType = ReturnType<typeof changeColorMode>;\n\nconst ColorModeActionAPI = {\n  changeColorMode\n};\n\nexport default ColorModeActionAPI;\n","import './sidenav.styles.scss';\n\nimport React, { useEffect, useState } from 'react';\n\nimport Logo from '../../assets/images/uigram-transparent.png';\nimport BookmarkIcon from '../icons/bookmark/bookmark.component';\nimport FollowersIcon from '../icons/followers/followers.component';\nimport FollowingIcon from '../icons/following/following.component';\nimport IconImage from '../icons/icon-image.component';\nimport SunIcon from '../icons/sun/sun.component';\nimport { Link, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport ColorModeActionAPI from '../../redux/color-mode/color-mode.actions';\n\ninterface IProps {\n  changeColorMode: () => void;\n}\n\nfunction SidenavPlain ({ changeColorMode }: IProps){\n  const [ isHovered, setIsHovered ] = useState(false);\n  const [ isScrolled, setIsScrolled ] = useState(false);\n\n  const location = useLocation();\n\n  const handleMouseEnter = () => setIsHovered(true);\n  const handleMouseLeave = () => setIsHovered(false);\n\n  useEffect(\n    () => {\n      function handleScrolled (){\n        if (window.scrollY >= 30 && !isScrolled) setIsScrolled(true);\n        else if (window.scrollY < 30 && isScrolled) setIsScrolled(false);\n      }\n      window.addEventListener('scroll', handleScrolled);\n      return () => {\n        window.removeEventListener('scroll', handleScrolled);\n      };\n    },\n    [ isScrolled ]\n  );\n\n  const navigations = [\n    {\n      path: '/saved',\n      name: 'Saved',\n      icon: BookmarkIcon\n    },\n    {\n      path: '/profile/self#following',\n      name: 'Following',\n      icon: FollowingIcon\n    },\n    {\n      path: '/profile/self#followers',\n      name: 'Followers',\n      icon: FollowersIcon\n    }\n  ];\n\n  return (\n    <aside\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      className=\"sidenav\">\n      <ul>\n        <li className={`sidenav__logo ${isScrolled ? '' : 'hide'}`}>\n          <Link to=\"/\">\n            <IconImage src={Logo} alt=\"Logo\" />\n            <span>Home</span>\n          </Link>\n        </li>\n        {navigations.map(({ icon: Icon, name, path }) => (\n          <li key={path}>\n            <Link to={path}>\n              <Icon\n                noHover\n                color={\n                  isHovered ? (\n                    'white'\n                  ) : location.pathname === path ? (\n                    '#00a3ff'\n                  ) : (\n                    undefined\n                  )\n                }\n              />\n              <span>{name}</span>\n            </Link>\n          </li>\n        ))}\n        <li\n          onClick={() => {\n            changeColorMode();\n            document.body.classList.toggle('dark');\n          }}>\n          <div>\n            <SunIcon noHover color={isHovered ? 'white' : undefined} />\n            <span className=\"cursor\">Color Mode</span>\n          </div>\n        </li>\n      </ul>\n    </aside>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  changeColorMode: () => dispatch(ColorModeActionAPI.changeColorMode())\n});\n\nconst Sidenav = connect(null, mapDispatchToProps)(SidenavPlain);\nexport default Sidenav;\n","import React, { useEffect, useRef, useState } from 'react';\nimport './tab-layout.styles.scss';\nimport gsap from 'gsap';\n\ninterface IProps {\n  tabs: string[];\n  activeTab: number;\n  setActiveTab: (tab: number) => void;\n  saveState?: (state: any) => void;\n  getSavedState?: () => any;\n}\n\nexport default function TabLayout ({\n  tabs,\n  activeTab,\n  setActiveTab,\n  getSavedState,\n  saveState\n}: IProps){\n  const [ scrollOffset, setScrollOffset ] = useState(\n    Array.from({ length: tabs.length }).map(() => 0)\n  );\n  const borderRef = useRef<HTMLDivElement>(null);\n\n  const setActiveTabAndSaveOffset = (idx: number) => {\n    setScrollOffset((s) => {\n      const newState = [ ...s ];\n      newState[activeTab] = window.scrollY;\n      return newState;\n    });\n\n    setActiveTab(idx);\n  };\n\n  useEffect(\n    () => {\n      if (getSavedState) {\n        const prevState = getSavedState();\n        if (!prevState.activeTab || !prevState.scrollOffset) return;\n        setActiveTab(prevState.activeTab);\n        setScrollOffset(prevState.scrollOffset);\n      }\n    },\n    [ getSavedState, setActiveTab ]\n  );\n\n  useEffect(\n    () => {\n      return () => {\n        if (saveState) {\n          const newState = [ ...scrollOffset ];\n          newState[activeTab] = window.scrollY;\n          saveState({\n            activeTab,\n            scrollOffset: newState\n          });\n        }\n      };\n    },\n    [ saveState, activeTab, scrollOffset ]\n  );\n\n  useEffect(\n    () => {\n      window.scrollTo({\n        top: scrollOffset[activeTab]\n      });\n    },\n    [ activeTab, scrollOffset ]\n  );\n\n  useEffect(\n    () => {\n      if (borderRef.current) {\n        gsap\n          .timeline()\n          .to(\n            borderRef.current,\n            {\n              duration: 0.2,\n              css: {\n                opacity: 0\n              }\n            },\n            'start'\n          )\n          .to(\n            borderRef.current,\n            {\n              duration: 0.2,\n              css: {\n                opacity: 1\n              }\n            },\n            '+=0.20'\n          );\n      }\n    },\n    [ borderRef, tabs, activeTab ]\n  );\n\n  return (\n    <div className=\"tab-layout\">\n      {tabs.map((tab, idx) => (\n        <div className={`tab${idx === activeTab ? '-active' : ''}`} key={tab}>\n          <span onClick={() => setActiveTabAndSaveOffset(idx)}>{tab}</span>\n        </div>\n      ))}\n      <div\n        ref={borderRef}\n        style={{\n          left: `calc(100% / ${tabs.length * 2} * (${activeTab * 2} + 1))`\n        }}\n        className=\"tab-layout__active-border\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function CommentIcon (props: IProps){\n  return (\n    <Icon viewBox='0 0 42 42' {...props}>\n      <path\n        d='M29.5 30.5h7c2.529 0 3-.529 3-3v-21c0-2.41-.59-3-3-3h-32c-2.47 0-3 .53-3 3v20.971c0 2.469.41 3.029 3 3.029h13s9.562 8.756 10.75 9.812c.422.375 1.281.172 1.25-.812v-9zm-22-9h21v3h-21v-3zm0-6h13v3h-13v-3zm0-6h26v3h-26v-3z'\n        fill='currentColor'\n      />\n    </Icon>\n  );\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function BookmarkAddIcon (props: IProps){\n  return (\n    <Icon viewBox='0 0 24 24' {...props}>\n      <path\n        d='M17 2H7a2 2 0 0 0-2 2v18l7-4.848L19 22V4a2 2 0 0 0-2-2zm-1 9h-3v3h-2v-3H8V9h3V6h2v3h3v2z'\n        fill='currentColor'\n      />\n    </Icon>\n  );\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function LikeIcon(props: IProps) {\n\treturn (\n\t\t<Icon viewBox=\"0 0 24 24\" {...props}>\n\t\t\t<path\n\t\t\t\td=\"M4 21h1V8H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2zM20 8h-7l1.122-3.368A2 2 0 0 0 12.225 2H12L7 7.438V21h11l3.912-8.596L22 12v-2a2 2 0 0 0-2-2z\"\n\t\t\t\tfill=\"currentColor\"\n\t\t\t/>\n\t\t</Icon>\n\t);\n}\n","import {\n  IAddNewCommentPayload,\n  IAddNewReplyPayload\n} from './../comments/comments.actions';\nimport { IPostNewPostPayload } from './../add-post/add-post.actions';\nimport {\n  ILoginPayload,\n  IRegisterPayload,\n  IFetchUserPostsPayload,\n  IFollowUserPayload,\n  IUnfollowUserPayload,\n  ICheckUserPayload,\n  IUpdateUserPayload\n} from './../user/user.actions';\nimport {\n  IChangeLikesOrDislikesPayload,\n  IChangeSavedPayload\n} from './../global-post-actions/global-post-actions';\nimport { action, payload } from 'ts-action';\nimport { IFetchExplorePayload, IFetchFeedsPayload } from '../post/post.actions';\nimport {\n  IFetchCommentsPayload,\n  IFetchRepliesPayload,\n  ILikeOrDislikeCommentPayload\n} from '../comments/comments.actions';\nimport { IFetchPostDetailPayload } from '../post-detail/post-detail.actions';\nimport { IFetchSavedPostsPayload } from '../saved-posts/saved-posts.actions';\nimport { IFetchUserPayload } from '../user/user.actions';\nimport { IAddPostUsingUrlPayload } from '../add-post/add-post.actions';\n\nexport type IFetchApiPayload =\n  | IFetchExplorePayload\n  | IFetchFeedsPayload\n  | IFetchCommentsPayload\n  | IFetchPostDetailPayload\n  | IFetchSavedPostsPayload\n  | IChangeLikesOrDislikesPayload\n  | IChangeSavedPayload\n  | IFetchUserPayload\n  | ILoginPayload\n  | IRegisterPayload\n  | IFetchUserPostsPayload\n  | IFollowUserPayload\n  | IUnfollowUserPayload\n  | IAddPostUsingUrlPayload\n  | ICheckUserPayload\n  | IUpdateUserPayload\n  | IPostNewPostPayload\n  | IFetchRepliesPayload\n  | ILikeOrDislikeCommentPayload\n  | IAddNewCommentPayload\n  | IAddNewReplyPayload;\n\nexport type IFetchApiNames =\n  | IFetchExplorePayload['name']\n  | IFetchFeedsPayload['name']\n  | IFetchCommentsPayload['name']\n  | IFetchPostDetailPayload['name']\n  | IFetchSavedPostsPayload['name']\n  | IChangeLikesOrDislikesPayload['name']\n  | IChangeSavedPayload['name']\n  | IFetchUserPayload['name']\n  | ILoginPayload['name']\n  | IRegisterPayload['name']\n  | IFetchUserPostsPayload['name']\n  | IFollowUserPayload['name']\n  | IUnfollowUserPayload['name']\n  | IAddPostUsingUrlPayload['name']\n  | ICheckUserPayload['name']\n  | IUpdateUserPayload['name']\n  | IPostNewPostPayload['name']\n  | IFetchRepliesPayload['name']\n  | ILikeOrDislikeCommentPayload['name']\n  | IAddNewCommentPayload['name']\n  | IAddNewReplyPayload['name'];\n\nexport const FETCH_API = 'FETCH_API';\nexport const FETCH_API_FAIL = 'FETCH_API_FAIL';\nexport const FETCH_API_SUCCESS = 'FETCH_API_SUCCESS';\n\nexport const fetchApi = action(FETCH_API, payload<IFetchApiPayload>());\nexport const fetchApiFail = action(\n  FETCH_API_FAIL,\n  payload<{ name: IFetchApiNames; error: any }>()\n);\nexport const fetchApiSuccess = action(\n  FETCH_API_SUCCESS,\n  payload<IFetchApiNames>()\n);\n\nexport type FetchActionType =\n  | ReturnType<typeof fetchApi>\n  | ReturnType<typeof fetchApiFail>\n  | ReturnType<typeof fetchApiSuccess>;\n","import React from 'react';\nimport LikeIcon from '../icons/like/like.component';\n\nimport './like-dislike.styles.scss';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { IChangeLikesOrDislikesPayload } from '../../redux/global-post-actions/global-post-actions';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { ILikeOrDislikeCommentPayload } from '../../redux/comments/comments.actions';\n\nfunction LikeDislikePlain ({\n  id,\n  likeCount,\n  dislikeCount,\n  liked,\n  disliked,\n  className,\n  size = 1.2,\n  forComment,\n  updateLikesOrDislikes,\n  updateLikesOrDislikesComment\n}: {\n  id: string;\n  likeCount: number;\n  dislikeCount: number;\n  disliked?: boolean;\n  liked?: boolean;\n  className?: string;\n  size?: number;\n  forComment?: boolean;\n  updateLikesOrDislikes: (\n    payload: IChangeLikesOrDislikesPayload['data']\n  ) => void;\n  updateLikesOrDislikesComment: (\n    payload: ILikeOrDislikeCommentPayload['data']\n  ) => void;\n}){\n  return (\n    <div className={`like-dislike ${className || ''}`}>\n      <div className=\"like-dislike__item\">\n        <LikeIcon\n          size={size}\n          color={liked ? '#00a3ff' : undefined}\n          onClick={() => {\n            const payload = { like: !liked, id: id };\n            if (forComment) updateLikesOrDislikesComment(payload);\n            else updateLikesOrDislikes(payload);\n          }}\n        />\n        <span>{likeCount}</span>\n      </div>\n      <div className=\"like-dislike__item\">\n        <LikeIcon\n          rotate={180}\n          size={size}\n          color={disliked ? '#00a3ff' : undefined}\n          onClick={() => {\n            const payload = { dislike: !disliked, id: id };\n            if (forComment) updateLikesOrDislikesComment(payload);\n            updateLikesOrDislikes(payload);\n          }}\n        />\n        <span>{dislikeCount}</span>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  updateLikesOrDislikes: (payload: IChangeLikesOrDislikesPayload['data']) =>\n    dispatch(fetchApi({ name: 'CHANGE_LIKES_OR_DISLIKES', data: payload })),\n  updateLikesOrDislikesComment: (\n    payload: ILikeOrDislikeCommentPayload['data']\n  ) => dispatch(fetchApi({ name: 'LIKE_DISLIKE_COMMENT', data: payload }))\n});\n\nconst LikeDislike = connect(null, mapDispatchToProps)(LikeDislikePlain);\nexport default LikeDislike;\n","import { useEffect } from 'react';\nimport gsap from 'gsap';\n\nexport default function useAnimation(\n\tentry: IntersectionObserverEntry,\n\tproperty: gsap.CSSVars,\n\tduration: number = 1\n) {\n\tuseEffect(\n\t\t() => {\n\t\t\tif (entry && entry.isIntersecting)\n\t\t\t\tgsap.to(entry.target, duration, {\n\t\t\t\t\tcss: property\n\t\t\t\t});\n\t\t},\n\t\t[ entry, duration, property ]\n\t);\n}\n","import { Post } from './../@types/post.interfaces';\nimport { IChangeSavedPayload } from '../redux/global-post-actions/global-post-actions';\n\nexport default function getAddToSavedListener (\n  post: Post,\n  dispatchAction: (payload: IChangeSavedPayload['data']) => void\n){\n  return () => {\n    dispatchAction({ saved: !post.saved, post: post });\n  };\n}\n","import React from 'react';\nimport moment from 'moment';\nimport './timestamp.styles.scss';\n\ninterface IProps {\n  timestamp: number;\n  className?: string;\n}\n\nexport default function Timestamp ({ timestamp, className }: IProps){\n  return (\n    <span className={`timestamp ${className || ''}`}>\n      {moment(timestamp * 1000).fromNow()}\n    </span>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { User, UserBasicInfo } from '../../@types/user.interfaces';\nimport { GlobalState } from '../../redux/root-reducer';\n\nimport './follow-button.styles.scss';\n\ninterface IProps {\n  owner: UserBasicInfo;\n  user: User | null;\n  followUser: (id: string) => void;\n}\n\nfunction FollowButtonPlain ({ owner, user, followUser }: IProps){\n  const handleFollowClick = () => followUser(owner.id);\n  return (\n    <Fragment>\n      {user && !owner.followed ? (\n        <span>\n          <span>&nbsp;- </span>\n          <span onClick={handleFollowClick} className=\"follow-button\">\n            follow\n          </span>\n        </span>\n      ) : null}\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = ({ user: { self: { data } } }: GlobalState) => ({\n  user: data\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  followUser: (payload: string) =>\n    dispatch(fetchApi({ name: 'FOLLOW_USER', data: { id: payload } }))\n});\n\nconst FollowButton = connect(mapStateToProps, mapDispatchToProps)(\n  FollowButtonPlain\n);\nexport default FollowButton;\n","import React from 'react';\n\nimport './post-preview.styles.scss';\nimport CommentIcon from '../icons/comment/comment.component';\nimport BookmarkAddIcon from '../icons/bookmark-add/bookmark-add.component';\nimport LikeDislike from '../like-dislike/like-dislike.component';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Post } from '../../@types/post.interfaces';\nimport { useInView } from 'react-intersection-observer';\nimport useAnimation from '../../effects/useAnimation.effect';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport getAddToSavedListener from '../../utils/get-add-to-saved-listener';\nimport Timestamp from '../timestamp/timestamp.component';\nimport { IChangeSavedPayload } from '../../redux/global-post-actions/global-post-actions';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport FollowButton from '../follow-button/follow-button.component';\n\ninterface IProps {\n  post: Post;\n  noFollowButton?: boolean;\n  updateSaved: (payload: IChangeSavedPayload['data']) => void;\n}\n\nfunction PostPreviewPlain ({ post, updateSaved, noFollowButton }: IProps){\n  const [ ref, , entry ] = useInView({\n    triggerOnce: true,\n    threshold: 0.3\n  });\n\n  const handleBookmarkAddClick = getAddToSavedListener(post, updateSaved);\n\n  const history = useHistory();\n\n  useAnimation(entry!, { opacity: 1 }, 0.8);\n\n  const {\n    id,\n    title,\n    owner,\n    images,\n    likeCount,\n    dislikeCount,\n    commentsCount,\n    liked,\n    disliked,\n    timestamp,\n    saved\n  } = post;\n\n  return (\n    <div className=\"post-preview not-visible\" ref={ref}>\n      <div className=\"post-preview__content-container\">\n        <Link to={`/post-detail/${id}`} className=\"image-container\">\n          <div className=\"img-hover-hitbox\" />\n          <img src={images[0]} alt=\"page\" />\n        </Link>\n        <div className=\"post-preview__content\">\n          <div className=\"post-preview__info\">\n            <span className=\"post-preview__title\">{title}</span>\n            <div className=\"post-preview__detail\">\n              <span>by &nbsp;</span>\n              <Link\n                to={`/profile/${owner.id}`}\n                className=\"post-preview__author\">\n                {owner.username}\n              </Link>\n              {noFollowButton ? null : <FollowButton owner={owner} />}\n            </div>\n          </div>\n          <LikeDislike\n            likeCount={likeCount}\n            dislikeCount={dislikeCount}\n            liked={liked}\n            disliked={disliked}\n            id={id}\n          />\n        </div>\n      </div>\n      <div className=\"post-preview__additional\">\n        <div className=\"post-preview__additional__container\">\n          <div className=\"post-preview__additional__container__comments\">\n            <CommentIcon\n              size={1.2}\n              onClick={() => history.push(`/post-detail/${id}#comments`)}\n            />\n            <span>{commentsCount} comments</span>\n          </div>\n          <BookmarkAddIcon\n            onClick={handleBookmarkAddClick}\n            size={1.2}\n            color={saved ? '#00a3ff' : undefined}\n          />\n        </div>\n        <Timestamp timestamp={timestamp} />\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  updateSaved: (payload: IChangeSavedPayload['data']) =>\n    dispatch(fetchApi({ name: 'CHANGE_SAVED', data: payload }))\n});\n\nconst PostPreview = connect(null, mapDispatchToProps)(PostPreviewPlain);\nexport default PostPreview;\n","import React from 'react';\nimport './error-message.styles.scss';\n\nexport default function ErrorMessage ({\n  message,\n  size\n}: {\n  message: string;\n  size?: number;\n}){\n  return (\n    <div className='error-message'>\n      <span style={{ fontSize: `${size || 1}em` }}>{message}</span>\n    </div>\n  );\n}\n","import React from 'react';\nimport './loading.styles.scss';\n\nexport default function Loading ({ size = 150 }: { size?: number }){\n  return (\n    <div className='loading'>\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        style={{\n          margin: 'auto',\n          background: 'none',\n          display: 'block',\n          shapeRendering: 'auto',\n          width: `${size}px`,\n          height: `${size}px`\n        }}\n        viewBox='0 0 100 100'\n        preserveAspectRatio='xMidYMid'>\n        <path\n          d='M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50'\n          fill='#85a2b6'\n          stroke='none'\n          transform='rotate(336.022 50 51)'>\n          <animateTransform\n            attributeName='transform'\n            type='rotate'\n            dur='1s'\n            repeatCount='indefinite'\n            keyTimes='0;1'\n            values='0 50 51;360 50 51'\n          />\n        </path>\n      </svg>\n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\nimport PostPreview from '../post-preview/post-preview.component';\nimport './post-preview-container.styles.scss';\nimport { Post } from '../../@types/post.interfaces';\nimport ErrorMessage from '../error-message/error-message.component';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Loading from '../loading/loading.component';\n\ninterface IProps {\n  posts: Post[];\n  noDataMessage: string;\n  isFetching?: boolean;\n  error?: string;\n  noFollowButton?: boolean;\n  fetchItem: () => void;\n}\n\nexport default function PostPreviewContainer ({\n  posts,\n  noDataMessage,\n  isFetching,\n  fetchItem,\n  error,\n  noFollowButton\n}: IProps){\n  return (\n    <div className=\"post-preview-container\">\n      {posts.length === 0 && isFetching === false && !error ? (\n        <ErrorMessage message={noDataMessage} size={2} />\n      ) : (\n        <Fragment>\n          <InfiniteScroll\n            className=\"post-preview-container__content\"\n            dataLength={posts.length}\n            next={fetchItem}\n            hasMore={true}\n            scrollThreshold=\"500px\"\n            loader={null}>\n            {posts.map((post: Post) => (\n              <PostPreview\n                noFollowButton={noFollowButton}\n                key={post.id}\n                post={post}\n              />\n            ))}\n          </InfiniteScroll>\n          {isFetching ? (\n            <Loading size={100} />\n          ) : error ? (\n            <ErrorMessage size={1.3} message={error} />\n          ) : null}\n        </Fragment>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport PostPreviewContainer from '../../components/post-preview-container/post-preview-container.component';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { Dispatch } from 'redux';\nimport './feeds-posts.styles.scss';\nimport { connect } from 'react-redux';\nimport { Post } from '../../@types/post.interfaces';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { User } from '../../@types/user.interfaces';\n\ninterface IProps {\n  self: { data: User | null; posts: { page: number; data: Post[] } };\n  feeds: Post[];\n  isFetching?: boolean;\n  error?: string;\n  page: number;\n  fetchFeedsPosts: (page: number) => void;\n}\n\nfunction FeedsPostsPlain ({\n  self,\n  feeds,\n  isFetching,\n  page,\n  fetchFeedsPosts,\n  error\n}: IProps){\n  useEffect(\n    () => {\n      if (isFetching || error) return;\n      if (feeds.length === 0 && page === 0) fetchFeedsPosts(1);\n    },\n    [ fetchFeedsPosts, feeds, page, isFetching, error ]\n  );\n\n  let name = 'User';\n  if (self.data) name = self.data.username;\n\n  return (\n    <div className=\"feeds-posts\">\n      <h2 className=\"heading\">Welcome, {name}</h2>\n      <PostPreviewContainer\n        posts={feeds}\n        isFetching={isFetching}\n        error={error}\n        fetchItem={() => fetchFeedsPosts(page + 1)}\n        noDataMessage={`There is no one that you follow yet\\nExplore others' works through explore tab`}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  user: { self },\n  post: { feeds },\n  fetchController: { isFetching, errors }\n}: GlobalState) => ({\n  self: self,\n  feeds: feeds.posts,\n  page: feeds.page,\n  isFetching: isFetching.FEEDS,\n  error: errors.FEEDS\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchFeedsPosts: (page: number) => {\n    dispatch(fetchApi({ name: 'FEEDS', data: { page } }));\n  }\n});\n\nconst FeedsPosts = connect(mapStateToProps, mapDispatchToProps)(\n  FeedsPostsPlain\n);\nexport default FeedsPosts;\n","import { action, payload } from 'ts-action';\nimport { Post } from '../../@types/post.interfaces';\nimport { followUser, unfollowUser } from '../user/user.actions';\n\nexport interface IFetchFeedsPayload {\n  name: 'FEEDS';\n  data: {\n    page: number;\n  };\n}\n\nexport interface IFetchExplorePayload {\n  name: 'EXPLORE';\n  data: {\n    sort?: string;\n    page: number;\n  };\n}\n\nexport const LOAD_FEEDS_POSTS = 'LOAD_FEEDS_POSTS';\nexport const LOAD_EXPLORE_POSTS = 'LOAD_EXPLORE_POSTS';\nexport const CLEAR_EXPLORE_POSTS = 'CLEAR_EXPLORE_POSTS';\nexport const CLEAR_FEEDS_POSTS = 'CLEAR_FEEDS_POSTS';\n\nexport const loadFeedsPosts = action(\n  LOAD_FEEDS_POSTS,\n  payload<{ posts: Post[]; page: number }>()\n);\nexport const loadExplorePosts = action(\n  LOAD_EXPLORE_POSTS,\n  payload<{ sort?: string; posts: Post[]; page: number }>()\n);\nexport const clearFeedsPosts = action(CLEAR_FEEDS_POSTS);\nexport const clearExplorePosts = action(CLEAR_EXPLORE_POSTS);\n\nexport type PostActionType =\n  | ReturnType<typeof loadExplorePosts>\n  | ReturnType<typeof loadFeedsPosts>\n  | ReturnType<typeof clearExplorePosts>\n  | ReturnType<typeof clearFeedsPosts>\n  | ReturnType<typeof followUser>\n  | ReturnType<typeof unfollowUser>;\n","import React, { useEffect, useState } from 'react';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport PostPreviewContainer from '../../components/post-preview-container/post-preview-container.component';\nimport { Post } from '../../@types/post.interfaces';\nimport './explore-posts.styles.scss';\nimport usePrevious from '../../effects/usePrevious.effect';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { clearExplorePosts } from '../../redux/post/post.actions';\n\ninterface IProps {\n  explore: Post[];\n  sortBy?: string;\n  page: number;\n  isFetching?: boolean;\n  error?: string;\n  fetchExplorePosts: (sort: string, page: number) => void;\n  clearExplorePosts: () => void;\n}\n\nfunction ExplorePostsPlain ({\n  explore,\n  sortBy,\n  page,\n  isFetching,\n  fetchExplorePosts,\n  clearExplorePosts,\n  error\n}: IProps){\n  const [ sort, setSort ] = useState(sortBy || 'timestamp');\n  const prevSort = usePrevious(sort);\n\n  useEffect(\n    () => {\n      if (isFetching || error) return;\n      if (\n        (explore.length === 0 && page === 0) ||\n        (prevSort !== sort && prevSort)\n      ) {\n        fetchExplorePosts(sort, 1);\n      }\n    },\n    [ fetchExplorePosts, sort, explore, prevSort, page, isFetching, error ]\n  );\n\n  return (\n    <div className=\"explore-posts\">\n      <div className=\"explore-posts__sort-container\">\n        <span>Sort by: </span>\n        <select\n          onChange={({ target: { value } }) => {\n            setSort(value);\n            clearExplorePosts();\n          }}\n          defaultValue={sort}>\n          <option value=\"timestamp\">Date</option>\n          <option value=\"likesCount\">Most Liked</option>\n        </select>\n      </div>\n      <PostPreviewContainer\n        fetchItem={() => fetchExplorePosts(sort, page + 1)}\n        posts={explore}\n        error={error}\n        isFetching={isFetching}\n        noDataMessage={`No one have posted :(`}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  post: { explore },\n  fetchController: { isFetching, errors }\n}: GlobalState) => ({\n  explore: explore.posts,\n  page: explore.page,\n  sortBy: explore.sort,\n  isFetching: isFetching.EXPLORE,\n  error: errors.EXPLORE\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchExplorePosts: (sort: string, page: number) => {\n    dispatch(fetchApi({ name: 'EXPLORE', data: { sort, page } }));\n  },\n  clearExplorePosts: () => dispatch(clearExplorePosts())\n});\n\nconst ExplorePosts = connect(mapStateToProps, mapDispatchToProps)(\n  ExplorePostsPlain\n);\nexport default ExplorePosts;\n","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious<T> (value: T): T | undefined{\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","const store = {\n  tab: {}\n};\n\nconst homePageStore = {\n  saveTabState: function (state: any){\n    store.tab = state;\n  },\n  getTabState: function (){\n    return store.tab;\n  }\n};\n\nexport default homePageStore;\n","import React, { useState, Fragment } from 'react';\nimport './home-page.styles.scss';\nimport TabLayout from '../../components/tab-layout/tab-layout.component';\nimport FeedsPosts from '../feeds-posts/feeds-posts.component';\nimport ExplorePosts from '../explore-posts/explore-posts.component';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\nimport { User } from '../../@types/user.interfaces';\nimport homePageStore from './home-page.store';\n\nconst tabNames = [ 'Your Feeds', 'Explore' ];\nconst Components = [ FeedsPosts, ExplorePosts ];\n\ninterface IProps {\n  user: User | null;\n}\n\nfunction HomePagePlain ({ user }: IProps){\n  const [ activeTab, setActiveTab ] = useState(0);\n\n  const Component = Components[activeTab];\n\n  return (\n    <div className='home-page'>\n      {user ? (\n        <Fragment>\n          <TabLayout\n            activeTab={activeTab}\n            setActiveTab={setActiveTab}\n            tabs={tabNames}\n            saveState={homePageStore.saveTabState}\n            getSavedState={homePageStore.getTabState}\n          />\n          {<Component />}\n        </Fragment>\n      ) : (\n        <ExplorePosts />\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ user: { self: { data } } }: GlobalState) => ({\n  user: data\n});\n\nconst HomePage = connect(mapStateToProps)(HomePagePlain);\nexport default HomePage;\n","import React, { Fragment } from 'react';\nimport Loading from '../loading/loading.component';\nimport ErrorMessage from '../error-message/error-message.component';\n\ninterface IProps {\n  isLoading?: boolean;\n  loadingSize?: number;\n  error?: string;\n  children: any;\n}\n\nexport default function LoadingError ({\n  children,\n  isLoading,\n  error,\n  loadingSize\n}: IProps){\n  return (\n    <Fragment>\n      {isLoading ? (\n        <Loading size={loadingSize} />\n      ) : error ? (\n        <ErrorMessage message={error} />\n      ) : (\n        children\n      )}\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function AngleIcon (props: IProps){\n  return (\n    <Icon viewBox='0 0 16 16' {...props}>\n      <path fill='currentColor' d='M12 13h-2L5 8l5-5h2L7 8z' />\n    </Icon>\n  );\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function CrossIcon(props: IProps) {\n    return (\n        <Icon viewBox='0 0 24 24' {...props}>\n            <path d='M18.36 19.78L12 13.41l-6.36 6.37l-1.42-1.42L10.59 12L4.22 5.64l1.42-1.42L12 10.59l6.36-6.36l1.41 1.41L13.41 12l6.36 6.36z' fill='currentColor' />\n        </Icon>\n    );\n}","import React from 'react';\nimport './image-carousel.styles.scss';\nimport AngleIcon from '../icons/angle/angle.component';\nimport CrossIcon from '../icons/cross/cross.compnent';\n\ninterface IProps {\n  images: string[];\n  slideIndex: number;\n  setSlideIndex: (idx: number) => void;\n  onDeleteClick?: (idx: number) => void;\n}\n\nexport default function ImageCarousel ({\n  images,\n  setSlideIndex,\n  slideIndex,\n  onDeleteClick\n}: IProps){\n  const slide = (change: -1 | 1) => () => {\n    const newIdx = slideIndex + change;\n    setSlideIndex(newIdx);\n  };\n\n  return (\n    <div className=\"image-carousel scrollbar\">\n      <div\n        className=\"arrow arrow-right\"\n        onClick={slide(1)}\n        style={{ opacity: slideIndex >= images.length - 1 ? 0 : 'initial' }}>\n        <AngleIcon rotate={180} color=\"white\" />\n      </div>\n      <div\n        className=\"arrow arrow-left\"\n        onClick={slide(-1)}\n        style={{ opacity: slideIndex <= 0 ? 0 : 'initial' }}>\n        <AngleIcon color=\"white\" />\n      </div>\n      {onDeleteClick ? (\n        <div className=\"delete-btn\" onClick={() => onDeleteClick(slideIndex)}>\n          <CrossIcon color=\"white\" />\n        </div>\n      ) : null}\n      <div\n        className=\"image-carousel__container scrollbar\"\n        style={{\n          width: `calc(100% * ${images.length})`,\n          transform: `translateX(-${100 / images.length * slideIndex}%)`\n        }}>\n        {images.map((image, idx) => (\n          <div\n            className=\"image-carousel__slide scrollbar\"\n            style={{ width: `calc(100% / ${images.length})` }}\n            key={idx}>\n            <img src={image} alt=\"\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport './textbox.styles.scss';\n\ninterface IProps {\n  placeholder: string;\n  type?: 'text' | 'password';\n  className?: string;\n  width?: string;\n  value: string;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport default function Textbox ({\n  placeholder,\n  type = 'text',\n  className,\n  width = '100%',\n  onChange,\n  value\n}: IProps){\n  return (\n    <input\n      type={type}\n      placeholder={placeholder}\n      className={`textbox ${className}`}\n      style={{ width: width }}\n      onChange={onChange}\n      value={value}\n    />\n  );\n}\n","import React, { ButtonHTMLAttributes } from 'react';\nimport './button.styles.scss';\n\ninterface IProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  className?: string;\n  children: any;\n  alt?: boolean;\n  red?: boolean;\n  full?: boolean;\n  type?: 'button' | 'submit';\n  onClick?: (e?: any) => any;\n}\n\nexport default function Button ({\n  alt,\n  children,\n  className,\n  full,\n  red,\n  ...otherProps\n}: IProps){\n  return (\n    <button\n      className={`button ${alt ? 'alt' : ''} ${red ? 'red' : ''} ${full\n        ? 'full'\n        : ''} ${className || ''}`}\n      {...otherProps}>\n      {children}\n    </button>\n  );\n}\n","import React from 'react';\nimport { UserBasicInfo } from '../../@types/user.interfaces';\nimport ProfilePic from './../../assets/images/avatar.png';\nimport { useHistory } from 'react-router-dom';\nimport './user-info.styles.scss';\n\ninterface IProps {\n  user: UserBasicInfo;\n}\n\nexport default function UserInfo ({ user }: IProps){\n  const history = useHistory();\n  const spanClickHandler = () => history.push(`/profile/${user.id}`);\n\n  return (\n    <div className=\"user-info\">\n      <img src={user.profilePic || ProfilePic} alt=\"profile\" />\n      <span onClick={spanClickHandler}>{user.username}</span>\n    </div>\n  );\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function ReplyIcon (props: IProps){\n  return (\n    <Icon viewBox='0 0 512 512' {...props}>\n      <path\n        d={`M511.563,434.259c-1.728-142.329-124.42-258.242-277.087-263.419V95.999c0-17.645-14.342-31.999-31.974-31.999\n\t\t\tc-7.931,0-15.591,3.042-21.524,8.562c0,0-134.828,124.829-173.609,163.755C2.623,241.109,0,248.088,0,255.994\n\t\t\tc0,7.906,2.623,14.885,7.369,19.687c38.781,38.915,173.609,163.745,173.609,163.745c5.933,5.521,13.593,8.562,21.524,8.562\n\t\t\tc17.631,0,31.974-14.354,31.974-31.999v-74.591c153.479,2.156,255.792,50.603,255.792,95.924c0,5.896,4.767,10.666,10.658,10.666\n\t\t\tc0.167,0.021,0.333,0.01,0.416,0c5.891,0,10.658-4.771,10.658-10.666C512,436.259,511.854,435.228,511.563,434.259z`}\n        fill='currentColor'\n      />\n    </Icon>\n  );\n}\n","import React from 'react';\nimport UserInfo from '../user-info/user-info.component';\nimport './comment-content.styles.scss';\nimport { Comment } from '../../@types/comment.interfaces';\nimport LikeDislike from '../like-dislike/like-dislike.component';\nimport ReplyIcon from '../icons/reply/reply.component';\nimport Timestamp from '../timestamp/timestamp.component';\n\ninterface IProps {\n  comment: Comment;\n  replyHandler?: () => void;\n  animation?: boolean;\n}\n\nexport default function CommentContent ({\n  comment,\n  replyHandler,\n  animation\n}: IProps){\n  const {\n    owner,\n    id,\n    content,\n    liked,\n    disliked,\n    dislikeCount,\n    likeCount,\n    timestamp\n  } = comment;\n\n  return (\n    <div className={`comment ${animation ? 'fade-in' : ''}`}>\n      <div className=\"comment__info\">\n        <UserInfo user={owner} />\n        <Timestamp timestamp={timestamp} className=\"comment__info__timestamp\" />\n      </div>\n      <p>{content}</p>\n      <div className=\"flex-row-space-between comment__additional-data\">\n        <LikeDislike\n          forComment\n          id={id}\n          liked={liked}\n          disliked={disliked}\n          likeCount={likeCount}\n          dislikeCount={dislikeCount}\n        />\n        {replyHandler ? (\n          <span onClick={replyHandler}>\n            <ReplyIcon size={1.2} /> reply\n          </span>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef, Fragment } from 'react';\nimport { Comment } from '../../@types/comment.interfaces';\nimport './comment-parent.styles.scss';\nimport useAnimation from '../../effects/useAnimation.effect';\nimport { useInView } from 'react-intersection-observer';\nimport AvatarIcon from './../../assets/images/avatar.png';\nimport Textbox from '../textbox/textbox.component';\nimport Button from '../button/button.component';\nimport CommentContent from '../comment-content/comment-content.component';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport Loading from '../loading/loading.component';\n\ninterface IProps {\n  comment: Comment;\n  fetchReplies: (parentId: string, page: number, limit?: number) => void;\n  postReply: (id: string, content: string, postId: string) => void;\n}\n\nfunction CommentParentPlain ({ comment, fetchReplies, postReply }: IProps){\n  const [ showReplies, setShowReplies ] = useState(false);\n  const [ showReplyInput, setShowReplyInput ] = useState(false);\n  const [ replyInput, setReplyInput ] = useState('');\n  const hasFetch = useRef(false);\n\n  const [ ref, , entry ] = useInView({\n    triggerOnce: true,\n    threshold: 0.3\n  });\n\n  useAnimation(entry!, { opacity: 1 }, 0.8);\n  const { repliesCount } = comment;\n\n  useEffect(\n    () => {\n      if (comment.replies) {\n        hasFetch.current = true;\n      } else if (hasFetch.current === false && showReplies === true) {\n        fetchReplies(comment.id, 1);\n        hasFetch.current = true;\n      }\n    },\n    [ showReplies, fetchReplies, comment ]\n  );\n\n  return (\n    <div className=\"comment-container\" ref={ref}>\n      <CommentContent\n        comment={comment}\n        replyHandler={() => setShowReplyInput(true)}\n      />\n      <div\n        className=\"user-reply-input\"\n        style={{ display: showReplyInput ? 'flex' : 'none' }}>\n        <div className=\"user-reply-input__user-info\">\n          <img src={AvatarIcon} alt=\"\" />\n          <Textbox\n            placeholder=\"add reply...\"\n            value={replyInput}\n            onChange={({ target: { value } }) => {\n              setReplyInput(value);\n            }}\n          />\n        </div>\n        <div className=\"user-reply-input__buttons\">\n          <Button\n            className=\"cancel-btn\"\n            onClick={() => setShowReplyInput(false)}>\n            Cancel\n          </Button>\n          <Button\n            className=\"reply-btn\"\n            onClick={() => {\n              postReply(comment.id, replyInput, comment.postId);\n              setReplyInput('');\n              setShowReplyInput(false);\n            }}>\n            Reply\n          </Button>\n        </div>\n      </div>\n\n      <span\n        style={{ display: repliesCount === 0 ? 'none' : 'inline' }}\n        className=\"reply-count cursor\"\n        onClick={() => setShowReplies(!showReplies)}>\n        {showReplies ? 'Hide' : 'Show'} {repliesCount} replies\n      </span>\n\n      <div\n        className=\"replies\"\n        style={{ display: showReplies ? 'flex' : 'none' }}>\n        {comment.replies ? (\n          <Fragment>\n            {comment.replies.data.map((comment) => (\n              <CommentContent key={comment.id} comment={comment} animation />\n            ))}\n            {comment.repliesCount - comment.replies.data.length > 0 ? (\n              <span\n                className=\"reply-count cursor\"\n                onClick={() =>\n                  fetchReplies(comment.id, comment.replies!.page + 1)}>\n                Load {comment.repliesCount - comment.replies.data.length} more\n                comments\n              </span>\n            ) : null}\n          </Fragment>\n        ) : (\n          <Loading size={50} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchReplies: (parentId: string, page: number, limit = 5) =>\n    dispatch(fetchApi({ name: 'REPLIES', data: { page, limit, parentId } })),\n  postReply: (id: string, content: string, postId: string) =>\n    dispatch(fetchApi({ name: 'ADD_NEW_REPLY', data: { id, content, postId } }))\n});\n\nconst CommentParent = connect(null, mapDispatchToProps)(CommentParentPlain);\nexport default CommentParent;\n","import { Comment } from './../../@types/comment.interfaces';\nimport { action, payload } from 'ts-action';\n\nexport interface IFetchCommentsPayload {\n  name: 'COMMENTS';\n  data: {\n    postId: string;\n    page: number;\n    limit: number;\n  };\n}\n\nexport interface IFetchRepliesPayload {\n  name: 'REPLIES';\n  data: {\n    parentId: string;\n    page: number;\n    limit: number;\n  };\n}\n\nexport interface ILikeOrDislikeCommentPayload {\n  name: 'LIKE_DISLIKE_COMMENT';\n  data: {\n    id: string;\n    like?: boolean;\n    dislike?: boolean;\n  };\n}\n\nexport interface IAddNewCommentPayload {\n  name: 'ADD_NEW_COMMENT';\n  data: {\n    postId: string;\n    content: string;\n  };\n}\n\nexport interface IAddNewReplyPayload {\n  name: 'ADD_NEW_REPLY';\n  data: {\n    id: string;\n    content: string;\n    postId: string;\n  };\n}\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const CLEAR_COMMENTS = 'CLEAR_COMMENTS';\nexport const ADD_REPLIES = 'ADD_REPLIES';\nexport const CLEAR_REPLIES = 'CLEAR_REPLIES';\nexport const UPDATE_COMMENTS = 'UPDATE_COMMENTS';\nexport const ADD_NEW_COMMENT = 'ADD_NEW_COMMENT';\nexport const ADD_NEW_REPLY = 'ADD_NEW_REPLY';\n\nexport const addComments = action(\n  ADD_COMMENTS,\n  payload<{ comments: Comment[]; page: number; postId: string }>()\n);\nexport const clearComments = action(CLEAR_COMMENTS);\nexport const addReplies = action(\n  ADD_REPLIES,\n  payload<{ replies: Comment[]; page: number; parentId: string }>()\n);\nexport const clearReplies = action(CLEAR_REPLIES, payload<{ id: string }>());\nexport const updateComments = action(\n  UPDATE_COMMENTS,\n  payload<{ comment: Comment }>()\n);\nexport const addNewComment = action(ADD_NEW_COMMENT, payload<Comment>());\nexport const addNewReply = action(ADD_NEW_REPLY, payload<Comment>());\n\ntype CommentsActionType =\n  | ReturnType<typeof addComments>\n  | ReturnType<typeof clearComments>\n  | ReturnType<typeof addReplies>\n  | ReturnType<typeof updateComments>\n  | ReturnType<typeof clearReplies>\n  | ReturnType<typeof addNewReply>;\n\nexport default CommentsActionType;\n","import React, { useEffect, useRef, Fragment, useCallback } from 'react';\nimport { Dispatch } from 'redux';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\nimport { Comment } from '../../@types/comment.interfaces';\nimport CommentParent from '../comment-parent/comment-parent.component';\nimport './comments-container.styles.scss';\nimport { clearComments } from '../../redux/comments/comments.actions';\nimport { useLocation } from 'react-router-dom';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport ErrorMessage from '../error-message/error-message.component';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Loading from '../loading/loading.component';\n\ninterface IProps {\n  postId: string;\n  comments: Comment[];\n  currentPostId: string;\n  page: number;\n  isFetching?: boolean;\n  error?: string;\n  fetchComments: (postId: string, page?: number, limit?: number) => void;\n  clearComments: () => void;\n}\n\nconst noDataMessage = 'Be the first to comment!';\n\nfunction CommentsContainerPlain ({\n  postId,\n  comments,\n  isFetching,\n  error,\n  fetchComments,\n  currentPostId,\n  page,\n  clearComments\n}: IProps){\n  const commentsRef = useRef<HTMLDivElement>(null);\n  const location = useLocation();\n  const hasFetch = useRef(false);\n\n  useEffect(\n    () => {\n      if (postId !== currentPostId) {\n        clearComments();\n        fetchComments(postId, 1);\n        hasFetch.current = true;\n      }\n    },\n    [ clearComments, fetchComments, postId, currentPostId ]\n  );\n\n  const fetchNext = useCallback(\n    () => {\n      fetchComments(postId, page + 1);\n    },\n    [ postId, page, fetchComments ]\n  );\n\n  useEffect(\n    () => {\n      if (\n        hasFetch.current &&\n        !isFetching &&\n        location.hash === '#comments' &&\n        commentsRef.current\n      ) {\n        setTimeout(() => {\n          if (commentsRef.current)\n            window.scrollTo({\n              behavior: 'smooth',\n              top: commentsRef.current.getBoundingClientRect().top\n            });\n        }, 200);\n      }\n    },\n    [ location, comments, isFetching ]\n  );\n\n  return (\n    <div className=\"comments-container\" ref={commentsRef}>\n      {comments.length === 0 && isFetching === false && !error ? (\n        <ErrorMessage message={noDataMessage} size={2} />\n      ) : (\n        <Fragment>\n          <InfiniteScroll\n            className=\"comments-container__content\"\n            dataLength={comments.length}\n            next={fetchNext}\n            hasMore={true}\n            scrollThreshold=\"500px\"\n            loader={null}>\n            {comments.map((comment: Comment) => (\n              <CommentParent key={comment.id} comment={comment} />\n            ))}\n          </InfiniteScroll>\n          {isFetching ? (\n            <Loading size={100} />\n          ) : error ? (\n            <ErrorMessage size={1.3} message={error} />\n          ) : null}\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  comments: { comments, page, postId },\n  fetchController: { isFetching, errors }\n}: GlobalState) => ({\n  comments,\n  page,\n  currentPostId: postId,\n  isFetching: isFetching.COMMENTS,\n  error: errors.COMMENTS\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchComments: (postId: string, page: number = 1, limit: number = 5) =>\n    dispatch(fetchApi({ name: 'COMMENTS', data: { postId, page, limit } })),\n  clearComments: () => dispatch(clearComments())\n});\n\nconst CommentsContainer = connect(mapStateToProps, mapDispatchToProps)(\n  CommentsContainerPlain\n);\nexport default CommentsContainer;\n","import React from 'react';\nimport { IProps } from '../icon.interfaces';\nimport Icon from '../icon.component';\n\nexport default function ArrowIcon (props: IProps){\n  return (\n    <Icon viewBox='0 0 492 492' {...props}>\n      <path\n        d={`M464.344,207.418l0.768,0.168H135.888l103.496-103.724c5.068-5.064,7.848-11.924,7.848-19.124\n\t\t\tc0-7.2-2.78-14.012-7.848-19.088L223.28,49.538c-5.064-5.064-11.812-7.864-19.008-7.864c-7.2,0-13.952,2.78-19.016,7.844\n\t\t\tL7.844,226.914C2.76,231.998-0.02,238.77,0,245.974c-0.02,7.244,2.76,14.02,7.844,19.096l177.412,177.412\n\t\t\tc5.064,5.06,11.812,7.844,19.016,7.844c7.196,0,13.944-2.788,19.008-7.844l16.104-16.112c5.068-5.056,7.848-11.808,7.848-19.008\n\t\t\tc0-7.196-2.78-13.592-7.848-18.652L134.72,284.406h329.992c14.828,0,27.288-12.78,27.288-27.6v-22.788\n\t\t\tC492,219.198,479.172,207.418,464.344,207.418z`}\n        fill='currentColor'\n      />\n    </Icon>\n  );\n}\n","import React, { useState, ChangeEvent } from 'react';\nimport './comment-textarea.styles.scss';\nimport Button from '../button/button.component';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { Dispatch } from 'redux';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { connect } from 'react-redux';\n\ninterface IProps {\n  postId: string;\n  placeholder?: string;\n  buttonText?: string;\n  isFetching?: boolean;\n  error?: string;\n  addNewComment: (postId: string, content: string) => void;\n}\n\nfunction CommentTextAreaPlain ({\n  placeholder,\n  buttonText,\n  postId,\n  isFetching,\n  error,\n  addNewComment\n}: IProps){\n  const [ comment, setComment ] = useState('');\n  const [ localError, setLocalError ] = useState('');\n  const handleChange = ({\n    target: { value }\n  }: ChangeEvent<HTMLTextAreaElement>) => {\n    setComment(value);\n  };\n\n  return (\n    <div className=\"comment-textarea\">\n      <textarea\n        value={comment}\n        onChange={handleChange}\n        placeholder={placeholder || 'add a comment...'}\n        rows={3}\n      />\n      <div className=\"comment-textarea__action\">\n        <Button\n          disabled={isFetching}\n          onClick={() => {\n            if (!comment) {\n              setLocalError(\"Comment can't be empty\");\n              return;\n            }\n            if (!isFetching) {\n              addNewComment(postId, comment);\n              setLocalError('');\n              setComment('');\n            }\n          }}>\n          {buttonText || 'Comment'}\n        </Button>\n        <span className=\"comment-textarea__action__error\">\n          {localError || error}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  fetchController: { errors, isFetching }\n}: GlobalState) => ({\n  isFetching: isFetching.ADD_NEW_COMMENT,\n  error: errors.ADD_NEW_COMMENT\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addNewComment: (postId: string, content: string) =>\n    dispatch(fetchApi({ name: 'ADD_NEW_COMMENT', data: { postId, content } }))\n});\n\nconst CommentTextarea = connect(mapStateToProps, mapDispatchToProps)(\n  CommentTextAreaPlain\n);\nexport default CommentTextarea;\n","import React from 'react';\nimport { PostDetail } from '../../@types/post.interfaces';\nimport LikeDislike from '../like-dislike/like-dislike.component';\nimport BookmarkIcon from '../icons/bookmark/bookmark.component';\nimport BookmarkAddIcon from '../icons/bookmark-add/bookmark-add.component';\nimport CommentIcon from '../icons/comment/comment.component';\nimport getAddToSavedListener from '../../utils/get-add-to-saved-listener';\nimport './post-details.styles.scss';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport CommentsContainer from '../comments-container/comments-container.component';\nimport UserInfo from '../user-info/user-info.component';\nimport ArrowIcon from '../icons/arrow/arrow.component';\nimport { useHistory } from 'react-router-dom';\nimport CommentTextArea from '../comment-textarea/comment-textarea.component';\nimport Timestamp from '../timestamp/timestamp.component';\nimport { IChangeSavedPayload } from '../../redux/global-post-actions/global-post-actions';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport FollowButton from '../follow-button/follow-button.component';\n\ninterface IProps {\n  post: PostDetail;\n  updateSaved: (payload: IChangeSavedPayload['data']) => void;\n}\n\nfunction PostDetailsPlain ({ post, updateSaved }: IProps){\n  const handleBookmarkAddClick = getAddToSavedListener(post, updateSaved);\n  const history = useHistory();\n\n  const {\n    title,\n    link,\n    commentsCount,\n    id,\n    saved,\n    disliked,\n    liked,\n    description,\n    dislikeCount,\n    likeCount,\n    owner,\n    timestamp\n  } = post;\n\n  return (\n    <div className=\"details\">\n      <ArrowIcon className=\"back-icon\" onClick={() => history.goBack()} />\n      <div className=\"flex-column details__info\">\n        <div className=\"flex-column\">\n          <h1>{title}</h1>\n          <div className=\"flex-row-space-between\">\n            {link ? (\n              <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n                visit website\n              </a>\n            ) : (\n              <span className=\"no-link-info\">No link available</span>\n            )}\n            <Timestamp timestamp={timestamp} className=\"details__timestamp\" />\n          </div>\n        </div>\n        <div className=\"flex-row-space-between\">\n          <LikeDislike\n            size={1.4}\n            likeCount={likeCount}\n            dislikeCount={dislikeCount}\n            liked={liked}\n            disliked={disliked}\n            id={id}\n          />\n          {saved ? (\n            <BookmarkIcon\n              onClick={handleBookmarkAddClick}\n              color=\"#00a3ff\"\n              size={1.2}\n            />\n          ) : (\n            <BookmarkAddIcon onClick={handleBookmarkAddClick} size={1.4} />\n          )}\n        </div>\n      </div>\n\n      <div className=\"flex-column\">\n        <span className=\"details__title\">Description</span>\n        <p className=\"details__description\">{description}</p>\n      </div>\n\n      <div className=\"details__owner flex-column\">\n        <span className=\"details__title\">Posted by</span>\n        <div className=\"details__owner__container\">\n          <UserInfo user={owner} />\n          <FollowButton owner={owner} />\n        </div>\n      </div>\n\n      <div className=\"comments\">\n        <div className=\"flex-row comments__comments-count\">\n          <CommentIcon size={1.4} />\n          <span>{commentsCount} comments</span>\n        </div>\n        <CommentTextArea postId={id} />\n        <CommentsContainer postId={id} />\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  updateSaved: (payload: IChangeSavedPayload['data']) =>\n    dispatch(fetchApi({ name: 'CHANGE_SAVED', data: payload }))\n});\n\nconst PostDetails = connect(null, mapDispatchToProps)(PostDetailsPlain);\nexport default PostDetails;\n","import { useEffect } from 'react';\nimport {\n  IFetchApiNames,\n  fetchApiSuccess\n} from './../redux/fetch/fetch.actions';\nimport { useDispatch } from 'react-redux';\n\nexport default function useFetchCleanup (key: IFetchApiNames){\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      return () => {\n        dispatch(fetchApiSuccess(key));\n      };\n    },\n    [ key, dispatch ]\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport './detail-page.styles.scss';\nimport { match } from 'react-router-dom';\nimport { PostDetail } from '../../@types/post.interfaces';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport LoadingError from '../../components/loading-error/loading-error.component';\nimport ImageCarousel from '../../components/image-carousel/image-carousel.component';\nimport PostDetails from '../../components/post-details/post-details.component';\nimport useFetchCleanup from '../../effects/useFetchCleanup.effect';\n\ninterface IProps {\n  post: PostDetail | null;\n  match: match<{ id: string }>;\n  isFetching?: boolean;\n  error?: string;\n  fetchPostDetail: (id: string) => void;\n}\n\nfunction DetailPagePlain ({\n  post,\n  fetchPostDetail,\n  match,\n  isFetching,\n  error\n}: IProps){\n  useFetchCleanup('POST_DETAIL');\n  const [ slideIndex, setSlideIndex ] = useState(0);\n\n  useEffect(\n    () => {\n      const { id } = match.params;\n      if (isFetching || error || (post && post.id === id)) return;\n\n      fetchPostDetail(id);\n    },\n    [ fetchPostDetail, match, isFetching, error, post ]\n  );\n\n  return (\n    <div className=\"detail-page\">\n      <LoadingError isLoading={isFetching} error={error}>\n        {post ? (\n          <div className=\"post-detail-container\">\n            <div className=\"images-container scrollbar\">\n              <ImageCarousel\n                images={post.images}\n                slideIndex={slideIndex}\n                setSlideIndex={setSlideIndex}\n              />\n            </div>\n            <PostDetails post={post} />\n          </div>\n        ) : null}\n      </LoadingError>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  postDetail: { postDetail },\n  fetchController: { errors, isFetching }\n}: GlobalState) => ({\n  post: postDetail,\n  isFetching: isFetching.POST_DETAIL,\n  error: errors.POST_DETAIL\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchPostDetail: (id: string) =>\n    dispatch(fetchApi({ name: 'POST_DETAIL', data: { id } }))\n});\n\nconst DetailPage = connect(mapStateToProps, mapDispatchToProps)(\n  DetailPagePlain\n);\n\nexport default DetailPage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from '../../redux/root-reducer';\nimport PostPreviewContainer from '../../components/post-preview-container/post-preview-container.component';\nimport { Post } from '../../@types/post.interfaces';\nimport './saved-page.styles.scss';\nimport { Dispatch } from 'redux';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\n\ninterface IProps {\n  savedPosts: Post[];\n  isFetching?: boolean;\n  page: number;\n  error?: string;\n  fetchSavedPosts: (page: number) => void;\n}\n\nfunction SavedPagePlain ({\n  savedPosts,\n  isFetching,\n  fetchSavedPosts,\n  error,\n  page\n}: IProps){\n  useEffect(\n    () => {\n      if (isFetching || error) return;\n      fetchSavedPosts(1);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return (\n    <div className=\"saved-page\">\n      <h2 className=\"heading\">Saved posts</h2>\n      <PostPreviewContainer\n        isFetching={isFetching}\n        posts={savedPosts}\n        noDataMessage={`You haven't bookmarked any ui design`}\n        fetchItem={() => fetchSavedPosts(page + 1)}\n        error={error}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  savedPosts: { savedPosts },\n  fetchController: { isFetching, errors }\n}: GlobalState) => ({\n  savedPosts: savedPosts.posts,\n  page: savedPosts.page,\n  isFetching: isFetching.SAVED_POSTS,\n  error: errors.SAVED_POSTS\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchSavedPosts: (page: number) =>\n    dispatch(fetchApi({ name: 'SAVED_POSTS', data: { page } }))\n});\n\nconst SavedPage = connect(mapStateToProps, mapDispatchToProps)(SavedPagePlain);\nexport default SavedPage;\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function ErrorIcon (props: IProps){\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M11.953 2C6.465 2 2 6.486 2 12s4.486 10 10 10s10-4.486 10-10S17.493 2 11.953 2zM12 20c-4.411 0-8-3.589-8-8s3.567-8 7.953-8C16.391 4 20 7.589 20 12s-3.589 8-8 8z\"\n        fill=\"currentColor\"\n      />\n      <path d=\"M11 7h2v7h-2zm0 8h2v2h-2z\" fill=\"currentColor\" />\n    </Icon>\n  );\n}\n","import React, { ReactElement, ChangeEvent } from 'react';\nimport './center-input.styles.scss';\nimport ErrorIcon from '../icons/error/error.component';\n\ninterface Props {\n  name: string;\n  label: string;\n  value: string;\n  className?: string;\n  error?: string;\n  useTextarea?: boolean;\n  onChange: (e: ChangeEvent<any>) => void;\n}\n\nexport default function CenterInput ({\n  name,\n  value,\n  label,\n  className,\n  error,\n  onChange,\n  useTextarea\n}: Props): ReactElement{\n  return (\n    <div\n      className={`center-input${useTextarea ? '--textarea' : ''}  ${className ||\n        ''}`}>\n      {!useTextarea ? (\n        <input\n          className={value ? 'filled' : ''}\n          type=\"text\"\n          name={name}\n          value={value}\n          id={name}\n          onChange={onChange}\n        />\n      ) : (\n        <textarea\n          className={value ? 'filled' : ''}\n          value={value}\n          name={name}\n          id={name}\n          onChange={onChange}\n        />\n      )}\n      <label htmlFor={name}>{label}</label>\n      <div className=\"center-input__rect\">{label}</div>\n\n      <ErrorIcon\n        className={`center-input__err-icon${error ? '' : '--hide'} ${useTextarea\n          ? 'textarea'\n          : ''}`}\n        size={1.3}\n      />\n      <div className={`center-input__error`}>{error}</div>\n    </div>\n  );\n}\n","import { useState, ChangeEvent } from 'react';\n\nexport default function useForm<\n  T extends {\n    [key: string]: {\n      validation?: (value: any) => string;\n      value: any;\n      error?: string;\n      sameAs?: string;\n      link?: string;\n    };\n  }\n> (\n  initialState: T,\n  successSubmit: () => void\n): [\n  T,\n  (e: ChangeEvent<HTMLInputElement>) => void,\n  (e: any) => void,\n  string,\n  React.Dispatch<React.SetStateAction<T>>\n]{\n  const [ data, setData ] = useState(initialState);\n  const [ submitErrors, setErrors ] = useState<string[]>([]);\n\n  function validate (name: string, value: any, newLinkData?: string){\n    let error = '';\n    const sameAsAttr = data[name].sameAs;\n    if (sameAsAttr) {\n      if (data[sameAsAttr]) {\n        let isSame = data[sameAsAttr].value === value;\n        if (newLinkData) {\n          isSame = newLinkData === value;\n        }\n        error = isSame\n          ? ''\n          : `${sameAsAttr.charAt(0).toUpperCase() +\n              sameAsAttr.substr(1)} confirmation does not match!`;\n      }\n    } else {\n      const validation = data[name].validation;\n      error = validation ? validation(value) : '';\n    }\n\n    return error;\n  }\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    const error = validate(name, value);\n\n    const link = data[name].link;\n    let linkError = '';\n    if (link && data[link]) {\n      linkError = validate(link, data[link].value, value);\n\n      setData({\n        ...data,\n        [name]: {\n          ...data[name],\n          value: value,\n          error\n        },\n        [link]: {\n          ...data[link],\n          error: linkError\n        }\n      });\n    } else {\n      setData({\n        ...data,\n        [name]: {\n          ...data[name],\n          value: value,\n          error\n        }\n      });\n    }\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    let errors = Object.entries(data).reduce<\n      string[]\n    >((acc, [ key, element ]) => {\n      if (!element.validation) return acc;\n      const error = validate(key, element.value);\n      if (error) acc.push(error);\n      return acc;\n    }, []);\n\n    setErrors(errors);\n\n    if (errors.length !== 0) return;\n\n    successSubmit();\n  };\n\n  return [ data, handleChange, handleSubmit, submitErrors[0], setData ];\n}\n","export function validateEmail (email: string){\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase()) ? '' : 'Invalid email';\n}\n\nexport function validateUsername (username: string){\n  return username.length >= 6 ? '' : 'Username minimum 6 characters';\n}\n\nexport function validatePassword (pass: string){\n  return pass.length <= 5 ? 'Password must be more than 5 characters' : '';\n}\n\nexport function isEmpty (text: string, value: string){\n  return value !== undefined\n    ? value.length > 0 ? '' : `${text} must be filled`\n    : '';\n}\n\nexport function validateUrlOrEmpty (url: string){\n  if (url === '') return '';\n  return validateUrl(url);\n}\n\nexport function validateUrl (url: string){\n  return /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/.test(\n    url\n  )\n    ? ''\n    : 'Invalid url';\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function UpdateIcon (props: IProps){\n  return (\n    <Icon viewBox=\"0 0 20 20\" {...props}>\n      <path\n        d=\"M5.7 9c.4-2 2.2-3.5 4.3-3.5c1.5 0 2.7.7 3.5 1.8l1.7-2C14 3.9 12.1 3 10 3C6.5 3 3.6 5.6 3.1 9H1l3.5 4L8 9H5.7zm9.8-2L12 11h2.3c-.5 2-2.2 3.5-4.3 3.5c-1.5 0-2.7-.7-3.5-1.8l-1.7 1.9C6 16.1 7.9 17 10 17c3.5 0 6.4-2.6 6.9-6H19l-3.5-4z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n}\n","import React, {\n  ReactElement,\n  useState,\n  ChangeEvent,\n  useEffect,\n  useRef\n} from 'react';\nimport { User } from '../../@types/user.interfaces';\nimport ProfilePlaceholder from './../../assets/images/profile-icon.png';\nimport Button from '../button/button.component';\nimport './update-profile-modal.styles.scss';\nimport CenterInput from '../center-input/center-input.component';\nimport useForm from '../../effects/useForm.effect';\nimport { isEmpty } from '../../utils/validations';\nimport CrossIcon from '../icons/cross/cross.compnent';\nimport UpdateIcon from '../icons/update/update.component';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { IUpdateUserPayload } from '../../redux/user/user.actions';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { GlobalState } from '../../redux/root-reducer';\nimport Loading from '../loading/loading.component';\n\ninterface Props {\n  user: User;\n  isOpen: boolean;\n  isFetching?: boolean;\n  error?: string;\n  closeModal: () => void;\n  updateUser: (data: IUpdateUserPayload['data']) => void;\n}\n\nfunction UpdateProfileModalPlain ({\n  user,\n  isOpen,\n  closeModal,\n  updateUser,\n  isFetching,\n  error\n}: Props): ReactElement{\n  const haveUpdated = useRef(false);\n  const [ image, setImage ] = useState<{\n    value: string | undefined;\n    error: string;\n    file?: File;\n  }>({\n    value: user.profilePic,\n    error: ''\n  });\n\n  useEffect(\n    () => {\n      if (haveUpdated.current && !isFetching && !error) {\n        closeModal();\n        haveUpdated.current = false;\n      }\n    },\n    [ error, isFetching, closeModal ]\n  );\n\n  const [ enableUpdate, setEnableUpdate ] = useState(false);\n\n  const [ data, handleChange, handleSubmit, submitErrors, setData ] = useForm(\n    {\n      username: {\n        value: user.username,\n        error: '',\n        validation: (value: string) => isEmpty('Username', value)\n      },\n      fullname: {\n        value: user.fullname\n      },\n      status: {\n        value: user.status\n      }\n    },\n    () => {\n      if (!enableUpdate) return;\n      const obj: IUpdateUserPayload['data'] = {};\n      if (image.value !== user.profilePic) obj.profilePic = image.file;\n      if (data.status.value !== user.status) obj.status = status.value;\n      if (data.username.value !== user.username) obj.username = username.value;\n      if (data.fullname.value !== user.fullname) obj.fullname = fullname.value;\n\n      updateUser(obj);\n      haveUpdated.current = true;\n    }\n  );\n\n  useEffect(\n    () => {\n      setImage({\n        value: user.profilePic,\n        error: ''\n      });\n      setData((prev) => ({\n        ...prev,\n        username: {\n          ...prev.username,\n          value: user.username,\n          error: ''\n        },\n        fullname: {\n          ...prev.fullname,\n          value: user.fullname\n        },\n        status: {\n          ...prev.status,\n          value: user.status\n        }\n      }));\n    },\n    [ user, setData, isOpen ]\n  );\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files![0];\n\n    if (!file.type.includes('image')) {\n      setImage((prev) => ({ ...prev, error: 'Invalid image type' }));\n      return;\n    }\n    const tempUrl = URL.createObjectURL(file);\n\n    setImage({\n      value: tempUrl,\n      error: '',\n      file\n    });\n  };\n\n  useEffect(\n    () => {\n      if (\n        image.value !== user.profilePic ||\n        data.fullname.value !== user.fullname ||\n        data.username.value !== user.username ||\n        data.status.value !== user.status\n      ) {\n        setEnableUpdate(true);\n      } else {\n        setEnableUpdate(false);\n      }\n    },\n    [ data, image, user ]\n  );\n\n  const { username, fullname, status } = data;\n\n  return (\n    <div className={`update-profile-modal-overlay${!isOpen ? '--hide' : ''}`}>\n      <form className=\"update-profile-modal\" onSubmit={handleSubmit}>\n        <div\n          className={`update-profile-modal__loading${isFetching\n            ? ''\n            : '--hide'}`}>\n          <Loading />\n        </div>\n        <CrossIcon\n          className=\"update-profile-modal__close\"\n          size={3}\n          onClick={closeModal}\n        />\n        <div className=\"update-profile-modal__image\">\n          <img src={image.value || ProfilePlaceholder} alt=\"profile pic\" />\n          <input\n            id=\"file-profile-pic\"\n            type=\"file\"\n            name=\"profilePic\"\n            onChange={handleFileChange}\n          />\n          <label htmlFor=\"file-profile-pic\">\n            <UpdateIcon size={2.5} />\n          </label>\n        </div>\n\n        <div className=\"update-profile-modal__content\">\n          <CenterInput\n            value={username.value}\n            error={username.error}\n            onChange={handleChange}\n            label=\"Username\"\n            name=\"username\"\n          />\n          <CenterInput\n            value={fullname.value}\n            onChange={handleChange}\n            label=\"Fullname\"\n            name=\"fullname\"\n          />\n          <CenterInput\n            value={status.value}\n            onChange={handleChange}\n            label=\"Status\"\n            name=\"status\"\n            useTextarea\n          />\n          <span className=\"update-profile-modal__content__error\">\n            {error || submitErrors}\n          </span>\n          <Button type=\"submit\" disabled={!enableUpdate}>\n            Update Profile\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  fetchController: { isFetching, errors }\n}: GlobalState) => ({\n  isFetching: isFetching.UPDATE_USER,\n  error: errors.UPDATE_USER\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  updateUser: (user: IUpdateUserPayload['data']) =>\n    dispatch(fetchApi({ name: 'UPDATE_USER', data: user }))\n});\n\nconst UpdateProfileModal = connect(mapStateToProps, mapDispatchToProps)(\n  UpdateProfileModalPlain\n);\nexport default UpdateProfileModal;\n","import { Post } from './../../@types/post.interfaces';\nimport { action, payload } from 'ts-action';\nimport { User } from '../../@types/user.interfaces';\nimport {\n  changeLikesOrDislikes,\n  changeSaved\n} from '../global-post-actions/global-post-actions';\n\nexport interface ICheckUserPayload {\n  name: 'CHECK_USER';\n}\n\nexport interface IFetchUserPayload {\n  name: 'USER';\n  data: {\n    id: string;\n  };\n}\n\nexport interface ILoginPayload {\n  name: 'LOGIN';\n  data: {\n    email: string;\n    password: string;\n  };\n}\n\nexport interface IRegisterPayload {\n  name: 'REGISTER';\n  data: {\n    email: string;\n    password: string;\n    username: string;\n    fullname: string;\n  };\n}\n\nexport interface IFetchUserPostsPayload {\n  name: 'FETCH_USER_POSTS';\n  data: {\n    page: number;\n    id: string;\n    self?: boolean;\n  };\n}\n\nexport interface IFollowUserPayload {\n  name: 'FOLLOW_USER';\n  data: {\n    id: string;\n  };\n}\nexport interface IUnfollowUserPayload {\n  name: 'UNFOLLOW_USER';\n  data: {\n    id: string;\n  };\n}\n\nexport interface IUpdateUserPayload {\n  name: 'UPDATE_USER';\n  data: {\n    profilePic?: File;\n    username?: string;\n    fullname?: string;\n    status?: string;\n  };\n}\n\nexport const LOAD_USER = 'LOAD_USER';\nexport const LOAD_SELF = 'LOAD_SELF';\nexport const LOGIN = 'LOGIN';\nexport const CHECK_USER = 'CHECK_USER';\nexport const LOAD_USER_POSTS = 'LOAD_USER_POSTS';\nexport const FOLLOW_USER = 'FOLLOW_USER';\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\nexport const USER_CHECKED = 'USER_CHECKED';\nexport const LOGOUT = 'LOGOUT';\n\nexport const loadUser = action(LOAD_USER, payload<User>());\nexport const loadSelf = action(LOAD_SELF, payload<User>());\nexport const login = action(LOGIN, payload<{ user: User; token: string }>());\nexport const loadUserPosts = action(\n  LOAD_USER_POSTS,\n  payload<{ page: number; self?: boolean; posts: Post[] }>()\n);\nexport const followUser = action(FOLLOW_USER, payload<string>());\nexport const unfollowUser = action(UNFOLLOW_USER, payload<string>());\nexport const userChecked = action(USER_CHECKED);\nexport const logout = action(LOGOUT);\n\nexport type UserActionType =\n  | ReturnType<typeof loadUser>\n  | ReturnType<typeof loadSelf>\n  | ReturnType<typeof login>\n  | ReturnType<typeof loadUserPosts>\n  | ReturnType<typeof followUser>\n  | ReturnType<typeof unfollowUser>\n  | ReturnType<typeof userChecked>\n  | ReturnType<typeof logout>\n  | ReturnType<typeof changeLikesOrDislikes>\n  | ReturnType<typeof changeSaved>;\n","import React, { useState, Fragment } from 'react';\nimport { User } from '../../@types/user.interfaces';\nimport ProfilePlaceholder from './../../assets/images/profile-icon.png';\nimport './user-profile.styles.scss';\nimport Button from '../button/button.component';\nimport { Dispatch } from 'redux';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { connect } from 'react-redux';\nimport UpdateProfileModal from '../update-profile-modal/update-profile-modal.component';\nimport { logout } from '../../redux/user/user.actions';\n\ninterface IProps {\n  user: User;\n  page: number;\n  unfollow: (id: string) => void;\n  follow: (id: string) => void;\n  isSelf: boolean;\n  logout: () => void;\n}\n\nfunction UserProfilePlain ({ user, unfollow, follow, isSelf, logout }: IProps){\n  const [ openModal, setOpenModal ] = useState(false);\n  const {\n    id,\n    followersCount,\n    followingCount,\n    fullname,\n    username,\n    profilePic,\n    status,\n    followed\n  } = user;\n\n  const handleUnfollowClick = () => unfollow(id);\n  const handleFollowClick = () => follow(id);\n\n  return (\n    <div className=\"user-profile\">\n      <UpdateProfileModal\n        user={user}\n        isOpen={openModal}\n        closeModal={() => setOpenModal(false)}\n      />\n      <img src={profilePic || ProfilePlaceholder} alt=\"profile pic\" />\n      <div>\n        <span className=\"user-profile__username\">{username}</span>\n        <span className=\"user-profile__fullname\">{fullname}</span>\n        <p className=\"user-profile__status\">{status}</p>\n        <div className=\"user-profile__follow\">\n          <span className=\"user-profile__follow__content\">{`${followingCount} Following`}</span>\n          <span>&#xb7;</span>\n          <span className=\"user-profile__follow__content\">{`${followersCount} Followers`}</span>\n        </div>\n        {isSelf ? (\n          <Fragment>\n            <Button onClick={() => setOpenModal(true)}>Update Profile</Button>\n\n            <div className=\"user-profile__update-info\">\n              {status ? null : <span>Add status to your profile!</span>}\n              {fullname ? null : <span>Tell us your full name!</span>}\n            </div>\n          </Fragment>\n        ) : (\n          <Button\n            alt={followed}\n            onClick={followed ? handleUnfollowClick : handleFollowClick}>\n            {followed ? 'Unfollow' : 'Follow'}\n          </Button>\n        )}\n        {isSelf ? (\n          <Button className=\"user-profile__logout\" red onClick={logout}>\n            Logout\n          </Button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  unfollow: (id: string) =>\n    dispatch(fetchApi({ name: 'UNFOLLOW_USER', data: { id } })),\n  follow: (id: string) =>\n    dispatch(fetchApi({ name: 'FOLLOW_USER', data: { id } })),\n  logout: () => dispatch(logout())\n});\n\nconst UserProfile = connect(null, mapDispatchToProps)(UserProfilePlain);\nexport default UserProfile;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { User } from '../../@types/user.interfaces';\nimport { Post } from '../../@types/post.interfaces';\nimport PostPreviewContainer from '../post-preview-container/post-preview-container.component';\nimport { Dispatch } from 'redux';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { useRouteMatch } from 'react-router-dom';\n\ninterface IProps {\n  isFetching?: boolean;\n  error?: string;\n  user: { data: User | null; posts: { page: number; data: Post[] } };\n  fetchUserPosts: (id: string, page: number, self?: boolean) => void;\n}\n\nfunction UserPostsPlain ({ user, isFetching, error, fetchUserPosts }: IProps){\n  const match = useRouteMatch<{ id: string }>();\n\n  return (\n    <PostPreviewContainer\n      posts={user.posts.data}\n      noDataMessage=\"Share your first post!\"\n      fetchItem={() =>\n        fetchUserPosts(\n          user.data!.id,\n          user.posts.page + 1,\n          match.params.id === 'self'\n        )}\n      isFetching={isFetching}\n      error={error}\n      noFollowButton\n    />\n  );\n}\n\nconst mapStateToProps = ({\n  fetchController: { isFetching, errors }\n}: GlobalState) => ({\n  isFetching: isFetching.FETCH_USER_POSTS,\n  errors: isFetching.FETCH_USER_POSTS\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchUserPosts: (id: string, page: number, self?: boolean) =>\n    dispatch(fetchApi({ name: 'FETCH_USER_POSTS', data: { id, page, self } }))\n});\n\nconst UserPosts = connect(mapStateToProps, mapDispatchToProps)(UserPostsPlain);\nexport default UserPosts;\n","import React from 'react';\nimport { User } from '../../@types/user.interfaces';\nimport UserInfo from '../user-info/user-info.component';\nimport './user-follow.styles.scss';\nimport Button from '../button/button.component';\nimport LoadingError from '../loading-error/loading-error.component';\nimport ErrorMessage from '../error-message/error-message.component';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\n\ninterface IProps {\n  self: User | null;\n  listUser: User[];\n  noDataMessage: string;\n  isFetching?: boolean;\n  error?: Error;\n}\n\nfunction UserFollowPlain ({\n  listUser,\n  isFetching,\n  error,\n  self,\n  noDataMessage\n}: IProps){\n  return (\n    <div className=\"user-follow\">\n      {\n        <LoadingError\n          error={error ? error.message : undefined}\n          isLoading={isFetching}>\n          {listUser ? listUser.length === 0 ? (\n            <ErrorMessage message={noDataMessage} size={2} />\n          ) : (\n            <ul>\n              {listUser.map((user) => (\n                <li key={user.id}>\n                  <UserInfo user={user} />\n                  {user.followed ||\n                  !self ||\n                  (self && self.id === user.id) ? null : (\n                    <Button>Follow Back</Button>\n                  )}\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </LoadingError>\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ user: { self: { data } } }: GlobalState) => ({\n  self: data\n});\n\nconst UserFollow = connect(mapStateToProps)(UserFollowPlain);\nexport default UserFollow;\n","import { addNewReply } from './../comments/comments.actions';\nimport { action, payload } from 'ts-action';\nimport { Post } from './../../@types/post.interfaces';\nimport { addNewComment } from '../comments/comments.actions';\n\nexport interface IChangeSavedPayload {\n  name: 'CHANGE_SAVED';\n  data: {\n    post: Post;\n    saved: boolean;\n  };\n}\nexport interface IChangeLikesOrDislikesPayload {\n  name: 'CHANGE_LIKES_OR_DISLIKES';\n  data: {\n    id: string;\n    like?: boolean;\n    dislike?: boolean;\n  };\n}\n\nexport const CHANGE_SAVED = 'CHANGE_SAVED';\nexport const CHANGE_LIKES_OR_DISLIKES = 'CHANGE_LIKES_OR_DISLIKES';\n\nexport const changeSaved = action(\n  CHANGE_SAVED,\n  payload<IChangeSavedPayload['data']>()\n);\nexport const changeLikesOrDislikes = action(\n  CHANGE_LIKES_OR_DISLIKES,\n  payload<IChangeLikesOrDislikesPayload['data']>()\n);\n\nexport type GlobalPostActionType =\n  | ReturnType<typeof changeSaved>\n  | ReturnType<typeof changeLikesOrDislikes>\n  | ReturnType<typeof addNewComment>\n  | ReturnType<typeof addNewReply>;\n","import {\n  IChangeLikesOrDislikesPayload,\n  IChangeSavedPayload\n} from './global-post-actions';\nimport { Post } from './../../@types/post.interfaces';\n\nexport function changePostLikesOrDislikes<T extends Post> (\n  post: T,\n  payload: IChangeLikesOrDislikesPayload['data']\n){\n  const { id, like, dislike } = payload;\n  if (post.id !== id) return { ...post };\n\n  post.likeCount -= +!!post.liked;\n  post.dislikeCount -= +!!post.disliked;\n  post.liked = undefined;\n  post.disliked = undefined;\n\n  post.liked = !!like;\n  post.disliked = !!dislike;\n\n  post.likeCount += +!!like;\n  post.dislikeCount += +!!dislike;\n\n  return { ...post };\n}\n\nexport function changePostSaved (\n  post: Post,\n  payload: IChangeSavedPayload['data']\n){\n  if (post.id === payload.post.id) {\n    post.saved = payload.saved;\n  }\n  return { ...post };\n}\n","import { Post } from './../../@types/post.interfaces';\nimport { CHANGE_LIKES_OR_DISLIKES } from './../global-post-actions/global-post-actions';\nimport {\n  PostActionType,\n  LOAD_FEEDS_POSTS,\n  LOAD_EXPLORE_POSTS,\n  CLEAR_EXPLORE_POSTS\n} from './post.actions';\nimport {\n  GlobalPostActionType,\n  CHANGE_SAVED\n} from '../global-post-actions/global-post-actions';\nimport {\n  changePostLikesOrDislikes,\n  changePostSaved\n} from '../global-post-actions/global-post-reducer-helper';\nimport { FOLLOW_USER, UNFOLLOW_USER } from '../user/user.actions';\nimport { ADD_NEW_COMMENT, ADD_NEW_REPLY } from '../comments/comments.actions';\n\ninterface IState {\n  explore: { posts: Post[]; page: number; sort?: string };\n  feeds: { posts: Post[]; page: number };\n}\n\nconst INITIAL_STATE: IState = {\n  explore: { posts: [], page: 0 },\n  feeds: { posts: [], page: 0 }\n};\n\nexport default function postReducer (\n  state: IState = INITIAL_STATE,\n  action: PostActionType | GlobalPostActionType\n): IState{\n  function updateExploreAndFeeds (operationCb: (item: Post) => Post): IState{\n    return {\n      ...state,\n      explore: {\n        ...state.explore,\n        posts: state.explore.posts.map((post) => {\n          let newPost = { ...post };\n          return operationCb(newPost);\n        })\n      },\n      feeds: {\n        ...state.feeds,\n        posts: state.feeds.posts.map((post) => {\n          let newPost = { ...post };\n          return operationCb(newPost);\n        })\n      }\n    };\n  }\n\n  switch (action.type) {\n    case LOAD_FEEDS_POSTS:\n      const newFeeds = action.payload;\n      if (action.payload.page > 1)\n        newFeeds.posts = [ ...state.feeds.posts, ...newFeeds.posts ];\n\n      return {\n        ...state,\n        feeds: newFeeds\n      };\n    case LOAD_EXPLORE_POSTS:\n      const newExplore = action.payload;\n      if (action.payload.page > 1)\n        newExplore.posts = [ ...state.explore.posts, ...newExplore.posts ];\n\n      return {\n        ...state,\n        explore: newExplore\n      };\n    case CHANGE_SAVED:\n      return updateExploreAndFeeds((item) =>\n        changePostSaved(item, action.payload)\n      );\n    case CHANGE_LIKES_OR_DISLIKES:\n      return updateExploreAndFeeds((item) => {\n        const { like, dislike } = action.payload;\n        return changePostLikesOrDislikes(item, {\n          like,\n          dislike,\n          id: action.payload.id\n        });\n      });\n    case FOLLOW_USER:\n      return updateExploreAndFeeds((item) => {\n        if (item.owner.id === action.payload) {\n          item.owner.followed = true;\n        }\n        return item;\n      });\n    case UNFOLLOW_USER:\n      return updateExploreAndFeeds((item) => {\n        if (item.owner.id === action.payload) {\n          item.owner.followed = false;\n        }\n        return item;\n      });\n    case CLEAR_EXPLORE_POSTS:\n      return {\n        ...state,\n        explore: {\n          posts: [],\n          page: 0\n        }\n      };\n\n    case ADD_NEW_REPLY:\n    case ADD_NEW_COMMENT:\n      return updateExploreAndFeeds((item) => {\n        if (item.id === action.payload.id) item.commentsCount += 1;\n        return item;\n      });\n\n    default:\n      return state;\n  }\n}\n","import { action, payload } from 'ts-action';\nimport { Post } from '../../@types/post.interfaces';\n\nexport interface IFetchSavedPostsPayload {\n  name: 'SAVED_POSTS';\n  data: {\n    page: number;\n  };\n}\n\nexport const LOAD_SAVED_POSTS = 'LOAD_SAVED_POSTS';\n\nexport const loadSavedPosts = action(\n  LOAD_SAVED_POSTS,\n  payload<{ posts: Post[]; page: number }>()\n);\n\nexport type SavedPostsActionType = ReturnType<typeof loadSavedPosts>;\n","import { Post } from './../../@types/post.interfaces';\nimport { SavedPostsActionType, LOAD_SAVED_POSTS } from './saved-posts.actions';\nimport {\n  GlobalPostActionType,\n  CHANGE_SAVED,\n  CHANGE_LIKES_OR_DISLIKES\n} from '../global-post-actions/global-post-actions';\nimport { changePostLikesOrDislikes } from '../global-post-actions/global-post-reducer-helper';\nimport { ADD_NEW_COMMENT, ADD_NEW_REPLY } from '../comments/comments.actions';\n\ninterface IState {\n  savedPosts: {\n    posts: Post[];\n    page: number;\n  };\n}\n\nconst INITIAL_STATE: IState = {\n  savedPosts: { posts: [], page: 0 }\n};\n\nexport default function savedPostsReducer (\n  state: IState = INITIAL_STATE,\n  action: SavedPostsActionType | GlobalPostActionType\n): IState{\n  switch (action.type) {\n    case LOAD_SAVED_POSTS:\n      let newSaved = action.payload;\n      if (action.payload.page > 1) {\n        newSaved.posts = [ ...state.savedPosts.posts, ...newSaved.posts ];\n      }\n      return {\n        ...state,\n        savedPosts: newSaved\n      };\n    case CHANGE_SAVED:\n      const { saved, post } = action.payload;\n      let newSavedPosts = [ ...state.savedPosts.posts ];\n      if (saved) {\n        newSavedPosts.push(post);\n      } else {\n        newSavedPosts = newSavedPosts.filter((el) => el.id !== post.id);\n      }\n      return {\n        ...state,\n        savedPosts: { ...state.savedPosts, posts: newSavedPosts }\n      };\n    case CHANGE_LIKES_OR_DISLIKES:\n      const newPosts = state.savedPosts.posts.map((post) => {\n        return changePostLikesOrDislikes(post, action.payload);\n      });\n      return {\n        ...state,\n        savedPosts: { ...state.savedPosts, posts: newPosts }\n      };\n    case ADD_NEW_REPLY:\n    case ADD_NEW_COMMENT:\n      const newPostsComments = state.savedPosts.posts.map((post) => {\n        if (post.id === action.payload.postId)\n          return { ...post, commentsCount: post.commentsCount + 1 };\n        return post;\n      });\n\n      return {\n        ...state,\n        savedPosts: { ...state.savedPosts, posts: newPostsComments }\n      };\n    default:\n      return state;\n  }\n}\n","import { ColorModeActionType } from './color-mode.actions';\nimport { CHANGE_COLOR_MODE } from './color-mode.actions';\ninterface IState {\n  inDarkMode: boolean;\n}\n\nconst INITIAL_STATE: IState = {\n  inDarkMode: false\n};\n\nexport default function colorModeReducer (\n  state: IState = INITIAL_STATE,\n  action: ColorModeActionType\n){\n  switch (action.type) {\n    case CHANGE_COLOR_MODE:\n      return {\n        ...state,\n        inDarkMode: !state.inDarkMode\n      };\n    default:\n      return state;\n  }\n}\n","import { action, payload } from 'ts-action';\nimport { PostDetail } from '../../@types/post.interfaces';\nimport { unfollowUser, followUser } from '../user/user.actions';\n\nexport interface IFetchPostDetailPayload {\n  name: 'POST_DETAIL';\n  data: {\n    id: string;\n  };\n}\nexport const LOAD_POST_DETAIL = 'LOAD_POST_DETAIL';\nexport const CHANGE_POST_DETAIL_SAVED = 'CHANGE_POST_DETAIL_SAVED';\n\nexport const loadPostDetail = action(LOAD_POST_DETAIL, payload<PostDetail>());\n\nexport type PostDetailActionType =\n  | ReturnType<typeof loadPostDetail>\n  | ReturnType<typeof followUser>\n  | ReturnType<typeof unfollowUser>;\n","import { ADD_NEW_COMMENT, ADD_NEW_REPLY } from './../comments/comments.actions';\nimport { FOLLOW_USER, UNFOLLOW_USER } from './../user/user.actions';\nimport { PostDetail } from '../../@types/post.interfaces';\nimport { PostDetailActionType, LOAD_POST_DETAIL } from './post-detail.actions';\nimport {\n  GlobalPostActionType,\n  CHANGE_SAVED,\n  CHANGE_LIKES_OR_DISLIKES\n} from '../global-post-actions/global-post-actions';\nimport { changePostLikesOrDislikes } from '../global-post-actions/global-post-reducer-helper';\n\ninterface IState {\n  postDetail: PostDetail | null;\n}\n\nconst INITIAL_STATE: IState = {\n  postDetail: null\n};\n\nexport default function postDetailReducer (\n  state: IState = INITIAL_STATE,\n  action: PostDetailActionType | GlobalPostActionType\n): IState{\n  const updatePostDetail = (\n    updateCb: (post: PostDetail) => PostDetail,\n    id: string\n  ) => {\n    if (!state.postDetail || id !== state.postDetail.owner.id)\n      return state.postDetail;\n    return updateCb({ ...state.postDetail });\n  };\n\n  switch (action.type) {\n    case LOAD_POST_DETAIL:\n      return {\n        ...state,\n        postDetail: action.payload\n      };\n    case CHANGE_SAVED:\n      if (!state.postDetail) return state;\n      if (state.postDetail.id !== action.payload.post.id) return state;\n\n      const newPostDetail = { ...state.postDetail };\n      newPostDetail.saved = action.payload.saved;\n\n      return {\n        ...state,\n        postDetail: newPostDetail\n      };\n    case CHANGE_LIKES_OR_DISLIKES:\n      if (!state.postDetail) return state;\n      if (state.postDetail.id !== action.payload.id) return state;\n\n      return {\n        ...state,\n        postDetail: {\n          ...changePostLikesOrDislikes(state.postDetail, action.payload)\n        }\n      };\n\n    case FOLLOW_USER:\n      const newPostDetailFollow = updatePostDetail((post) => {\n        post.owner.followed = true;\n        return post;\n      }, action.payload);\n      return {\n        ...state,\n        postDetail: newPostDetailFollow\n      };\n\n    case UNFOLLOW_USER:\n      const newPostDetailUnfollow = updatePostDetail((post) => {\n        post.owner.followed = false;\n        return post;\n      }, action.payload);\n      return {\n        ...state,\n        postDetail: newPostDetailUnfollow\n      };\n\n    case ADD_NEW_REPLY:\n    case ADD_NEW_COMMENT:\n      if (!state.postDetail || action.payload.postId !== state.postDetail.id)\n        return state;\n      return {\n        ...state,\n        postDetail: {\n          ...state.postDetail,\n          commentsCount: state.postDetail.commentsCount + 1\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n","import { Comment } from './../../@types/comment.interfaces';\nimport CommentsActionType, {\n  CLEAR_COMMENTS,\n  ADD_COMMENTS,\n  ADD_REPLIES,\n  UPDATE_COMMENTS,\n  CLEAR_REPLIES,\n  ADD_NEW_REPLY\n} from './comments.actions';\n\ninterface IState {\n  comments: Comment[];\n  page: number;\n  postId: string;\n}\n\nconst INITIAL_STATE: IState = {\n  comments: [],\n  page: 0,\n  postId: ''\n};\n\nexport default function commentsReducer (\n  state: IState = INITIAL_STATE,\n  action: CommentsActionType\n): IState{\n  switch (action.type) {\n    case ADD_COMMENTS:\n      return {\n        ...state,\n        comments: [ ...state.comments, ...action.payload.comments ],\n        page: action.payload.page,\n        postId: action.payload.postId\n      };\n\n    case ADD_REPLIES:\n      const newComments = [ ...state.comments ];\n      const commentIdx = newComments.findIndex(\n        (el) => el.id === action.payload.parentId\n      );\n\n      if (commentIdx !== -1) {\n        const prevReplies = state.comments[commentIdx].replies;\n        const newComment = {\n          ...state.comments[commentIdx],\n          replies: {\n            data: [\n              ...(prevReplies ? prevReplies.data : []),\n              ...action.payload.replies\n            ],\n            page: action.payload.page\n          }\n        };\n\n        newComments.splice(commentIdx, 1, newComment);\n      }\n\n      return {\n        ...state,\n        comments: newComments\n      };\n\n    case UPDATE_COMMENTS:\n      const updatedComments = [ ...state.comments ];\n      for (let i = 0; i < updatedComments.length; i++) {\n        let found = false;\n        if (updatedComments[i].id === action.payload.comment.id) {\n          updatedComments.splice(i, 1, {\n            ...action.payload.comment,\n            replies: updatedComments[i].replies\n          });\n          break;\n        }\n\n        const replies = updatedComments[i].replies;\n\n        if (replies) {\n          for (let j = 0; j < replies.data.length; j++) {\n            if (replies.data[j].id === action.payload.comment.id) {\n              found = true;\n              replies.data.splice(j, 1, action.payload.comment);\n              break;\n            }\n          }\n        }\n\n        if (found) break;\n      }\n\n      return {\n        ...state,\n        comments: updatedComments\n      };\n\n    case CLEAR_COMMENTS:\n      return {\n        ...state,\n        comments: [],\n        page: 0\n      };\n\n    case CLEAR_REPLIES:\n      const newStateComments = [ ...state.comments ];\n      const comment = newStateComments.find(\n        (el) => el.id === action.payload.id\n      );\n      if (comment) {\n        comment.replies = undefined;\n      }\n      return {\n        ...state,\n        comments: newStateComments\n      };\n\n    case ADD_NEW_REPLY:\n      let newUpdatedComments = [ ...state.comments ];\n      let newComment = newUpdatedComments.find(\n        (el) => el.id === action.payload.parent\n      );\n      if (newComment) newComment.repliesCount += 1;\n\n      return {\n        ...state,\n        comments: newUpdatedComments\n      };\n\n    default:\n      return state;\n  }\n}\n","export function setCookie (cname: string, cvalue: string, exdays?: number){\n  let d = new Date();\n  var expires;\n  if (exdays) {\n    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n    expires = 'expires=' + d.toUTCString();\n  }\n  document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\n}\n\nexport function getCookie (cname: string){\n  var name = cname + '=';\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return '';\n}\n","import { Post } from './../../@types/post.interfaces';\nimport { User } from '../../@types/user.interfaces';\nimport {\n  UserActionType,\n  LOAD_USER,\n  LOGIN,\n  LOAD_USER_POSTS,\n  UNFOLLOW_USER,\n  FOLLOW_USER,\n  USER_CHECKED,\n  LOGOUT,\n  LOAD_SELF\n} from './user.actions';\nimport { getCookie } from '../utils/cookie';\nimport {\n  CHANGE_LIKES_OR_DISLIKES,\n  CHANGE_SAVED\n} from '../global-post-actions/global-post-actions';\nimport {\n  changePostLikesOrDislikes,\n  changePostSaved\n} from '../global-post-actions/global-post-reducer-helper';\n\ninterface IState {\n  self: {\n    data: User | null;\n    posts: { data: Post[]; page: number };\n  };\n  user: {\n    data: User | null;\n    posts: { data: Post[]; page: number };\n  };\n  token: string;\n  isChecked: boolean;\n}\n\nconst INITIAL_STATE: IState = {\n  self: { data: null, posts: { data: [], page: 0 } },\n  user: { data: null, posts: { data: [], page: 0 } },\n  token: getCookie('token'),\n  isChecked: false\n};\n\nexport default function userReducer (\n  state: IState = INITIAL_STATE,\n  action: UserActionType\n): IState{\n  function updateUser (updateCb: (user: User) => void, attrib: string){\n    let target: 'user' | 'self' = 'user';\n    if (attrib === 'self') target = 'self';\n\n    if (\n      (target === 'self' && !state.self.data) ||\n      (target === 'user' && (!state.user.data || attrib !== state.user.data.id))\n    ) {\n      return state[target];\n    }\n\n    let newUser: User | null = null;\n    if (state[target] && state[target].data) {\n      const user = state[target].data;\n      if (user) {\n        newUser = { ...user };\n        updateCb(newUser);\n      }\n    }\n\n    return {\n      ...state[target],\n      data: newUser\n    };\n  }\n\n  function updateUserAndSelfPosts (cb: (el: Post) => Post){\n    const newUserPosts = state.user.posts.data.map(cb);\n    const newSelfPosts = state.self.posts.data.map(cb);\n\n    return {\n      ...state,\n      self: {\n        ...state.self,\n        posts: {\n          ...state.self.posts,\n          data: newSelfPosts\n        }\n      },\n      user: {\n        ...state.user,\n        posts: {\n          ...state.user.posts,\n          data: newUserPosts\n        }\n      }\n    };\n  }\n\n  switch (action.type) {\n    case LOAD_USER_POSTS:\n      const modify = action.payload.self ? 'self' : 'user';\n      const newPosts =\n        action.payload.page === 1\n          ? action.payload.posts\n          : [ ...state[modify].posts.data, ...action.payload.posts ];\n\n      return {\n        ...state,\n        [modify]: {\n          ...state[modify],\n          posts: {\n            ...state[modify].posts,\n            data: newPosts,\n            page: action.payload.page\n          }\n        }\n      };\n\n    case USER_CHECKED:\n      return {\n        ...state,\n        isChecked: true\n      };\n\n    case LOAD_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          data: action.payload\n        }\n      };\n\n    case LOAD_SELF:\n      return {\n        ...state,\n        self: {\n          ...state.user,\n          data: action.payload\n        }\n      };\n\n    case CHANGE_LIKES_OR_DISLIKES:\n      return updateUserAndSelfPosts((el) =>\n        changePostLikesOrDislikes(el, action.payload)\n      );\n\n    case CHANGE_SAVED:\n      return updateUserAndSelfPosts((el) =>\n        changePostSaved(el, action.payload)\n      );\n\n    case LOGIN:\n      return {\n        ...state,\n        token: action.payload.token,\n        self: {\n          ...state.self,\n          data: action.payload.user\n        }\n      };\n\n    case LOGOUT:\n      return {\n        ...state,\n        token: '',\n        self: {\n          data: null,\n          posts: { data: [], page: 0 }\n        }\n      };\n\n    case UNFOLLOW_USER:\n      const newUnfollowSelf = updateUser((user) => {\n        user.followingCount -= 1;\n      }, 'self');\n\n      const newUnfollowUser = updateUser((user) => {\n        user.followersCount -= 1;\n        user.followed = false;\n      }, action.payload);\n\n      return {\n        ...state,\n        user: newUnfollowUser,\n        self: newUnfollowSelf\n      };\n\n    case FOLLOW_USER:\n      const newFollowSelf = updateUser((user) => {\n        user.followingCount += 1;\n      }, 'self');\n\n      const newFollowUser = updateUser((user) => {\n        user.followersCount += 1;\n        user.followed = true;\n      }, action.payload);\n\n      return {\n        ...state,\n        user: newFollowUser,\n        self: newFollowSelf\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  IFetchApiNames,\n  FetchActionType,\n  FETCH_API,\n  FETCH_API_FAIL,\n  FETCH_API_SUCCESS\n} from './fetch.actions';\n\ninterface IState {\n  isFetching: { [key in IFetchApiNames]?: boolean };\n  errors: { [key in IFetchApiNames]?: string };\n}\n\nconst INITIAL_STATE: IState = {\n  isFetching: {},\n  errors: {}\n};\n\nexport default function fetchReducer (\n  state: IState = INITIAL_STATE,\n  action: FetchActionType\n): IState{\n  switch (action.type) {\n    case FETCH_API:\n      return {\n        ...state,\n        isFetching: {\n          ...state.isFetching,\n          [action.payload.name]: true\n        },\n        errors: {\n          ...state.errors,\n          [action.payload.name]: null\n        }\n      };\n    case FETCH_API_FAIL:\n      let error = 'Something unexpected happening :(';\n      try {\n        const message = action.payload.error.response.data.message;\n        if (message) error = message;\n      } catch (e) {\n        const message = action.payload.error.message;\n        if (message) error = message;\n      }\n      return {\n        ...state,\n        isFetching: {\n          ...state.isFetching,\n          [action.payload.name]: false\n        },\n        errors: {\n          ...state.errors,\n          [action.payload.name]: error\n        }\n      };\n    case FETCH_API_SUCCESS:\n      return {\n        ...state,\n        isFetching: {\n          ...state.isFetching,\n          [action.payload]: false\n        },\n        errors: {\n          ...state.errors,\n          [action.payload]: null\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import { action, payload } from 'ts-action';\n\nexport interface IAddPostUsingUrlPayload {\n  name: 'ADD_URL_POST';\n  data: {\n    url: string;\n  };\n}\n\nexport interface IPostNewPostPayload {\n  name: 'POST_NEW_POST';\n}\n\nexport const CLEAR_TEMP_POST = 'CLEAR_TEMP_POST';\nexport const ADD_TEMP_POST = 'ADD_TEMP_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const CLEAR_ALL_STATE = 'CLEAR_ALL_STATE';\nexport const REMOVE_POST = 'REMOVE_POST';\nexport const CHANGE_DESC = 'CHANGE_DESC';\nexport const CHANGE_LINK = 'CHANGE_LINK';\nexport const CHANGE_TITLE = 'CHANGE_TITLE';\n\nexport const clearTempPost = action(CLEAR_TEMP_POST);\nexport const addTempPost = action(\n  ADD_TEMP_POST,\n  payload<{ image: string; file?: File }>()\n);\nexport const addPost = action(\n  ADD_POST,\n  payload<{ image: string; file?: File }>()\n);\nexport const clearAllState = action(CLEAR_ALL_STATE);\nexport const removePost = action(REMOVE_POST, payload<{ index: number }>());\nexport const changeDesc = action(CHANGE_DESC, payload<string>());\nexport const changeLink = action(CHANGE_LINK, payload<string>());\nexport const changeTitle = action(CHANGE_TITLE, payload<string>());\n\ntype AddPostActionType =\n  | ReturnType<typeof addPost>\n  | ReturnType<typeof clearTempPost>\n  | ReturnType<typeof addTempPost>\n  | ReturnType<typeof clearAllState>\n  | ReturnType<typeof removePost>\n  | ReturnType<typeof changeDesc>\n  | ReturnType<typeof changeLink>\n  | ReturnType<typeof changeTitle>;\n\nexport default AddPostActionType;\n","import AddPostActionType, {\n  ADD_POST,\n  CLEAR_TEMP_POST,\n  ADD_TEMP_POST,\n  CLEAR_ALL_STATE,\n  REMOVE_POST,\n  CHANGE_LINK,\n  CHANGE_DESC,\n  CHANGE_TITLE\n} from './add-post.actions';\n\ninterface IState {\n  images: { link: string; file?: File }[];\n  tempImage: string;\n  title: string;\n  description: string;\n  link: string;\n  tempFile?: File;\n}\n\nconst INITIAL_STATE: IState = {\n  images: [],\n  title: '',\n  tempImage: '',\n  description: '',\n  link: ''\n};\n\nexport default function addPostReducer (\n  state: IState = INITIAL_STATE,\n  action: AddPostActionType\n): IState{\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        images: [\n          ...state.images,\n          { link: action.payload.image, file: action.payload.file }\n        ]\n      };\n    case ADD_TEMP_POST:\n      return {\n        ...state,\n        tempImage: action.payload.image,\n        tempFile: action.payload.file\n      };\n    case CLEAR_TEMP_POST:\n      return {\n        ...state,\n        tempImage: ''\n      };\n    case CLEAR_ALL_STATE:\n      return {\n        ...state,\n        description: '',\n        link: '',\n        tempImage: '',\n        images: []\n      };\n    case REMOVE_POST:\n      const newImages = [ ...state.images ];\n      newImages.splice(action.payload.index, 1);\n      return {\n        ...state,\n        images: newImages\n      };\n    case CHANGE_LINK:\n      return {\n        ...state,\n        link: action.payload\n      };\n    case CHANGE_DESC:\n      return {\n        ...state,\n        description: action.payload\n      };\n    case CHANGE_TITLE:\n      return {\n        ...state,\n        title: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport postReducer from './post/post.reducer';\nimport savedPostsReducer from './saved-posts/saved-posts.reducer';\nimport colorModeReducer from './color-mode/color-mode.reducer';\nimport postDetailReducer from './post-detail/post-detail.reducer';\nimport commentsReducer from './comments/comments.reducer';\nimport userReducer from './user/user.reducer';\nimport fetchReducer from './fetch/fetch.reducer';\nimport addPostReducer from './add-post/add-post.reducer';\nimport { LOGOUT } from './user/user.actions';\n\nconst reducers = {\n  fetchController: fetchReducer,\n  post: postReducer,\n  savedPosts: savedPostsReducer,\n  colorMode: colorModeReducer,\n  postDetail: postDetailReducer,\n  comments: commentsReducer,\n  user: userReducer,\n  addPost: addPostReducer\n};\n\nconst appReducer = combineReducers(reducers);\n\nconst rootReducer = (state: any, action: any) => {\n  if (action.type === LOGOUT) {\n    state = { user: state.user };\n  }\n\n  return appReducer(state, action);\n};\n\nexport type GlobalState = ReturnType<typeof appReducer>;\nexport default rootReducer;\n","import {\n  IFetchApiNames,\n  fetchApiSuccess,\n  fetchApiFail\n} from '../fetch/fetch.actions';\nimport { put } from 'redux-saga/effects';\n\nexport default function createFetchFunction (name: IFetchApiNames, fn: any){\n  return function* (...params: any[]){\n    try {\n      yield fn(...params);\n      yield put(fetchApiSuccess(name));\n    } catch (error) {\n      yield put(fetchApiFail({ name, error }));\n    }\n  };\n}\n","import { IFetchApiNames } from './fetch.actions';\n\nexport default function createFetchSagaPattern (name: IFetchApiNames){\n  return (action: any) =>\n    action.type === 'FETCH_API' && action.payload.name === name;\n}\n","export default function getDataFromResponse (res: any){\n  try {\n    return res.data.data;\n  } catch (e) {\n    console.error('Response data is invalid');\n    throw new Error('');\n  }\n}\n","import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport {\n  loadExplorePosts,\n  loadFeedsPosts,\n  IFetchExplorePayload,\n  IFetchFeedsPayload\n} from './post.actions';\nimport createFetchFunction from '../utils/create-fetch-func';\nimport createFetchSagaPattern from '../fetch/fetch-saga-pattern-creator';\nimport getFetchInstance from '../utils/fetch';\nimport getDataFromResponse from '../utils/get-data-from-res';\n\nfunction* fetchExplorePosts ({\n  payload: { data: { sort, page } }\n}: {\n  payload: IFetchExplorePayload;\n}){\n  const res = yield getFetchInstance().get(`/posts?sort=${sort}&page=${page}`);\n  const { posts } = getDataFromResponse(res);\n\n  yield put(\n    loadExplorePosts({\n      sort,\n      posts: posts,\n      page\n    })\n  );\n}\n\nfunction* fetchFeedsPosts ({\n  payload: { data: { page } }\n}: {\n  payload: IFetchFeedsPayload;\n}){\n  const res = yield getFetchInstance().get(`/posts/self/feeds?page=${page}`);\n  const { posts } = getDataFromResponse(res);\n\n  yield put(\n    loadFeedsPosts({\n      posts: posts,\n      page\n    })\n  );\n}\n\nfunction* watchFetchFeeds (){\n  yield takeLatest(\n    createFetchSagaPattern('FEEDS'),\n    createFetchFunction('FEEDS', fetchFeedsPosts)\n  );\n}\n\nfunction* watchFetchExplore (){\n  yield takeLatest(\n    createFetchSagaPattern('EXPLORE'),\n    createFetchFunction('EXPLORE', fetchExplorePosts)\n  );\n}\n\nexport function* postSagas (){\n  yield all([ call(watchFetchFeeds), call(watchFetchExplore) ]);\n}\n","import { loadSavedPosts, IFetchSavedPostsPayload } from './saved-posts.actions';\nimport { all, call, takeLatest, put } from 'redux-saga/effects';\nimport createFetchFunction from '../utils/create-fetch-func';\nimport createFetchSagaPattern from '../fetch/fetch-saga-pattern-creator';\nimport getFetchInstance from '../utils/fetch';\nimport getDataFromResponse from '../utils/get-data-from-res';\n\nfunction* fetchSavedPostsAsync ({\n  payload: { data: { page } }\n}: {\n  payload: IFetchSavedPostsPayload;\n}){\n  const res = yield getFetchInstance().get(`/users/self/saved?page=${page}`);\n  const { posts } = getDataFromResponse(res);\n  yield put(\n    loadSavedPosts({\n      posts,\n      page\n    })\n  );\n}\n\nfunction* watchFetchSavedPosts (){\n  yield takeLatest(\n    createFetchSagaPattern('SAVED_POSTS'),\n    createFetchFunction('SAVED_POSTS', fetchSavedPostsAsync)\n  );\n}\n\nexport default function* savedPostsSagas (){\n  yield all([ call(watchFetchSavedPosts) ]);\n}\n","import { all, takeLatest, put, call } from 'redux-saga/effects';\nimport createFetchFunction from '../utils/create-fetch-func';\nimport { loadPostDetail, IFetchPostDetailPayload } from './post-detail.actions';\nimport createFetchSagaPattern from '../fetch/fetch-saga-pattern-creator';\nimport getFetchInstance from '../utils/fetch';\nimport getDataFromResponse from '../utils/get-data-from-res';\n\nfunction* fetchPostDetailAsync ({\n  payload: { data: { id } }\n}: {\n  payload: IFetchPostDetailPayload;\n}){\n  const res = yield getFetchInstance().get(`/posts/${id}`);\n  const { post } = getDataFromResponse(res);\n  if (!post) throw new Error('Post data not found');\n\n  yield put(loadPostDetail(post));\n}\n\nfunction* watchFetchPostDetail (){\n  yield takeLatest(\n    createFetchSagaPattern('POST_DETAIL'),\n    createFetchFunction('POST_DETAIL', fetchPostDetailAsync)\n  );\n}\n\nexport default function* postDetailSagas (){\n  yield all([ call(watchFetchPostDetail) ]);\n}\n","import { put } from 'redux-saga/effects';\nimport {\n  IFetchCommentsPayload,\n  addComments,\n  IFetchRepliesPayload,\n  addReplies,\n  ILikeOrDislikeCommentPayload,\n  updateComments,\n  IAddNewCommentPayload,\n  clearComments,\n  addNewComment,\n  IAddNewReplyPayload,\n  clearReplies,\n  addNewReply\n} from './comments.actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport { call } from 'redux-saga/effects';\nimport { all } from 'redux-saga/effects';\nimport createFetchFunction from '../utils/create-fetch-func';\nimport createFetchSagaPattern from '../fetch/fetch-saga-pattern-creator';\nimport getFetchInstance from '../utils/fetch';\nimport getDataFromResponse from '../utils/get-data-from-res';\nimport { fetchApi } from '../fetch/fetch.actions';\n\nfunction* fetchCommentsAsync ({\n  payload: { data: { page, limit, postId } }\n}: {\n  payload: IFetchCommentsPayload;\n}){\n  const res = yield getFetchInstance().get(\n    `/posts/${postId}/comments?page=${page}&limit=${limit}`\n  );\n  const { comments } = getDataFromResponse(res);\n  yield put(addComments({ comments, page, postId }));\n}\n\nfunction* fetchRepliesAsync ({\n  payload: { data: { limit, page, parentId } }\n}: {\n  payload: IFetchRepliesPayload;\n}){\n  const res = yield getFetchInstance().get(\n    `/posts/id/comments/${parentId}/replies?page=${page}&limit=${limit}`\n  );\n\n  const { replies } = getDataFromResponse(res);\n  yield put(addReplies({ replies, page, parentId }));\n}\n\nfunction* likeDislikeCommentAsync ({\n  payload: { data: { id, dislike, like } }\n}: {\n  payload: ILikeOrDislikeCommentPayload;\n}){\n  const res = yield getFetchInstance().patch(`/posts/id/comments/${id}/likes`, {\n    like,\n    dislike\n  });\n\n  const { comment } = getDataFromResponse(res);\n  yield put(updateComments({ comment }));\n}\n\nfunction* addNewCommentAsync ({\n  payload: { data }\n}: {\n  payload: IAddNewCommentPayload;\n}){\n  const res = yield getFetchInstance().post('/comments', data);\n\n  const { comment } = yield getDataFromResponse(res);\n\n  yield put(clearComments());\n  yield put(\n    fetchApi({\n      name: 'COMMENTS',\n      data: { limit: 5, page: 1, postId: data.postId }\n    })\n  );\n  yield put(addNewComment(comment));\n}\n\nfunction* addNewReplyAsync ({\n  payload: { data: { content, id, postId } }\n}: {\n  payload: IAddNewReplyPayload;\n}){\n  const res = yield getFetchInstance().post(`/comments/${id}/replies`, {\n    content,\n    postId\n  });\n\n  const { reply } = yield getDataFromResponse(res);\n\n  yield put(clearReplies({ id }));\n  yield put(\n    fetchApi({ name: 'REPLIES', data: { parentId: id, limit: 5, page: 1 } })\n  );\n  yield put(addNewReply(reply));\n}\n\nfunction* watchFetchComments (){\n  yield takeLatest(\n    createFetchSagaPattern('COMMENTS'),\n    createFetchFunction('COMMENTS', fetchCommentsAsync)\n  );\n}\n\nfunction* watchFetchReplies (){\n  yield takeLatest(\n    createFetchSagaPattern('REPLIES'),\n    createFetchFunction('REPLIES', fetchRepliesAsync)\n  );\n}\n\nfunction* watchLikeDislikeComment (){\n  yield takeLatest(\n    createFetchSagaPattern('LIKE_DISLIKE_COMMENT'),\n    createFetchFunction('LIKE_DISLIKE_COMMENT', likeDislikeCommentAsync)\n  );\n}\n\nfunction* watchAddNewComment (){\n  yield takeLatest(\n    createFetchSagaPattern('ADD_NEW_COMMENT'),\n    createFetchFunction('ADD_NEW_COMMENT', addNewCommentAsync)\n  );\n}\n\nfunction* watchAddNewReply (){\n  yield takeLatest(\n    createFetchSagaPattern('ADD_NEW_REPLY'),\n    createFetchFunction('ADD_NEW_REPLY', addNewReplyAsync)\n  );\n}\n\nexport function* commentsSagas (){\n  yield all([\n    call(watchFetchComments),\n    call(watchFetchReplies),\n    call(watchLikeDislikeComment),\n    call(watchAddNewComment),\n    call(watchAddNewReply)\n  ]);\n}\n","import { all, call, takeLatest, put } from 'redux-saga/effects';\nimport {\n  IChangeLikesOrDislikesPayload,\n  changeLikesOrDislikes,\n  IChangeSavedPayload,\n  changeSaved\n} from './global-post-actions';\nimport createFetchFunction from '../utils/create-fetch-func';\nimport createFetchSagaPattern from '../fetch/fetch-saga-pattern-creator';\nimport getFetchInstance from '../utils/fetch';\nimport getDataFromResponse from '../utils/get-data-from-res';\n\nfunction* updateLikesOrDislikesAsync ({\n  payload: { data: { like, dislike, id } }\n}: {\n  payload: IChangeLikesOrDislikesPayload;\n}){\n  yield getFetchInstance().patch(`/posts/${id}/likes`, {\n    like,\n    dislike\n  });\n\n  yield put(changeLikesOrDislikes({ like, dislike, id }));\n}\n\nfunction* changeSavedAsync ({\n  payload: { data }\n}: {\n  payload: IChangeSavedPayload;\n}){\n  const { post, saved } = data;\n\n  let res;\n  if (saved) {\n    res = yield getFetchInstance().patch('/users/self/add-saved', {\n      id: post.id\n    });\n  } else {\n    res = yield getFetchInstance().patch('/users/self/delete-saved', {\n      id: post.id\n    });\n  }\n\n  const { modifiedCount } = getDataFromResponse(res);\n  if (modifiedCount <= 0) {\n    console.log('saved post not updated');\n    return;\n  }\n\n  yield put(changeSaved(data));\n}\n\nfunction* watchUpdateLikesOrDislikes (){\n  yield takeLatest(\n    createFetchSagaPattern('CHANGE_LIKES_OR_DISLIKES'),\n    createFetchFunction('CHANGE_LIKES_OR_DISLIKES', updateLikesOrDislikesAsync)\n  );\n}\n\nfunction* watchAddOrRemoveSavedPost (){\n  yield takeLatest(\n    createFetchSagaPattern('CHANGE_SAVED'),\n    createFetchFunction('CHANGE_SAVED', changeSavedAsync)\n  );\n}\n\nexport default function* globalPostSagas (){\n  yield all([\n    call(watchUpdateLikesOrDislikes),\n    call(watchAddOrRemoveSavedPost)\n  ]);\n}\n","import { fetchApi } from './../fetch/fetch.actions';\nimport { call, all, takeLatest, put } from 'redux-saga/effects';\nimport {\n  IFetchUserPayload,\n  loadUser,\n  ILoginPayload,\n  login,\n  IRegisterPayload,\n  IFetchUserPostsPayload,\n  loadUserPosts,\n  IFollowUserPayload,\n  IUnfollowUserPayload,\n  followUser,\n  unfollowUser,\n  userChecked,\n  LOGOUT,\n  IUpdateUserPayload,\n  loadSelf\n} from './user.actions';\nimport createFetchFunction from '../utils/create-fetch-func';\nimport createFetchSagaPattern from '../fetch/fetch-saga-pattern-creator';\nimport getFetchInstance from './../utils/fetch';\nimport getDataFromResponse from '../utils/get-data-from-res';\nimport store from '../store';\nimport { setCookie } from '../utils/cookie';\nimport { clearFeedsPosts } from '../post/post.actions';\n\nfunction* loginUserFromResponse (res: any){\n  const { user, token } = getDataFromResponse(res);\n  setCookie('token', token, 7);\n  yield put(\n    login({\n      user,\n      token\n    })\n  );\n}\n\nfunction* fetchUserAsync ({\n  payload: { data: { id } }\n}: {\n  payload: IFetchUserPayload;\n}){\n  const res = yield getFetchInstance().get(`/users/${id}`);\n  const { user } = getDataFromResponse(res);\n  yield put(loadUser(user));\n}\n\nfunction* loginAsync ({ payload: { data } }: { payload: ILoginPayload }){\n  const res = yield getFetchInstance().post('/login', data);\n  yield loginUserFromResponse(res);\n}\n\nfunction* registerAsync ({ payload: { data } }: { payload: IRegisterPayload }){\n  const res = yield getFetchInstance().post('/register', data);\n  yield loginUserFromResponse(res);\n}\n\nfunction* fetchUserPostsAsync ({\n  payload: { data: { id, page, self } }\n}: {\n  payload: IFetchUserPostsPayload;\n}){\n  if (self) {\n    const { data } = store.getState().user.self;\n    if (data) id = data.id;\n    else {\n      throw new Error('You need to login first!');\n    }\n  }\n\n  const res = yield getFetchInstance().get(`/users/${id}/posts?page=${page}`);\n  const { posts } = getDataFromResponse(res);\n\n  yield put(\n    loadUserPosts({\n      page,\n      posts,\n      self\n    })\n  );\n}\n\nfunction* checkUserAsync (){\n  try {\n    const { token } = yield store.getState().user;\n    if (token === '') return;\n    const res = yield getFetchInstance().post('/check-user', {\n      token\n    });\n\n    yield loginUserFromResponse(res);\n  } catch (error) {\n    yield setCookie('token', '', -99999);\n  } finally {\n    yield put(userChecked());\n  }\n}\n\nfunction* followUserAsync ({\n  payload: { data: { id } }\n}: {\n  payload: IFollowUserPayload;\n}){\n  yield getFetchInstance().patch(`/users/${id}/follow`);\n  yield put(followUser(id));\n\n  yield put(clearFeedsPosts());\n  yield put(fetchApi({ name: 'FEEDS', data: { page: 1 } }));\n}\n\nfunction* unfollowUserAsync ({\n  payload: { data: { id } }\n}: {\n  payload: IUnfollowUserPayload;\n}){\n  yield getFetchInstance().patch(`/users/${id}/unfollow`);\n  yield put(unfollowUser(id));\n\n  yield put(clearFeedsPosts());\n  yield put(fetchApi({ name: 'FEEDS', data: { page: 1 } }));\n}\n\nfunction* watchFetchUser (){\n  yield takeLatest(\n    createFetchSagaPattern('USER'),\n    createFetchFunction('USER', fetchUserAsync)\n  );\n}\n\nfunction* logout (){\n  yield setCookie('token', '', -99999);\n}\n\nfunction* updateUserAsync ({\n  payload: { data }\n}: {\n  payload: IUpdateUserPayload;\n}){\n  const bodyFormData = new FormData();\n  if (data.fullname) bodyFormData.set('fullname', data.fullname);\n  if (data.username) bodyFormData.set('username', data.username);\n  if (data.status) bodyFormData.set('status', data.status);\n  if (data.profilePic) bodyFormData.set('profilePic', data.profilePic);\n  const res = yield getFetchInstance().patch('/users/self', bodyFormData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n\n  const { user } = getDataFromResponse(res);\n  yield put(loadSelf(user));\n}\n\nfunction* watchLogin (){\n  yield takeLatest(\n    createFetchSagaPattern('LOGIN'),\n    createFetchFunction('LOGIN', loginAsync)\n  );\n}\n\nfunction* watchRegister (){\n  yield takeLatest(\n    createFetchSagaPattern('REGISTER'),\n    createFetchFunction('REGISTER', registerAsync)\n  );\n}\n\nfunction* watchFetchUserPosts (){\n  yield takeLatest(\n    createFetchSagaPattern('FETCH_USER_POSTS'),\n    createFetchFunction('FETCH_USER_POSTS', fetchUserPostsAsync)\n  );\n}\n\nfunction* watchCheckUser (){\n  yield takeLatest(\n    createFetchSagaPattern('CHECK_USER'),\n    createFetchFunction('CHECK_USER', checkUserAsync)\n  );\n}\n\nfunction* watchFollowUser (){\n  yield takeLatest(\n    createFetchSagaPattern('FOLLOW_USER'),\n    createFetchFunction('FOLLOW_USER', followUserAsync)\n  );\n}\nfunction* watchUnfollowUser (){\n  yield takeLatest(\n    createFetchSagaPattern('UNFOLLOW_USER'),\n    createFetchFunction('UNFOLLOW_USER', unfollowUserAsync)\n  );\n}\n\nfunction* watchLogout (){\n  yield takeLatest(LOGOUT, logout);\n}\n\nfunction* watchUpdateUser (){\n  yield takeLatest(\n    createFetchSagaPattern('UPDATE_USER'),\n    createFetchFunction('UPDATE_USER', updateUserAsync)\n  );\n}\n\nexport default function* userSagas (){\n  yield all([\n    call(watchFetchUser),\n    call(watchLogin),\n    call(watchRegister),\n    call(watchFetchUserPosts),\n    call(watchCheckUser),\n    call(watchFollowUser),\n    call(watchUnfollowUser),\n    call(watchLogout),\n    call(watchUpdateUser)\n  ]);\n}\n","import {\n  all,\n  call,\n  takeLeading,\n  put,\n  takeLatest,\n  select\n} from 'redux-saga/effects';\nimport createFetchSagaPattern from '../fetch/fetch-saga-pattern-creator';\nimport createFetchFunction from '../utils/create-fetch-func';\nimport { IAddPostUsingUrlPayload, addTempPost } from './add-post.actions';\nimport getFetchInstance from '../utils/fetch';\nimport getDataFromResponse from '../utils/get-data-from-res';\nimport { GlobalState } from '../root-reducer';\n\nfunction* addUrlAsync ({\n  payload: { data: { url } }\n}: {\n  payload: IAddPostUsingUrlPayload;\n}){\n  const res = yield getFetchInstance().post('/screenshot', {\n    url\n  });\n\n  const { url: imageUrl } = getDataFromResponse(res);\n  yield put(addTempPost({ image: imageUrl }));\n}\n\nfunction* postNewPostAsync (){\n  const getAddPostData = ({ addPost }: GlobalState) => addPost;\n  const state: ReturnType<typeof getAddPostData> = yield select(getAddPostData);\n\n  if (state.images.length === 0) return;\n\n  const bodyData = new FormData();\n  state.images.forEach(({ link, file }, idx) => {\n    if (file) {\n      bodyData.append('files', file);\n      bodyData.append('images', `files--${idx}`);\n    } else {\n      bodyData.append('images', link);\n    }\n  });\n  bodyData.set('title', state.title);\n  bodyData.set('description', state.description);\n  bodyData.set('link', state.link);\n  yield getFetchInstance().post('/posts', bodyData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n}\n\nfunction* watchAddUrl (){\n  yield takeLeading(\n    createFetchSagaPattern('ADD_URL_POST'),\n    createFetchFunction('ADD_URL_POST', addUrlAsync)\n  );\n}\n\nfunction* watchPostNewPost (){\n  yield takeLatest(\n    createFetchSagaPattern('POST_NEW_POST'),\n    createFetchFunction('POST_NEW_POST', postNewPostAsync)\n  );\n}\n\nexport default function* addPostSagas (){\n  yield all([ call(watchAddUrl), call(watchPostNewPost) ]);\n}\n","import { all, call } from 'redux-saga/effects';\nimport { postSagas } from './post/post.sagas';\nimport savedPostsSagas from './saved-posts/saved-posts.sagas';\nimport postDetailSagas from './post-detail/post-detail.sagas';\nimport { commentsSagas } from './comments/comments.sagas';\nimport globalPostSagas from './global-post-actions/global-post-sagas';\nimport userSagas from './user/user.sagas';\nimport addPostSagas from './add-post/add-post.sagas';\n\nexport default function* rootSaga (){\n  yield all([\n    call(globalPostSagas),\n    call(postSagas),\n    call(savedPostsSagas),\n    call(postDetailSagas),\n    call(commentsSagas),\n    call(userSagas),\n    call(addPostSagas)\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './root-reducer';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares: any[] = [sagaMiddleware];\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import axios from 'axios';\nimport store from '../store';\n\nconsole.log(process.env.NODE_ENV);\n\nconst baseURL =\n  process.env.NODE_ENV === 'production'\n    ? 'https://uigram-api.herokuapp.com/api/v1'\n    : 'http://localhost:8080/api/v1';\n\nconst getFetchInstance = () =>\n  axios.create({\n    baseURL,\n    headers: { Authorization: `Bearer ${store.getState().user.token}` }\n  });\n\nexport default getFetchInstance;\n","import { useState, useEffect } from 'react';\nimport getFetchInstance from '../redux/utils/fetch';\nimport getDataFromResponse from '../redux/utils/get-data-from-res';\n\nexport default function useFetch (\n  path: string | undefined,\n  dataName: string\n): [any, boolean, null | Error]{\n  const [ data, setData ] = useState(null);\n  const [ isFetching, setIsFetching ] = useState(false);\n  const [ error, setError ] = useState<Error | null>(null);\n\n  useEffect(\n    () => {\n      async function getData (){\n        try {\n          if (!path) throw new Error('Path unspecified');\n          setError(null);\n          setIsFetching(true);\n          const res = await getFetchInstance().get(path);\n          const data = getDataFromResponse(res);\n          setData(data[dataName]);\n          setIsFetching(false);\n        } catch (error) {\n          setError(error);\n        }\n      }\n      getData();\n    },\n    [ dataName, path ]\n  );\n\n  return [ data, isFetching, error ];\n}\n","import React, { useState, useEffect } from 'react';\nimport { User } from '../../@types/user.interfaces';\nimport TabLayout from '../tab-layout/tab-layout.component';\nimport './user-content.styles.scss';\nimport { Post } from '../../@types/post.interfaces';\nimport UserPosts from './user-posts.component';\nimport UserFollowers from './user-followers.component';\nimport UserFollowing from './user-following.component';\nimport useHash from '../../effects/useHash.effect';\n\ninterface IProps {\n  user: { data: User | null; posts: { page: number; data: Post[] } };\n  className?: string;\n}\n\nconst tabs = [ 'Posts', 'Following', 'Followers' ];\nconst components = [ UserPosts, UserFollowing, UserFollowers ];\n\nexport default function UserContent ({ user, className }: IProps){\n  const [ hash, setHash ] = useHash();\n  const [ activeTab, setActiveTab ] = useState(0);\n  const Component = components[activeTab];\n\n  useEffect(\n    () => {\n      let tab = tabs.findIndex((val) => val.toLowerCase() === hash);\n      if (tab === -1) tab = 0;\n      setActiveTab(tab);\n    },\n    [ hash ]\n  );\n\n  const handleChangeTab = (tab: number) => {\n    setHash(tabs[tab].toLowerCase());\n    setActiveTab(tab);\n  };\n\n  return (\n    <div className={`user-content ${className || ''}`}>\n      <TabLayout\n        tabs={tabs}\n        activeTab={activeTab}\n        setActiveTab={handleChangeTab}\n      />\n      <Component user={user} />\n    </div>\n  );\n}\n","import React from 'react';\nimport UserFollow from '../user-follow/user-follow.component';\nimport { User } from '../../@types/user.interfaces';\nimport useFetch from '../../effects/useFetch.effect';\nimport { Post } from '../../@types/post.interfaces';\n\ninterface IProps {\n  user: { data: User | null; posts: { page: number; data: Post[] } };\n}\n\nexport default function UserFollowing ({ user }: IProps){\n  const [ users, isFetching, error ] = useFetch(\n    user.data ? `/users/${user.data.id}/following` : undefined,\n    'users'\n  );\n\n  return (\n    <UserFollow\n      noDataMessage=\"You haven't followed anyone yet.\"\n      listUser={users}\n      isFetching={isFetching}\n      error={error || undefined}\n    />\n  );\n}\n","import React from 'react';\nimport UserFollow from '../user-follow/user-follow.component';\nimport { User } from '../../@types/user.interfaces';\nimport useFetch from '../../effects/useFetch.effect';\nimport { Post } from '../../@types/post.interfaces';\n\ninterface IProps {\n  user: { data: User | null; posts: { page: number; data: Post[] } };\n}\n\nexport default function UserFollowers ({ user }: IProps){\n  const [ users, isFetching, error ] = useFetch(\n    user.data ? `/users/${user.data.id}/followers` : undefined,\n    'users'\n  );\n\n  return (\n    <UserFollow\n      noDataMessage=\"You don't have any follower yet.\"\n      listUser={users}\n      isFetching={isFetching}\n      error={error || undefined}\n    />\n  );\n}\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\n\nexport default function useHash (): [string, (val: string) => void]{\n  const [ hash, setHash ] = useState(window.location.hash.substr(1));\n  const location = useLocation();\n\n  const handleHashChange = useCallback(\n    () => {\n      setHash(window.location.hash.substr(1));\n    },\n    [ setHash ]\n  );\n\n  const handleChange = (val: string) => {\n    window.location.hash = val;\n  };\n\n  useEffect(\n    () => {\n      window.addEventListener('hashchange', handleHashChange);\n\n      return () => {\n        window.removeEventListener('hashchange', handleHashChange);\n      };\n    },\n    [ handleHashChange ]\n  );\n\n  useEffect(\n    () => {\n      setHash(location.hash.substr(1));\n    },\n    [ location ]\n  );\n\n  return [ hash, handleChange ];\n}\n","import React, { useEffect } from 'react';\nimport UserProfile from '../../components/user-profile/user-profile.component';\nimport './profile-page.styles.scss';\nimport UserContent from '../../components/user-content/user-content.component';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\nimport { Dispatch } from 'redux';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\nimport { User } from '../../@types/user.interfaces';\nimport ErrorMessage from '../../components/error-message/error-message.component';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport LoadingError from '../../components/loading-error/loading-error.component';\nimport { Post } from '../../@types/post.interfaces';\nimport useFetchCleanup from '../../effects/useFetchCleanup.effect';\n\ninterface IProps {\n  user: { data: User | null; posts: { page: number; data: Post[] } };\n  self: { data: User | null; posts: { page: number; data: Post[] } };\n  isFetching?: boolean;\n  error?: string;\n  fetchUser: (id: string) => void;\n  fetchUserPosts: (id: string, page: number, self?: boolean) => void;\n}\n\nfunction ProfilePagePlain ({\n  user,\n  self,\n  isFetching,\n  error,\n  fetchUser,\n  fetchUserPosts\n}: IProps){\n  useFetchCleanup('USER');\n\n  const match = useRouteMatch<{ id: string }>();\n  const history = useHistory();\n  const { id } = match.params;\n\n  useEffect(\n    () => {\n      if (isFetching || error) return;\n      if (id === 'self' && !self.data) {\n        history.push('/login');\n      } else if (id !== 'self') {\n        if (!user.data || user.data.id !== id) {\n          fetchUser(id);\n          fetchUserPosts(id, 1);\n        }\n      } else if (self.posts.data.length === 0 && self.posts.page === 0) {\n        fetchUserPosts(id, 1, true);\n      }\n    },\n    [ id, fetchUser, user, fetchUserPosts, self, history, isFetching, error ]\n  );\n\n  let displayUser = user;\n  if (\n    match.params.id === 'self' ||\n    (self.data && self.data.id === match.params.id)\n  ) {\n    displayUser = self;\n\n    if (displayUser === null) {\n      history.push('/login');\n    }\n  }\n\n  return (\n    <div className=\"profile-page\">\n      <LoadingError isLoading={isFetching} error={error}>\n        {displayUser.data ? (\n          <div className=\"profile-container\">\n            <UserProfile\n              isSelf={\n                match.params.id === 'self' ||\n                !!(self.data && self.data.id === match.params.id)\n              }\n              user={displayUser.data}\n              page={displayUser.posts.page}\n            />\n            <UserContent user={displayUser} className=\"scrollbar\" />\n          </div>\n        ) : (\n          <ErrorMessage message=\"User not found\" />\n        )}\n      </LoadingError>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  user: { user, self },\n  fetchController: { isFetching, errors }\n}: GlobalState) => ({\n  user: user,\n  self: self,\n  isFetching: isFetching.USER,\n  error: errors.USER\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchUser: (id: string) => dispatch(fetchApi({ name: 'USER', data: { id } })),\n  fetchUserPosts: (id: string, page: number, self?: boolean) =>\n    dispatch(fetchApi({ name: 'FETCH_USER_POSTS', data: { id, page, self } }))\n});\n\nconst ProfilePage = connect(mapStateToProps, mapDispatchToProps)(\n  ProfilePagePlain\n);\nexport default ProfilePage;\n","import React from 'react';\nimport './card-form.styles.scss';\nimport Button from '../button/button.component';\nimport { Link } from 'react-router-dom';\n\ninterface IProps {\n  title: string;\n  children: JSX.Element | JSX.Element[] | null;\n  actionButtonText: string;\n  additional: {\n    main: string;\n    sub: string;\n    img: string;\n    actionText: string;\n    link: {\n      text: string;\n      path: string;\n    };\n  };\n  error?: string;\n  isFetching?: boolean;\n  onSubmit: (e: any) => void;\n}\n\nexport default function CardForm ({\n  title,\n  children,\n  additional,\n  actionButtonText,\n  error,\n  isFetching,\n  onSubmit\n}: IProps){\n  return (\n    <div className=\"card-form-wrapper\">\n      <div className=\"card-form-card\">\n        <div className=\"card-form\">\n          <form className=\"card-form__form\" onSubmit={onSubmit}>\n            <h1>{title}</h1>\n            <div className=\"card-form__form__fields\">{children}</div>\n            <span className=\"error\">{error}</span>\n            <div className=\"card-form__form__action\">\n              <Button type=\"submit\" disabled={isFetching ? true : false}>\n                {actionButtonText}\n              </Button>\n              <span className=\"show-small\">\n                {additional.actionText}{' '}\n                <a\n                  className=\"additional__action__link\"\n                  href={additional.link.path}>\n                  {additional.link.text}\n                </a>\n              </span>\n            </div>\n          </form>\n        </div>\n        <div className=\"additional\">\n          <div className=\"additional__text\">\n            <p className=\"additional__text__main\">{additional.main}</p>\n            <p className=\"additional__text__sub\">{additional.sub}</p>\n          </div>\n          <img src={additional.img} alt=\"sharing\" />\n          <span className=\"additional__action\">\n            {additional.actionText}{' '}\n            <Link\n              className=\"additional__action__link\"\n              to={additional.link.path}>\n              {additional.link.text}\n            </Link>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { InputHTMLAttributes } from 'react';\nimport './input-field.styles.scss';\n\ninterface IProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  label: string;\n  errorMessage?: string;\n}\n\nexport default function InputField ({\n  name,\n  label,\n  className,\n  errorMessage,\n  value,\n  ...otherProps\n}: IProps){\n  return (\n    <div\n      className={`input-field ${className || ''} ${errorMessage && value\n        ? 'not-valid'\n        : ''}`}>\n      <input\n        className={value ? 'filled' : ''}\n        {...otherProps}\n        id={name}\n        name={name}\n        value={value}\n        required\n      />\n      <label htmlFor={name}>{label}</label>\n      {errorMessage && value ? (\n        <span className=\"error-message\">{errorMessage}</span>\n      ) : null}\n      <div className=\"after-element\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport CardForm from '../../components/card-form/card-form.component';\nimport InputField from '../../components/input-field/input-field.component';\nimport SharingImage from './../../assets/images/sharing-undraw.svg';\nimport useForm from './../../effects/useForm.effect';\nimport { validateEmail, validatePassword } from '../../utils/validations';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { GlobalState } from '../../redux/root-reducer';\n\ninterface IProps {\n  isFetching?: boolean;\n  error?: string;\n  userChecking?: boolean;\n  login: (data: { email: string; password: string }) => void;\n}\n\nfunction LoginPagePlain ({ login, isFetching, error, userChecking }: IProps){\n  const [ data, handleChange, handleSubmit, submitErrors ] = useForm(\n    {\n      email: {\n        value: '',\n        validation: validateEmail,\n        error: ''\n      },\n      password: {\n        value: '',\n        validation: validatePassword,\n        error: ''\n      }\n    },\n    () => {\n      login({ email: data.email.value, password: data.password.value });\n    }\n  );\n\n  const { email, password } = data;\n\n  if (userChecking) return null;\n\n  return (\n    <CardForm\n      title=\"Welcome back!\"\n      actionButtonText=\"Login\"\n      additional={{\n        actionText: \"Don't have an account yet?\",\n        img: SharingImage,\n        main: 'Share your design',\n        sub: 'and discuss it with our community!',\n        link: { text: 'Register', path: '/register' }\n      }}\n      isFetching={isFetching}\n      error={submitErrors ? submitErrors : error ? error : ''}\n      onSubmit={handleSubmit}>\n      <InputField\n        type=\"text\"\n        name=\"email\"\n        label=\"Email\"\n        onChange={handleChange}\n        value={email.value}\n        errorMessage={email.error}\n      />\n      <InputField\n        type=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        onChange={handleChange}\n        value={password.value}\n        errorMessage={password.error}\n      />\n    </CardForm>\n  );\n}\n\nconst mapStateToProps = ({\n  fetchController: {\n    isFetching: { LOGIN: isFetching, CHECK_USER: userChecking },\n    errors: { LOGIN: error }\n  }\n}: GlobalState) => ({\n  isFetching,\n  error,\n  userChecking\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  login: (data: { email: string; password: string }) =>\n    dispatch(fetchApi({ name: 'LOGIN', data }))\n});\n\nconst LoginPage = connect(mapStateToProps, mapDispatchToProps)(LoginPagePlain);\nexport default LoginPage;\n","import React from 'react';\nimport CardForm from '../../components/card-form/card-form.component';\nimport InputField from '../../components/input-field/input-field.component';\nimport IdeasImage from './../../assets/images/ideas-undraw.svg';\nimport {\n  validateEmail,\n  validateUsername,\n  validatePassword\n} from '../../utils/validations';\nimport useForm from '../../effects/useForm.effect';\nimport { connect } from 'react-redux';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { fetchApi } from '../../redux/fetch/fetch.actions';\nimport { Dispatch } from 'redux';\nimport { User } from '../../@types/user.interfaces';\nimport { IRegisterPayload } from '../../redux/user/user.actions';\n\ninterface IProps {\n  user: User | null;\n  isFetching?: boolean;\n  error?: string;\n  register: (data: IRegisterPayload['data']) => void;\n}\n\nfunction RegisterPagePlain ({ user, isFetching, error, register }: IProps){\n  const [ data, handleChange, handleSubmit, submitErrors ] = useForm(\n    {\n      email: {\n        value: '',\n        validation: validateEmail,\n        error: ''\n      },\n      username: {\n        value: '',\n        validation: validateUsername,\n        error: ''\n      },\n      fullname: {\n        value: ''\n      },\n      password: {\n        value: '',\n        validation: validatePassword,\n        error: ''\n      },\n      confirmPassword: {\n        value: '',\n        isPasswordConfirmation: true,\n        error: ''\n      }\n    },\n    () => {\n      register({\n        email: data.email.value,\n        fullname: data.email.value,\n        username: data.username.value,\n        password: data.password.value\n      });\n    }\n  );\n\n  const { email, fullname, password, username, confirmPassword } = data;\n\n  return (\n    <CardForm\n      title=\"Welcome to UIGram !\"\n      actionButtonText=\"Register\"\n      additional={{\n        img: IdeasImage,\n        main: 'Explore new ideas',\n        actionText: 'Already got an account?',\n        sub: 'with us!',\n        link: { text: 'Login', path: '/login' }\n      }}\n      isFetching={isFetching}\n      error={submitErrors ? submitErrors : error ? error : ''}\n      onSubmit={handleSubmit}>\n      <InputField\n        errorMessage={email.error}\n        type=\"text\"\n        name=\"email\"\n        label=\"Email\"\n        value={email.value}\n        onChange={handleChange}\n      />\n      <InputField\n        errorMessage={username.error}\n        type=\"text\"\n        name=\"username\"\n        label=\"Username\"\n        value={username.value}\n        onChange={handleChange}\n      />\n      <InputField\n        type=\"text\"\n        name=\"fullname\"\n        label=\"Full Name\"\n        value={fullname.value}\n        onChange={handleChange}\n      />\n      <InputField\n        type=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        value={password.value}\n        onChange={handleChange}\n        errorMessage={password.error}\n      />\n      <InputField\n        errorMessage={confirmPassword.error}\n        type=\"password\"\n        name=\"confirmPassword\"\n        label=\"Confirm Password\"\n        value={confirmPassword.value}\n        onChange={handleChange}\n      />\n    </CardForm>\n  );\n}\n\nconst mapStateToProps = ({\n  fetchController: {\n    isFetching: { REGISTER: isFetching },\n    errors: { REGISTER: error }\n  },\n  user: { self: { data } }\n}: GlobalState) => ({\n  isFetching,\n  error,\n  user: data\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  register: (data: IRegisterPayload['data']) =>\n    dispatch(fetchApi({ name: 'REGISTER', data }))\n});\n\nconst RegisterPage = connect(mapStateToProps, mapDispatchToProps)(\n  RegisterPagePlain\n);\nexport default RegisterPage;\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function PlusIcon(props: IProps) {\n    return (\n        <Icon viewBox='0 0 1024 1024' {...props}>\n            <path d='M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z' fill='currentColor' />\n            <path d='M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448s448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372s372 166.6 372 372s-166.6 372-372 372z' fill='currentColor' />\n        </Icon>\n    );\n}\n","import React from 'react';\nimport './upload-images.styles.scss';\nimport PlusIcon from '../icons/plus/plus.component';\nimport CrossIcon from '../icons/cross/cross.compnent';\nimport { Image } from '../../@types/image.interface';\n\ninterface IProps {\n  images: Image[];\n  setImages: (e: Image[]) => void;\n}\n\nexport default function UploadImages ({ images, setImages }: IProps){\n  const handleChange = (e: any) => {\n    if (images.length) if (images[0].raw === 'test') images.pop();\n    setImages(\n      images.concat({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0]\n      })\n    );\n  };\n\n  const handleDelete = (index: number) => {\n    if (images.length > 0) {\n      const copy = Object.assign([], images);\n      copy.splice(index, 1);\n      setImages(copy);\n    }\n  };\n\n  return (\n    <div className=\"upload-images\">\n      <div className=\"upload-images__container\">\n        {images.length > 0 && images[0].raw !== 'test' ? (\n          images.map((image, index) => (\n            <div className=\"upload-images__container__images\" key={index}>\n              <CrossIcon\n                color=\"white\"\n                size={2}\n                onClick={() => handleDelete(index)}\n                className=\"cross-icon\"\n              />\n              <img\n                className=\"images\"\n                src={image.preview}\n                alt=\"Images\"\n                style={{\n                  height: '300px',\n                  width: '100%'\n                }}\n              />\n            </div>\n          ))\n        ) : (\n          ''\n        )}\n        <div className=\"upload-images__container__input\">\n          <label\n            htmlFor=\"input-image\"\n            className=\"upload-images__container__input__label\">\n            <PlusIcon color=\"black\" size={10} />\n          </label>\n          <input id=\"input-image\" type=\"file\" onChange={handleChange} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport InputField from '../input-field/input-field.component';\nimport './post-description.styles.scss';\n\ninterface IProps {\n    title: {\n        value: string,\n        error: string\n    };\n    description: {\n        value: string,\n        error: string\n    };\n    handleChange: (e: any, name: string) => void;\n}\n\nexport default function PostDescription({ title, description, handleChange }: IProps) {\n    return (\n        <div className='post-description'>\n            <InputField\n                type='text'\n                name='title'\n                label='Title'\n                onChange={(e) => handleChange(e, 'title')}\n                value={title.value}\n                errorMessage={title.error}\n            />\n            <InputField\n                type='text'\n                name='description'\n                label='Description'\n                onChange={(e) => handleChange(e, 'description')}\n                value={description.value}\n                errorMessage={description.error}\n            />\n        </div>\n    );\n}","import React, { useEffect, useState, Fragment } from 'react';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { User } from '../../@types/user.interfaces';\nimport { useHistory } from 'react-router-dom';\nimport PostImage from '../../components/post-image/post-image.components';\nimport PostDescriptionContainer from '../../components/post-description-container/post-description-container.components';\n\ninterface IProps {\n  self: { data: User | null };\n}\n\nconst Components = [ PostImage, PostDescriptionContainer ];\n\nfunction PostPagePlain ({ self }: IProps){\n  const history = useHistory();\n  const [ activeSlide, setActiveSlide ] = useState(0);\n  const [ images, setImages ] = useState([\n    {\n      preview: '',\n      raw: 'test'\n    }\n  ]);\n\n  useEffect(\n    () => {\n      if (!self.data) history.push('/login');\n    },\n    [ self.data, history ]\n  );\n\n  const [ error, setError ] = useState('');\n\n  const setSlide = async (nav: string) => {\n    setError('');\n    if (nav === 'next') {\n      if (images.length > 0 && images[0].raw !== 'test') {\n        setActiveSlide(activeSlide + 1);\n        setError('');\n      } else setError('Please choose image, at least one image');\n    } else if (nav === 'prev') setActiveSlide(activeSlide - 1);\n  };\n\n  const Component = Components[activeSlide];\n\n  return (\n    <div>\n      <Fragment>\n        {/* <SlideBar\n          activeSlide={activeSlide}\n          setActiveSlide={setActiveSlide}\n          slides={slideNames}\n          saveState={postPageStore.saveTabState}\n          getSavedState={postPageStore.getTabState}\n        /> */}\n        {\n          <Component\n            activeSlide={activeSlide}\n            setSlide={setSlide}\n            images={images}\n            setImages={setImages}\n            error={error}\n          />\n        }\n      </Fragment>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  user: { self },\n  fetchController: { isFetching, errors }\n}: GlobalState) => ({\n  self: self\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nconst PostPage = connect(mapStateToProps, mapDispatchToProps)(PostPagePlain);\n\nexport default PostPage;\n","import React from 'react';\nimport './post-image.styles.scss';\nimport Button from '../button/button.component';\nimport UploadImages from '../upload-images/upload-images.components';\nimport { Image } from '../../@types/image.interface';\n\ninterface IProps {\n  activeSlide: number;\n  setSlide: (nav: string) => void;\n  images: Image[];\n  setImages: (e: Image[]) => void;\n  error: string;\n}\n\nexport default function PostImage ({\n  setSlide,\n  activeSlide,\n  images,\n  setImages,\n  error\n}: IProps){\n  return (\n    <div className=\"post-image\">\n      <h2 className=\"heading\">Post Image</h2>\n      <UploadImages images={images} setImages={setImages} />\n      <div className=\"post-image__nav\">\n        <span className=\"post-image__nav__error\">{error}</span>\n        <Button\n          className=\"post-image__nav__button\"\n          onClick={() => setSlide('next')}>\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Button from '../button/button.component';\nimport './post-description-container.styles.scss';\nimport { Image } from '../../@types/image.interface';\nimport PostDescription from '../post-description/post-description.components';\nimport { isEmpty } from '../../utils/validations';\n\ninterface IProps {\n  images: Image[];\n  activeSlide: number;\n  setSlide: (nav: string) => void;\n  error: string;\n}\n\nexport default function PostDescriptionContainer ({\n  images,\n  activeSlide,\n  setSlide,\n  error\n}: IProps){\n  const [ title, setTitle ] = useState({\n    value: '',\n    error: ''\n  });\n  const [ description, setDescription ] = useState({\n    value: '',\n    error: ''\n  });\n\n  //gabung images sma detail trus post ke backend\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    error = isEmpty('Title', title.value);\n    if (error !== '') {\n      setTitle((prev) => ({\n        value: '',\n        error: error\n      }));\n      return;\n    }\n    error = isEmpty('Description', description.value);\n    if (error !== '') {\n      setDescription((prev) => ({\n        value: '',\n        error: error\n      }));\n      return;\n    }\n    setTitle((prev) => ({\n      ...prev,\n      error: ''\n    }));\n    setTitle((prev) => ({\n      ...prev,\n      error: ''\n    }));\n  };\n\n  const handleChange = async (e: any, name: string) => {\n    if (name === 'title') setTitle(e.target.value);\n    else if (name === 'description') setDescription(e.target.value);\n  };\n\n  return (\n    <div className=\"post-description-container\">\n      <h2 className=\"heading\">Post Description</h2>\n      <PostDescription\n        title={title}\n        description={description}\n        handleChange={handleChange}\n      />\n      <div className=\"post-description-container__nav\">\n        <Button\n          className=\"post-description-container__nav__button\"\n          onClick={() => setSlide('prev')}>\n          Prev\n        </Button>\n        <span>{error}</span>\n        <Button\n          className=\"post-description-container__nav__button\"\n          onClick={handleSubmit}>\n          Post\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './images-preview.styles.scss';\n\ninterface Props {\n  images: string[];\n  activeImage: number;\n  onImageClick: (idx: number) => void;\n}\n\nexport default function ImagesPreview ({\n  images,\n  onImageClick,\n  activeImage\n}: Props){\n  return (\n    <div className=\"images-preview\">\n      {images.map((image, idx) => (\n        <div\n          className={`images-preview__image${activeImage === idx\n            ? '--active'\n            : ''}`}\n          key={image}\n          onClick={() => onImageClick(idx)}>\n          <img src={image} alt=\"post\" />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport './slide-bar.styles.scss';\n\ninterface IProps {\n  slides: string[];\n  activeSlide: number;\n  setActiveSlide: (slide: number) => void;\n}\n\nexport default function SlideBar ({\n  slides,\n  activeSlide,\n  setActiveSlide\n}: IProps){\n  return (\n    <div className=\"slide-bar\">\n      {slides.map((slide, idx) => (\n        <div\n          className={`slide${idx < activeSlide\n            ? '--active'\n            : idx === activeSlide ? '--last-active' : ''}`}\n          key={slide}>\n          <div onClick={() => setActiveSlide(idx)}>{idx + 1}</div>\n          <span>{slide}</span>\n        </div>\n      ))}\n      <div\n        className={`slide-bar__line`}\n        style={{\n          width: `calc(((100% - (120px * ${slides.length})) / ${slides.length -\n            1} + 80px) * ${activeSlide} + 40px * ${activeSlide - 1 >= 0\n            ? activeSlide - 1\n            : 0})`\n        }}\n      />\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport Button from '../../../components/button/button.component';\nimport './post-input.styles.scss';\nimport useForm from '../../../effects/useForm.effect';\nimport { validateUrl } from '../../../utils/validations';\nimport { fetchApi } from '../../../redux/fetch/fetch.actions';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { addTempPost } from '../../../redux/add-post/add-post.actions';\nimport CenterInput from '../../../components/center-input/center-input.component';\n\ninterface IProps {\n  posts: string[];\n  error?: string;\n  addUrlPost: (url: string) => void;\n  addTempPost: (url: string, file: File) => void;\n}\n\nfunction PostInputPlain ({ posts, addUrlPost, addTempPost, error }: IProps){\n  const [ data, handleChange, handleSubmit, submitErrors ] = useForm(\n    {\n      url: {\n        value: '',\n        error: '',\n        validation: validateUrl\n      }\n    },\n    () => {\n      addUrlPost(data.url.value);\n      data.url.value = '';\n    }\n  );\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const tempUrl = URL.createObjectURL(file);\n    addTempPost(tempUrl, file);\n  };\n\n  const { url } = data;\n\n  return (\n    <div className=\"post-input\">\n      <div className=\"post-input__info\">\n        <h1>\n          {posts.length === 0 ? (\n            'Add images of your UI design!'\n          ) : (\n            `You have added ${posts.length} image${posts.length > 1 ? 's' : ''}`\n          )}\n        </h1>\n        <span className=\"post-input__info__first-image-info\">\n          First image is the thumbnail for your post\n        </span>\n        <span>You can add {10 - posts.length} more image(s)</span>\n      </div>\n      <div className=\"post-input__input-url\">\n        <CenterInput\n          label=\"Website URL\"\n          name=\"url\"\n          value={url.value}\n          error={url.error}\n          onChange={handleChange}\n        />\n        <span className=\"post-input__input-url__desc\">\n          Give us your website URL and we will take the screenshot of it for\n          you!\n          <span>&nbsp;(websites with vh units might behave strangely)</span>\n        </span>\n        <span className=\"post-input__input-url__error\">\n          {submitErrors || error}\n        </span>\n        <Button onClick={handleSubmit}>Take Screenshot</Button>\n      </div>\n      <div className=\"post-input__separator\">\n        <span>or</span>\n      </div>\n      <div className=\"post-input__input-file\">\n        <input\n          type=\"file\"\n          name=\"image\"\n          id=\"file-input\"\n          onChange={handleFileChange}\n        />\n        <Button full>\n          <label htmlFor=\"file-input\">Choose File</label>\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addUrlPost: (url: string) =>\n    dispatch(fetchApi({ name: 'ADD_URL_POST', data: { url } })),\n  addTempPost: (url: string, file?: File) =>\n    dispatch(addTempPost({ image: url, file }))\n});\n\nconst PostInput = connect(null, mapDispatchToProps)(PostInputPlain);\nexport default PostInput;\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function CheckIcon (props: IProps){\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M9.392 17.919l-6.53-6.122l1.026-1.094l5.47 5.128L20.094 5.095l1.061 1.061L9.391 17.92z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n}\n","import React from 'react';\nimport CrossIcon from '../../../components/icons/cross/cross.compnent';\nimport CheckIcon from '../../../components/icons/check/check.component';\nimport './post-confirmation-modal.styles.scss';\n\ninterface IProps {\n  image: string;\n  file?: File;\n  closeOverlay: () => void;\n  confirmImage: (image: string, file?: File) => void;\n}\n\nexport default function PostConfirmationOverlay ({\n  image,\n  file,\n  closeOverlay,\n  confirmImage\n}: IProps){\n  return (\n    <div className={`post-confirmation-overlay${image === '' ? '--hide' : ''}`}>\n      <div className=\"post-confirmation-overlay__image scrollbar\">\n        <img src={image} alt=\"post\" />\n      </div>\n      <div\n        className=\"post-confirmation-overlay__confirm\"\n        onClick={closeOverlay}>\n        <div className=\"post-confirmation-overlay__confirm__content\">\n          <h1>Do you want to use this image?</h1>\n          <div className=\"post-confirmation-overlay__confirm__content__actions\">\n            <div className=\"post-confirmation-overlay__confirm__content__actions__no\">\n              <CrossIcon color=\"white\" size={3} />\n              <button onClick={closeOverlay} />\n            </div>\n            <div className=\"post-confirmation-overlay__confirm__content__actions__yes\">\n              <CheckIcon color=\"#00a3ff\" size={3} />\n              <button onClick={() => confirmImage(image, file)} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport './post-description-input.styles.scss';\nimport { connect } from 'react-redux';\nimport { GlobalState } from '../../../redux/root-reducer';\nimport { Dispatch } from 'redux';\nimport {\n  changeDesc,\n  changeTitle\n} from '../../../redux/add-post/add-post.actions';\nimport CenterInput from '../../../components/center-input/center-input.component';\n\ninterface IProps {\n  description: string;\n  title: string;\n  changeDesc: (desc: string) => void;\n  changeTitle: (title: string) => void;\n}\n\nfunction validateTitle (title: string){\n  if (title.length >= 15) return 'Title must be less than 15 characters';\n  return '';\n}\n\nfunction PostDescriptionInputPlain ({\n  description,\n  title,\n  changeDesc,\n  changeTitle\n}: IProps){\n  const [ titleError, setTitleError ] = useState(validateTitle(title));\n\n  const handleChangeDesc = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    changeDesc(e.target.value);\n  };\n  const handleChangeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n    const error = validateTitle(e.target.value);\n    setTitleError(error);\n    changeTitle(e.target.value);\n  };\n\n  return (\n    <div className=\"post-description-input\">\n      <h1>Add your post details</h1>\n      <span className=\"post-description-input__info\">\n        Tell your viewer the details of your design!\n      </span>\n      <CenterInput\n        name=\"title\"\n        value={title}\n        onChange={handleChangeTitle}\n        label=\"Title\"\n        error={titleError}\n        className=\"post-description-input__title\"\n      />\n      <span className=\"post-description-input__title-info\">\n        Make short but catchy title! <span>(less than 15 characters)</span>\n      </span>\n      <CenterInput\n        name=\"description\"\n        value={description}\n        onChange={handleChangeDesc}\n        label=\"Description\"\n        useTextarea\n        className=\"post-description-input__desc\"\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ addPost: { description, title } }: GlobalState) => ({\n  description,\n  title\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  changeDesc: (desc: string) => dispatch(changeDesc(desc)),\n  changeTitle: (title: string) => dispatch(changeTitle(title))\n});\n\nconst PostDescriptionInput = connect(mapStateToProps, mapDispatchToProps)(\n  PostDescriptionInputPlain\n);\nexport default PostDescriptionInput;\n","import React, { ChangeEvent, useState } from 'react';\nimport './post-link-input.styles.scss';\nimport Button from '../../../components/button/button.component';\nimport { validateUrlOrEmpty } from '../../../utils/validations';\nimport { GlobalState } from '../../../redux/root-reducer';\nimport { Dispatch } from 'redux';\nimport { changeLink } from '../../../redux/add-post/add-post.actions';\nimport { connect } from 'react-redux';\nimport { fetchApi } from '../../../redux/fetch/fetch.actions';\nimport CenterInput from '../../../components/center-input/center-input.component';\n\ninterface IProps {\n  link: string;\n  isFetching?: boolean;\n  error?: string;\n  changeLink: (link: string) => void;\n  postNewPost: () => void;\n}\n\nfunction PostLinkInputPlain ({ link, changeLink, postNewPost }: IProps){\n  const [ submitError, setSubmitError ] = useState('');\n  const [ linkError, setLinkError ] = useState(validateUrlOrEmpty(link));\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setLinkError(validateUrlOrEmpty(e.target.value));\n    changeLink(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    const error = validateUrlOrEmpty(link);\n    setSubmitError(error);\n\n    if (error) return;\n    postNewPost();\n  };\n\n  return (\n    <div className=\"post-link-input\">\n      <h1>Tell us your design link</h1>\n      <span className=\"post-link-input__info\">\n        Input relevant link to see your design <span>(optional)</span>\n      </span>\n      <CenterInput\n        label=\"Link\"\n        name=\"link\"\n        value={link}\n        error={linkError}\n        onChange={handleChange}\n      />\n      <span className=\"post-link-input__error\">{submitError}</span>\n      <Button onClick={handleSubmit}>Create Post!</Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ addPost: { link } }: GlobalState) => ({\n  link\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  changeLink: (link: string) => dispatch(changeLink(link)),\n  postNewPost: () => dispatch(fetchApi({ name: 'POST_NEW_POST' }))\n});\n\nconst PostLinkInput = connect(mapStateToProps, mapDispatchToProps)(\n  PostLinkInputPlain\n);\nexport default PostLinkInput;\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function CheckCircleIcon (props: IProps){\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10s10-4.486 10-10S17.514 2 12 2zm-1.999 14.413l-3.713-3.705L7.7 11.292l2.299 2.295l5.294-5.294l1.414 1.414l-6.706 6.706z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n}\n","import React from 'react';\nimport Icon from '../icon.component';\nimport { IProps } from '../icon.interfaces';\n\nexport default function CrossCircleIcon (props: IProps){\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M19.1 4.9C15.2 1 8.8 1 4.9 4.9S1 15.2 4.9 19.1s10.2 3.9 14.1 0s4-10.3.1-14.2zm-4.3 11.3L12 13.4l-2.8 2.8l-1.4-1.4l2.8-2.8l-2.8-2.8l1.4-1.4l2.8 2.8l2.8-2.8l1.4 1.4l-2.8 2.8l2.8 2.8l-1.4 1.4z\"\n        fill=\"currentColor\"\n      />\n    </Icon>\n  );\n}\n","import React, { ReactElement, useRef, useEffect, Fragment } from 'react';\nimport './post-loading-modal.styles.scss';\nimport { GlobalState } from '../../../redux/root-reducer';\nimport { connect } from 'react-redux';\nimport Loading from '../../../components/loading/loading.component';\nimport CheckCircleIcon from '../../../components/icons/check-circle/check-circle.component';\nimport CrossCircleIcon from '../../../components/icons/cross-circle/cross-circle.component';\nimport { useHistory } from 'react-router-dom';\n\ninterface Props {\n  isFetching?: boolean;\n  error?: string;\n}\n\nfunction PostLoadingModalPlain ({ isFetching, error }: Props): ReactElement{\n  const hasUploaded = useRef(false);\n  const history = useHistory();\n  useEffect(\n    () => {\n      if (isFetching && !hasUploaded.current) hasUploaded.current = true;\n    },\n    [ isFetching ]\n  );\n\n  useEffect(\n    () => {\n      if (hasUploaded.current && !isFetching && !error) {\n        setTimeout(() => {\n          history.push('/');\n        }, 3000);\n      }\n    },\n    [ isFetching, error, history ]\n  );\n\n  return (\n    <div\n      className={`post-loading-modal${isFetching || hasUploaded.current\n        ? ''\n        : '--hide'}`}>\n      <div>\n        {isFetching ? (\n          <Fragment>\n            <Loading />\n            <h2>Please wait while we process your post...</h2>\n          </Fragment>\n        ) : error ? (\n          <Fragment>\n            <CrossCircleIcon className=\"finished-icon error\" size={10} />\n            <h2>{error}</h2>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <CheckCircleIcon className=\"finished-icon success\" size={10} />\n            <h2>Your post have successfully created!</h2>\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  fetchController: {\n    errors: { POST_NEW_POST: error },\n    isFetching: { POST_NEW_POST: isFetching }\n  }\n}: GlobalState) => ({\n  isFetching,\n  error\n});\n\nconst PostLoadingModal = connect(mapStateToProps)(PostLoadingModalPlain);\nexport default PostLoadingModal;\n","import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport ImageCarousel from '../../components/image-carousel/image-carousel.component';\nimport ImagesPreview from '../../components/images-preview/images-preview.component';\n\nimport './add-post-page.styles.scss';\nimport PlusIcon from '../../components/icons/plus/plus.component';\nimport SlideBar from '../../components/slide-bar/slide-bar.components';\nimport PostInput from './post-input/post-input.component';\nimport AngleIcon from '../../components/icons/angle/angle.component';\nimport Loading from '../../components/loading/loading.component';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\nimport PostConfirmationOverlay from './post-confirmation-modal/post-confirmation-modal.component';\nimport { Dispatch } from 'redux';\nimport {\n  clearTempPost,\n  addPost,\n  removePost\n} from '../../redux/add-post/add-post.actions';\nimport PostDescriptionInput from './post-description-input/post-description-input.component';\nimport PostLinkInput from './post-link-input/post-link-input.component';\nimport PostLoadingModal from './post-loading-modal/post-loading-modal.component';\n\ninterface IProps {\n  posts: { link: string; file?: File }[];\n  tempImage: string;\n  tempFile?: File;\n  error?: string;\n  title: string;\n  description: string;\n  isFetching?: boolean;\n  clearTempPost: () => void;\n  addPost: (image: string, file?: File) => void;\n  removePost: (index: number) => void;\n}\n\nconst slides = [ 'Images', 'Details', 'Links' ];\n\nfunction AddPostPagePlain ({\n  posts,\n  tempImage,\n  isFetching,\n  error,\n  description,\n  title,\n  tempFile,\n  clearTempPost,\n  addPost,\n  removePost\n}: IProps){\n  const [ currentStep, setCurrentStep ] = useState(0);\n  const [ slideIndex, setSlideIndex ] = useState(0);\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const canMoveToNextStep = useCallback(\n    () => {\n      if (currentStep === 0 && posts.length === 0) return false;\n      if (currentStep === 1 && (!title || !description)) return false;\n\n      return true;\n    },\n    [ currentStep, posts, title, description ]\n  );\n\n  useEffect(\n    () => {\n      setSlideIndex(posts.length - 1);\n    },\n    [ posts ]\n  );\n\n  const handleButtonClick = (target: number) => () => {\n    if (target === currentStep) return;\n    if (target > currentStep && !canMoveToNextStep()) return;\n    setCurrentStep(target);\n  };\n\n  const scrollToInput = () => {\n    if (window.innerWidth > 900) return;\n    if (inputRef.current)\n      window.scrollTo({\n        top: inputRef.current.getBoundingClientRect().top,\n        behavior: 'smooth'\n      });\n  };\n\n  const images = posts.map(({ link }) => link);\n\n  return (\n    <div className=\"add-post-page\">\n      <PostConfirmationOverlay\n        closeOverlay={clearTempPost}\n        image={tempImage}\n        file={tempFile}\n        confirmImage={addPost}\n      />\n      <PostLoadingModal />\n      <div className=\"add-post-page__container\">\n        <div className=\"add-post-page__container__images scrollbar\">\n          {posts.length === 0 ? (\n            <div className=\"add-post-page__container__images__plus\">\n              <PlusIcon color=\"white\" size={5} onClick={scrollToInput} />\n              <h2>Add at least 1 image to your post!</h2>\n            </div>\n          ) : (\n            <ImageCarousel\n              images={images}\n              slideIndex={slideIndex}\n              setSlideIndex={setSlideIndex}\n              onDeleteClick={removePost}\n            />\n          )}\n        </div>\n        <div className=\"add-post-page__container__image-preview\">\n          <ImagesPreview\n            images={images}\n            onImageClick={setSlideIndex}\n            activeImage={slideIndex}\n          />\n        </div>\n        <div className=\"add-post-page__container__content\" ref={inputRef}>\n          <div\n            className={`add-post-page__container__content__overlay${!isFetching\n              ? '--hide'\n              : ''}`}>\n            <div>\n              <Loading />\n              <h2>Sit tight! Your image will be ready in a few seconds!</h2>\n            </div>\n          </div>\n          <div className=\"add-post-page__container__content__content\">\n            <SlideBar\n              activeSlide={currentStep}\n              setActiveSlide={(idx: number) => {\n                if (!canMoveToNextStep() && idx > currentStep) return;\n                setCurrentStep(idx);\n              }}\n              slides={slides}\n            />\n\n            {currentStep === 0 ? (\n              <PostInput posts={images} error={error} />\n            ) : currentStep === 1 ? (\n              <PostDescriptionInput />\n            ) : (\n              <PostLinkInput />\n            )}\n\n            <div className=\"add-post-page__container__content__content__actions\">\n              <div\n                className={`button-step${currentStep - 1 < 0\n                  ? '--hide'\n                  : ''} add-post-page__container__content__content__actions__prev`}>\n                <button onClick={handleButtonClick(currentStep - 1)}>\n                  <AngleIcon color=\"white\" />\n                </button>\n                <span>Prev</span>\n              </div>\n              <div\n                className={`button-step${currentStep + 1 >= slides.length\n                  ? '--hide'\n                  : ''} add-post-page__container__content__content__actions__next`}>\n                <button\n                  disabled={!canMoveToNextStep()}\n                  onClick={handleButtonClick(currentStep + 1)}>\n                  <AngleIcon rotate={180} color=\"white\" />\n                </button>\n                <span>Next</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  addPost: { images, tempImage, tempFile, title, description },\n  fetchController: {\n    errors: { ADD_URL_POST: error },\n    isFetching: { ADD_URL_POST: isFetching }\n  }\n}: GlobalState) => ({\n  posts: images,\n  tempImage,\n  tempFile,\n  error,\n  isFetching,\n  title,\n  description\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  clearTempPost: () => dispatch(clearTempPost()),\n  addPost: (image: string, file?: File) => dispatch(addPost({ image, file })),\n  removePost: (index: number) => dispatch(removePost({ index }))\n});\n\nconst AddPostPage = connect(mapStateToProps, mapDispatchToProps)(\n  AddPostPagePlain\n);\nexport default AddPostPage;\n","import React, { ReactElement, FunctionComponent } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { User } from '../@types/user.interfaces';\nimport { GlobalState } from '../redux/root-reducer';\n\ninterface Props extends RouteProps {\n  component: FunctionComponent<any>;\n  user: User | null;\n}\n\nfunction UserOnlyRoutePlain ({\n  user,\n  component: Component,\n  ...rest\n}: Props): ReactElement{\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Component {...props} /> : <Redirect to=\"/login\" />}\n    />\n  );\n}\n\nconst mapStateToProps = ({ user: { self: { data } } }: GlobalState) => ({\n  user: data\n});\n\nconst UserOnlyRoute = connect(mapStateToProps)(UserOnlyRoutePlain);\nexport default UserOnlyRoute;\n","import React, { ReactElement, FunctionComponent } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { User } from '../@types/user.interfaces';\nimport { GlobalState } from '../redux/root-reducer';\n\ninterface Props extends RouteProps {\n  component: FunctionComponent<any>;\n  user: User | null;\n}\n\nfunction GuestOnlyRoutePlain ({\n  user,\n  component: Component,\n  ...rest\n}: Props): ReactElement{\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !user ? <Component {...props} /> : <Redirect to=\"/\" />}\n    />\n  );\n}\n\nconst mapStateToProps = ({ user: { self: { data } } }: GlobalState) => ({\n  user: data\n});\n\nconst GuestOnlyRoute = connect(mapStateToProps)(GuestOnlyRoutePlain);\nexport default GuestOnlyRoute;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from '../../pages/home-page/home-page.component';\nimport DetailPage from '../../pages/detail-page/detail-page.component';\nimport SavedPage from '../../pages/saved-page/saved-page.component';\nimport ProfilePage from '../../pages/profile-page/profile-page.component';\nimport ErrorMessage from '../../components/error-message/error-message.component';\nimport { GlobalState } from '../../redux/root-reducer';\nimport { connect } from 'react-redux';\nimport { User } from '../../@types/user.interfaces';\nimport LoginPage from '../../pages/login-page/login-page.component';\nimport RegisterPage from '../../pages/register-page/register-page.component';\nimport PostPagePlain from '../../pages/post-page/post-page.components';\nimport AddPostPage from '../../pages/add-post-page/add-post-page.component';\nimport UserOnlyRoute from '../UserOnlyRoute';\nimport GuestOnlyRoute from '../GuestOnlyRoute';\n\ninterface IProps {\n  user: User | null;\n}\n\nconst routes = [\n  {\n    path: '/',\n    component: HomePage\n  },\n  {\n    path: '/login',\n    component: LoginPage,\n    guestOnly: true\n  },\n  {\n    path: '/register',\n    component: RegisterPage,\n    guestOnly: true\n  },\n  {\n    path: '/saved',\n    component: SavedPage,\n    userOnly: true\n  },\n  {\n    path: '/post-detail/:id',\n    component: DetailPage\n  },\n  {\n    path: '/profile/:id',\n    component: ProfilePage\n  },\n  {\n    path: '/post',\n    component: PostPagePlain,\n    userOnly: true\n  },\n  {\n    path: '/add-post',\n    component: AddPostPage,\n    userOnly: true\n  }\n];\n\nfunction MainRoutePlain ({ user }: IProps){\n  return (\n    <div className=\"main-route\">\n      <Switch>\n        {routes.map(\n          ({ component, path, userOnly, guestOnly }) =>\n            userOnly ? (\n              <UserOnlyRoute\n                path={path}\n                exact\n                key={path}\n                component={component}\n              />\n            ) : guestOnly ? (\n              <GuestOnlyRoute\n                path={path}\n                exact\n                key={path}\n                component={component}\n              />\n            ) : (\n              <Route path={path} exact key={path} component={component} />\n            )\n        )}\n\n        <Route\n          path=\"*\"\n          render={() => (\n            <ErrorMessage\n              message=\"404: Page you requested not found\"\n              size={2}\n            />\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ user: { self: { data } } }: GlobalState) => ({\n  user: data\n});\n\nconst MainRoute = connect(mapStateToProps)(MainRoutePlain);\nexport default MainRoute;\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport Navbar from './components/navbar/navbar.component';\nimport Sidenav from './components/sidenav/sidenav.component';\nimport MainRoute from './routes/main-route/main-route.component';\nimport { connect } from 'react-redux';\nimport { GlobalState } from './redux/root-reducer';\nimport { User } from './@types/user.interfaces';\nimport { Dispatch } from 'redux';\nimport { fetchApi } from './redux/fetch/fetch.actions';\n\ninterface IProps {\n  inDarkMode: boolean;\n  user: User | null;\n  isChecked: boolean;\n  checkUser: () => void;\n}\n\nfunction AppPlain ({ user, inDarkMode, checkUser, isChecked }: IProps){\n  useEffect(\n    () => {\n      checkUser();\n    },\n    [ checkUser ]\n  );\n\n  if (inDarkMode) {\n    document.body.classList.add('dark');\n  }\n\n  return (\n    <div className=\"App\">\n      {user ? <Sidenav /> : null}\n      <Navbar />\n      <main className={!user ? 'no-user' : ''}>\n        {isChecked ? <MainRoute /> : null}\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  user: { self: { data }, isChecked },\n  colorMode: { inDarkMode }\n}: GlobalState) => ({\n  inDarkMode,\n  user: data,\n  isChecked\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  checkUser: () => dispatch(fetchApi({ name: 'CHECK_USER' }))\n});\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(AppPlain);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}